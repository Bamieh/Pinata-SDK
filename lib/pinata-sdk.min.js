!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("pinata-sdk",[],n):"object"==typeof exports?exports["pinata-sdk"]=n():e["pinata-sdk"]=n()}("undefined"!=typeof self?self:this,function(){return function(e){var n={};function i(t){if(n[t])return n[t].exports;var a=n[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=e,i.c=n,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)i.d(t,a,function(n){return e[n]}.bind(null,a));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="",i(i.s=163)}([function(e,n,i){var t=i(2),a=i(19),o=i(11),r=i(12),s=i(20),c=function(e,n,i){var p,u,l,f,d=e&c.F,m=e&c.G,h=e&c.S,x=e&c.P,v=e&c.B,b=m?t:h?t[n]||(t[n]={}):(t[n]||{}).prototype,g=m?a:a[n]||(a[n]={}),k=g.prototype||(g.prototype={});for(p in m&&(i=n),i)l=((u=!d&&b&&void 0!==b[p])?b:i)[p],f=v&&u?s(l,t):x&&"function"==typeof l?s(Function.call,l):l,b&&r(b,p,l,e&c.U),g[p]!=l&&o(g,p,f),x&&k[p]!=l&&(k[p]=l)};t.core=a,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,n,i){var t=i(4);e.exports=function(e){if(!t(e))throw TypeError(e+" is not an object!");return e}},function(e,n){var i=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=i)},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,n,i){var t=i(55)("wks"),a=i(37),o=i(2).Symbol,r="function"==typeof o;(e.exports=function(e){return t[e]||(t[e]=r&&o[e]||(r?o:a)("Symbol."+e))}).store=t},function(e,n,i){e.exports=!i(3)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,n,i){var t=i(1),a=i(107),o=i(23),r=Object.defineProperty;n.f=i(6)?Object.defineProperty:function(e,n,i){if(t(e),n=o(n,!0),t(i),a)try{return r(e,n,i)}catch(e){}if("get"in i||"set"in i)throw TypeError("Accessors not supported!");return"value"in i&&(e[n]=i.value),e}},function(e,n,i){var t=i(25),a=Math.min;e.exports=function(e){return e>0?a(t(e),9007199254740991):0}},function(e,n,i){var t=i(24);e.exports=function(e){return Object(t(e))}},function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,n,i){var t=i(7),a=i(36);e.exports=i(6)?function(e,n,i){return t.f(e,n,a(1,i))}:function(e,n,i){return e[n]=i,e}},function(e,n,i){var t=i(2),a=i(11),o=i(15),r=i(37)("src"),s=Function.toString,c=(""+s).split("toString");i(19).inspectSource=function(e){return s.call(e)},(e.exports=function(e,n,i,s){var p="function"==typeof i;p&&(o(i,"name")||a(i,"name",n)),e[n]!==i&&(p&&(o(i,r)||a(i,r,e[n]?""+e[n]:c.join(String(n)))),e===t?e[n]=i:s?e[n]?e[n]=i:a(e,n,i):(delete e[n],a(e,n,i)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[r]||s.call(this)})},function(e,n,i){var t=i(0),a=i(3),o=i(24),r=/"/g,s=function(e,n,i,t){var a=String(o(e)),s="<"+n;return""!==i&&(s+=" "+i+'="'+String(t).replace(r,"&quot;")+'"'),s+">"+a+"</"+n+">"};e.exports=function(e,n){var i={};i[e]=n(s),t(t.P+t.F*a(function(){var n=""[e]('"');return n!==n.toLowerCase()||n.split('"').length>3}),"String",i)}},function(e,n,i){"use strict";var t=i(141),a=i(369),o=Object.prototype.toString;function r(e){return"[object Array]"===o.call(e)}function s(e){return null!==e&&"object"==typeof e}function c(e){return"[object Function]"===o.call(e)}function p(e,n){if(null!=e)if("object"!=typeof e&&(e=[e]),r(e))for(var i=0,t=e.length;i<t;i++)n.call(null,e[i],i,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.call(null,e[a],a,e)}e.exports={isArray:r,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:a,isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:c,isStream:function(e){return s(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:p,merge:function e(){var n={};function i(i,t){"object"==typeof n[t]&&"object"==typeof i?n[t]=e(n[t],i):n[t]=i}for(var t=0,a=arguments.length;t<a;t++)p(arguments[t],i);return n},extend:function(e,n,i){return p(n,function(n,a){e[a]=i&&"function"==typeof n?t(n,i):n}),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,n){var i={}.hasOwnProperty;e.exports=function(e,n){return i.call(e,n)}},function(e,n,i){var t=i(51),a=i(24);e.exports=function(e){return t(a(e))}},function(e,n,i){var t=i(52),a=i(36),o=i(16),r=i(23),s=i(15),c=i(107),p=Object.getOwnPropertyDescriptor;n.f=i(6)?p:function(e,n){if(e=o(e),n=r(n,!0),c)try{return p(e,n)}catch(e){}if(s(e,n))return a(!t.f.call(e,n),e[n])}},function(e,n,i){var t=i(15),a=i(9),o=i(75)("IE_PROTO"),r=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=a(e),t(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?r:null}},function(e,n){var i=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=i)},function(e,n,i){var t=i(10);e.exports=function(e,n,i){if(t(e),void 0===n)return e;switch(i){case 1:return function(i){return e.call(n,i)};case 2:return function(i,t){return e.call(n,i,t)};case 3:return function(i,t,a){return e.call(n,i,t,a)}}return function(){return e.apply(n,arguments)}}},function(e,n){var i={}.toString;e.exports=function(e){return i.call(e).slice(8,-1)}},function(e,n,i){"use strict";var t=i(3);e.exports=function(e,n){return!!e&&t(function(){n?e.call(null,function(){},1):e.call(null)})}},function(e,n,i){var t=i(4);e.exports=function(e,n){if(!t(e))return e;var i,a;if(n&&"function"==typeof(i=e.toString)&&!t(a=i.call(e)))return a;if("function"==typeof(i=e.valueOf)&&!t(a=i.call(e)))return a;if(!n&&"function"==typeof(i=e.toString)&&!t(a=i.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,n){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,n){var i=Math.ceil,t=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?t:i)(e)}},function(e,n,i){var t=i(0),a=i(19),o=i(3);e.exports=function(e,n){var i=(a.Object||{})[e]||Object[e],r={};r[e]=n(i),t(t.S+t.F*o(function(){i(1)}),"Object",r)}},function(e,n,i){var t=i(20),a=i(51),o=i(9),r=i(8),s=i(92);e.exports=function(e,n){var i=1==e,c=2==e,p=3==e,u=4==e,l=6==e,f=5==e||l,d=n||s;return function(n,s,m){for(var h,x,v=o(n),b=a(v),g=t(s,m,3),k=r(b.length),y=0,S=i?d(n,k):c?d(n,0):void 0;k>y;y++)if((f||y in b)&&(x=g(h=b[y],y,v),e))if(i)S[y]=x;else if(x)switch(e){case 3:return!0;case 5:return h;case 6:return y;case 2:S.push(h)}else if(u)return!1;return l?-1:p||u?u:S}}},function(e,n,i){"use strict";if(i(6)){var t=i(34),a=i(2),o=i(3),r=i(0),s=i(66),c=i(98),p=i(20),u=i(43),l=i(36),f=i(11),d=i(45),m=i(25),h=i(8),x=i(133),v=i(39),b=i(23),g=i(15),k=i(53),y=i(4),S=i(9),w=i(89),_=i(40),E=i(18),B=i(41).f,j=i(91),I=i(37),N=i(5),A=i(27),C=i(56),K=i(63),O=i(94),L=i(48),P=i(60),M=i(42),T=i(93),F=i(123),R=i(7),z=i(17),q=R.f,D=z.f,U=a.RangeError,V=a.TypeError,$=a.Uint8Array,H=Array.prototype,W=c.ArrayBuffer,G=c.DataView,J=A(0),X=A(2),Y=A(3),Z=A(4),Q=A(5),ee=A(6),ne=C(!0),ie=C(!1),te=O.values,ae=O.keys,oe=O.entries,re=H.lastIndexOf,se=H.reduce,ce=H.reduceRight,pe=H.join,ue=H.sort,le=H.slice,fe=H.toString,de=H.toLocaleString,me=N("iterator"),he=N("toStringTag"),xe=I("typed_constructor"),ve=I("def_constructor"),be=s.CONSTR,ge=s.TYPED,ke=s.VIEW,ye=A(1,function(e,n){return Be(K(e,e[ve]),n)}),Se=o(function(){return 1===new $(new Uint16Array([1]).buffer)[0]}),we=!!$&&!!$.prototype.set&&o(function(){new $(1).set({})}),_e=function(e,n){var i=m(e);if(i<0||i%n)throw U("Wrong offset!");return i},Ee=function(e){if(y(e)&&ge in e)return e;throw V(e+" is not a typed array!")},Be=function(e,n){if(!(y(e)&&xe in e))throw V("It is not a typed array constructor!");return new e(n)},je=function(e,n){return Ie(K(e,e[ve]),n)},Ie=function(e,n){for(var i=0,t=n.length,a=Be(e,t);t>i;)a[i]=n[i++];return a},Ne=function(e,n,i){q(e,n,{get:function(){return this._d[i]}})},Ae=function(e){var n,i,t,a,o,r,s=S(e),c=arguments.length,u=c>1?arguments[1]:void 0,l=void 0!==u,f=j(s);if(null!=f&&!w(f)){for(r=f.call(s),t=[],n=0;!(o=r.next()).done;n++)t.push(o.value);s=t}for(l&&c>2&&(u=p(u,arguments[2],2)),n=0,i=h(s.length),a=Be(this,i);i>n;n++)a[n]=l?u(s[n],n):s[n];return a},Ce=function(){for(var e=0,n=arguments.length,i=Be(this,n);n>e;)i[e]=arguments[e++];return i},Ke=!!$&&o(function(){de.call(new $(1))}),Oe=function(){return de.apply(Ke?le.call(Ee(this)):Ee(this),arguments)},Le={copyWithin:function(e,n){return F.call(Ee(this),e,n,arguments.length>2?arguments[2]:void 0)},every:function(e){return Z(Ee(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return T.apply(Ee(this),arguments)},filter:function(e){return je(this,X(Ee(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return Q(Ee(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(Ee(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){J(Ee(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ie(Ee(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return ne(Ee(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return pe.apply(Ee(this),arguments)},lastIndexOf:function(e){return re.apply(Ee(this),arguments)},map:function(e){return ye(Ee(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return se.apply(Ee(this),arguments)},reduceRight:function(e){return ce.apply(Ee(this),arguments)},reverse:function(){for(var e,n=Ee(this).length,i=Math.floor(n/2),t=0;t<i;)e=this[t],this[t++]=this[--n],this[n]=e;return this},some:function(e){return Y(Ee(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ue.call(Ee(this),e)},subarray:function(e,n){var i=Ee(this),t=i.length,a=v(e,t);return new(K(i,i[ve]))(i.buffer,i.byteOffset+a*i.BYTES_PER_ELEMENT,h((void 0===n?t:v(n,t))-a))}},Pe=function(e,n){return je(this,le.call(Ee(this),e,n))},Me=function(e){Ee(this);var n=_e(arguments[1],1),i=this.length,t=S(e),a=h(t.length),o=0;if(a+n>i)throw U("Wrong length!");for(;o<a;)this[n+o]=t[o++]},Te={entries:function(){return oe.call(Ee(this))},keys:function(){return ae.call(Ee(this))},values:function(){return te.call(Ee(this))}},Fe=function(e,n){return y(e)&&e[ge]&&"symbol"!=typeof n&&n in e&&String(+n)==String(n)},Re=function(e,n){return Fe(e,n=b(n,!0))?l(2,e[n]):D(e,n)},ze=function(e,n,i){return!(Fe(e,n=b(n,!0))&&y(i)&&g(i,"value"))||g(i,"get")||g(i,"set")||i.configurable||g(i,"writable")&&!i.writable||g(i,"enumerable")&&!i.enumerable?q(e,n,i):(e[n]=i.value,e)};be||(z.f=Re,R.f=ze),r(r.S+r.F*!be,"Object",{getOwnPropertyDescriptor:Re,defineProperty:ze}),o(function(){fe.call({})})&&(fe=de=function(){return pe.call(this)});var qe=d({},Le);d(qe,Te),f(qe,me,Te.values),d(qe,{slice:Pe,set:Me,constructor:function(){},toString:fe,toLocaleString:Oe}),Ne(qe,"buffer","b"),Ne(qe,"byteOffset","o"),Ne(qe,"byteLength","l"),Ne(qe,"length","e"),q(qe,he,{get:function(){return this[ge]}}),e.exports=function(e,n,i,c){var p=e+((c=!!c)?"Clamped":"")+"Array",l="get"+e,d="set"+e,m=a[p],v=m||{},b=m&&E(m),g=!m||!s.ABV,S={},w=m&&m.prototype,j=function(e,i){q(e,i,{get:function(){return function(e,i){var t=e._d;return t.v[l](i*n+t.o,Se)}(this,i)},set:function(e){return function(e,i,t){var a=e._d;c&&(t=(t=Math.round(t))<0?0:t>255?255:255&t),a.v[d](i*n+a.o,t,Se)}(this,i,e)},enumerable:!0})};g?(m=i(function(e,i,t,a){u(e,m,p,"_d");var o,r,s,c,l=0,d=0;if(y(i)){if(!(i instanceof W||"ArrayBuffer"==(c=k(i))||"SharedArrayBuffer"==c))return ge in i?Ie(m,i):Ae.call(m,i);o=i,d=_e(t,n);var v=i.byteLength;if(void 0===a){if(v%n)throw U("Wrong length!");if((r=v-d)<0)throw U("Wrong length!")}else if((r=h(a)*n)+d>v)throw U("Wrong length!");s=r/n}else s=x(i),o=new W(r=s*n);for(f(e,"_d",{b:o,o:d,l:r,e:s,v:new G(o)});l<s;)j(e,l++)}),w=m.prototype=_(qe),f(w,"constructor",m)):o(function(){m(1)})&&o(function(){new m(-1)})&&P(function(e){new m,new m(null),new m(1.5),new m(e)},!0)||(m=i(function(e,i,t,a){var o;return u(e,m,p),y(i)?i instanceof W||"ArrayBuffer"==(o=k(i))||"SharedArrayBuffer"==o?void 0!==a?new v(i,_e(t,n),a):void 0!==t?new v(i,_e(t,n)):new v(i):ge in i?Ie(m,i):Ae.call(m,i):new v(x(i))}),J(b!==Function.prototype?B(v).concat(B(b)):B(v),function(e){e in m||f(m,e,v[e])}),m.prototype=w,t||(w.constructor=m));var I=w[me],N=!!I&&("values"==I.name||null==I.name),A=Te.values;f(m,xe,!0),f(w,ge,p),f(w,ke,!0),f(w,ve,m),(c?new m(1)[he]==p:he in w)||q(w,he,{get:function(){return p}}),S[p]=m,r(r.G+r.W+r.F*(m!=v),S),r(r.S,p,{BYTES_PER_ELEMENT:n}),r(r.S+r.F*o(function(){v.of.call(m,1)}),p,{from:Ae,of:Ce}),"BYTES_PER_ELEMENT"in w||f(w,"BYTES_PER_ELEMENT",n),r(r.P,p,Le),M(p),r(r.P+r.F*we,p,{set:Me}),r(r.P+r.F*!N,p,Te),t||w.toString==fe||(w.toString=fe),r(r.P+r.F*o(function(){new m(1).slice()}),p,{slice:Pe}),r(r.P+r.F*(o(function(){return[1,2].toLocaleString()!=new m([1,2]).toLocaleString()})||!o(function(){w.toLocaleString.call([1,2])})),p,{toLocaleString:Oe}),L[p]=N?I:A,t||N||f(w,me,A)}}else e.exports=function(){}},function(e,n,i){var t=i(128),a=i(0),o=i(55)("metadata"),r=o.store||(o.store=new(i(131))),s=function(e,n,i){var a=r.get(e);if(!a){if(!i)return;r.set(e,a=new t)}var o=a.get(n);if(!o){if(!i)return;a.set(n,o=new t)}return o};e.exports={store:r,map:s,has:function(e,n,i){var t=s(n,i,!1);return void 0!==t&&t.has(e)},get:function(e,n,i){var t=s(n,i,!1);return void 0===t?void 0:t.get(e)},set:function(e,n,i,t){s(i,t,!0).set(e,n)},keys:function(e,n){var i=s(e,n,!1),t=[];return i&&i.forEach(function(e,n){t.push(n)}),t},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){a(a.S,"Reflect",e)}}},function(e,n,i){e.exports=i(368)},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.baseUrl=void 0;n.baseUrl="https://api.pinata.cloud"},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.validateApiKeys=function(e,n){if(!e||""===e)throw new Error("No pinataApiKey provided! Please provide your pinata api key as an argument when you start this script");if(!n||""===n)throw new Error("No pinataSecretApiKey provided! Please provide your pinata secret api key as an argument when you start this script")},n.validateHostNodes=function(e){if(!Array.isArray(e))throw new Error("host_nodes value must be an array");e.forEach(function(e){if(!a.default.peerMultiaddr(e))throw new Error("host_node array entry: ".concat(e," is not a valid peer multiaddr"))})},n.validateMetadata=function(e){if(e.name&&!("string"==typeof e.name||e.name instanceof String))throw new Error("metadata name must be of type string");if(e.keyvalues){if("object"!==o(e.keyvalues))throw new Error("metatadata keyvalues must be an object");var n=0;Object.entries(e.keyvalues).forEach(function(e){if(n>9)throw new Error("No more than 10 keyvalues can be provided for metadata entries");if("string"!=typeof e[1]&&"boolean"!=typeof e[1]&&isNaN(e[1]))throw new Error("Metadata keyvalue values must be strings, booleans, or numbers");n++})}},n.validatePinataOptions=function(e){if("object"!==o(e))throw new Error("options must be an object");if(e.cidVersion&&0!=e.cidVersion&&1!=e.cidVersion)throw new Error("unsupported or invalid cidVersion")};var t,a=(t=i(54))&&t.__esModule?t:{default:t};function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}},function(e,n,i){var t=i(37)("meta"),a=i(4),o=i(15),r=i(7).f,s=0,c=Object.isExtensible||function(){return!0},p=!i(3)(function(){return c(Object.preventExtensions({}))}),u=function(e){r(e,t,{value:{i:"O"+ ++s,w:{}}})},l=e.exports={KEY:t,NEED:!1,fastKey:function(e,n){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,t)){if(!c(e))return"F";if(!n)return"E";u(e)}return e[t].i},getWeak:function(e,n){if(!o(e,t)){if(!c(e))return!0;if(!n)return!1;u(e)}return e[t].w},onFreeze:function(e){return p&&l.NEED&&c(e)&&!o(e,t)&&u(e),e}}},function(e,n){e.exports=!1},function(e,n,i){var t=i(5)("unscopables"),a=Array.prototype;null==a[t]&&i(11)(a,t,{}),e.exports=function(e){a[t][e]=!0}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n){var i=0,t=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++i+t).toString(36))}},function(e,n,i){var t=i(109),a=i(76);e.exports=Object.keys||function(e){return t(e,a)}},function(e,n,i){var t=i(25),a=Math.max,o=Math.min;e.exports=function(e,n){return(e=t(e))<0?a(e+n,0):o(e,n)}},function(e,n,i){var t=i(1),a=i(110),o=i(76),r=i(75)("IE_PROTO"),s=function(){},c=function(){var e,n=i(73)("iframe"),t=o.length;for(n.style.display="none",i(77).appendChild(n),n.src="javascript:",(e=n.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;t--;)delete c.prototype[o[t]];return c()};e.exports=Object.create||function(e,n){var i;return null!==e?(s.prototype=t(e),i=new s,s.prototype=null,i[r]=e):i=c(),void 0===n?i:a(i,n)}},function(e,n,i){var t=i(109),a=i(76).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return t(e,a)}},function(e,n,i){"use strict";var t=i(2),a=i(7),o=i(6),r=i(5)("species");e.exports=function(e){var n=t[e];o&&n&&!n[r]&&a.f(n,r,{configurable:!0,get:function(){return this}})}},function(e,n){e.exports=function(e,n,i,t){if(!(e instanceof n)||void 0!==t&&t in e)throw TypeError(i+": incorrect invocation!");return e}},function(e,n,i){var t=i(20),a=i(121),o=i(89),r=i(1),s=i(8),c=i(91),p={},u={};(n=e.exports=function(e,n,i,l,f){var d,m,h,x,v=f?function(){return e}:c(e),b=t(i,l,n?2:1),g=0;if("function"!=typeof v)throw TypeError(e+" is not iterable!");if(o(v)){for(d=s(e.length);d>g;g++)if((x=n?b(r(m=e[g])[0],m[1]):b(e[g]))===p||x===u)return x}else for(h=v.call(e);!(m=h.next()).done;)if((x=a(h,b,m.value,n))===p||x===u)return x}).BREAK=p,n.RETURN=u},function(e,n,i){var t=i(12);e.exports=function(e,n,i){for(var a in n)t(e,a,n[a],i);return e}},function(e,n,i){var t=i(7).f,a=i(15),o=i(5)("toStringTag");e.exports=function(e,n,i){e&&!a(e=i?e:e.prototype,o)&&t(e,o,{configurable:!0,value:n})}},function(e,n,i){var t=i(0),a=i(24),o=i(3),r=i(79),s="["+r+"]",c=RegExp("^"+s+s+"*"),p=RegExp(s+s+"*$"),u=function(e,n,i){var a={},s=o(function(){return!!r[e]()||"​"!="​"[e]()}),c=a[e]=s?n(l):r[e];i&&(a[i]=c),t(t.P+t.F*s,"String",a)},l=u.trim=function(e,n){return e=String(a(e)),1&n&&(e=e.replace(c,"")),2&n&&(e=e.replace(p,"")),e};e.exports=u},function(e,n){e.exports={}},function(e,n,i){var t=i(4);e.exports=function(e,n){if(!t(e)||e._t!==n)throw TypeError("Incompatible receiver, "+n+" required!");return e}},function(e,n,i){e.exports={encode:i(397),decode:i(398),encodingLength:i(399)}},function(e,n,i){var t=i(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==t(e)?e.split(""):Object(e)}},function(e,n){n.f={}.propertyIsEnumerable},function(e,n,i){var t=i(21),a=i(5)("toStringTag"),o="Arguments"==t(function(){return arguments}());e.exports=function(e){var n,i,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(i=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),a))?i:o?t(n):"Object"==(r=t(n))&&"function"==typeof n.callee?"Arguments":r}},function(e,n,i){"use strict";const t=i(72),a=i(104),o=i(152),r=i(153),s=i(410),c=i(411),p=/^https?:\/\/[^\/]+\/(ip(f|n)s)\/((\w+).*)/,u=/^\/(ip(f|n)s)\/((\w+).*)/,l=1,f=4,d=/^https?:\/\/([^\/]+)\.(ip(?:f|n)s)\.[^\/]+/;function m(e){try{return new c(e),!0}catch(e){return!1}}function h(e){if(!e)return!1;if(r.isMultiaddr(e))return!0;try{return new r(e),!0}catch(e){return!1}}function x(e,n,i=l,t=f){const a=g(e);if(!a)return!1;const o=a.match(n);if(!o)return!1;if("ipfs"!==o[i])return!1;let r=o[t];return r&&n===d&&(r=r.toLowerCase()),m(r)}function v(e,n,i=l,t){const a=g(e);if(!a)return!1;const o=a.match(n);if(!o)return!1;if("ipns"!==o[i])return!1;if(t&&n===d){let e=o[t];return m(e=e.toLowerCase())}return!0}function b(e){return"string"==typeof e}function g(e){return Buffer.isBuffer(e)?t.encode(e):!!b(e)&&e}const k=e=>x(e,d,2,1),y=e=>v(e,d,2,1);e.exports={multihash:function(e){const n=g(e);try{const e=Buffer.from(t.decode(n));return a.decode(e),!0}catch(e){return!1}},multiaddr:h,peerMultiaddr:function(e){return h(e)&&s.IPFS.matches(e)},cid:m,base32cid:e=>"base32"===function(e){try{return o.isEncoded(e)}catch(e){return!1}}(e)&&m(e),ipfsSubdomain:k,ipnsSubdomain:y,subdomain:e=>k(e)||y(e),subdomainPattern:d,ipfsUrl:e=>x(e,p),ipnsUrl:e=>v(e,p),url:e=>x(e,p)||v(e,p),urlPattern:p,ipfsPath:e=>x(e,u),ipnsPath:e=>v(e,u),path:e=>x(e,u)||v(e,u),pathPattern:u,urlOrPath:e=>x(e,p)||v(e,p)||x(e,u)||v(e,u),cidPath:e=>b(e)&&!m(e)&&x(`/ipfs/${e}`,u)}},function(e,n,i){var t=i(19),a=i(2),o=a["__core-js_shared__"]||(a["__core-js_shared__"]={});(e.exports=function(e,n){return o[e]||(o[e]=void 0!==n?n:{})})("versions",[]).push({version:t.version,mode:i(34)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,n,i){var t=i(16),a=i(8),o=i(39);e.exports=function(e){return function(n,i,r){var s,c=t(n),p=a(c.length),u=o(r,p);if(e&&i!=i){for(;p>u;)if((s=c[u++])!=s)return!0}else for(;p>u;u++)if((e||u in c)&&c[u]===i)return e||u||0;return!e&&-1}}},function(e,n){n.f=Object.getOwnPropertySymbols},function(e,n,i){var t=i(21);e.exports=Array.isArray||function(e){return"Array"==t(e)}},function(e,n,i){var t=i(4),a=i(21),o=i(5)("match");e.exports=function(e){var n;return t(e)&&(void 0!==(n=e[o])?!!n:"RegExp"==a(e))}},function(e,n,i){var t=i(5)("iterator"),a=!1;try{var o=[7][t]();o.return=function(){a=!0},Array.from(o,function(){throw 2})}catch(e){}e.exports=function(e,n){if(!n&&!a)return!1;var i=!1;try{var o=[7],r=o[t]();r.next=function(){return{done:i=!0}},o[t]=function(){return r},e(o)}catch(e){}return i}},function(e,n,i){"use strict";var t=i(1);e.exports=function(){var e=t(this),n="";return e.global&&(n+="g"),e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.unicode&&(n+="u"),e.sticky&&(n+="y"),n}},function(e,n,i){"use strict";var t=i(11),a=i(12),o=i(3),r=i(24),s=i(5);e.exports=function(e,n,i){var c=s(e),p=i(r,c,""[e]),u=p[0],l=p[1];o(function(){var n={};return n[c]=function(){return 7},7!=""[e](n)})&&(a(String.prototype,e,u),t(RegExp.prototype,c,2==n?function(e,n){return l.call(e,this,n)}:function(e){return l.call(e,this)}))}},function(e,n,i){var t=i(1),a=i(10),o=i(5)("species");e.exports=function(e,n){var i,r=t(e).constructor;return void 0===r||null==(i=t(r)[o])?n:a(i)}},function(e,n,i){var t=i(2).navigator;e.exports=t&&t.userAgent||""},function(e,n,i){"use strict";var t=i(2),a=i(0),o=i(12),r=i(45),s=i(33),c=i(44),p=i(43),u=i(4),l=i(3),f=i(60),d=i(46),m=i(80);e.exports=function(e,n,i,h,x,v){var b=t[e],g=b,k=x?"set":"add",y=g&&g.prototype,S={},w=function(e){var n=y[e];o(y,e,"delete"==e?function(e){return!(v&&!u(e))&&n.call(this,0===e?0:e)}:"has"==e?function(e){return!(v&&!u(e))&&n.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!u(e)?void 0:n.call(this,0===e?0:e)}:"add"==e?function(e){return n.call(this,0===e?0:e),this}:function(e,i){return n.call(this,0===e?0:e,i),this})};if("function"==typeof g&&(v||y.forEach&&!l(function(){(new g).entries().next()}))){var _=new g,E=_[k](v?{}:-0,1)!=_,B=l(function(){_.has(1)}),j=f(function(e){new g(e)}),I=!v&&l(function(){for(var e=new g,n=5;n--;)e[k](n,n);return!e.has(-0)});j||((g=n(function(n,i){p(n,g,e);var t=m(new b,n,g);return null!=i&&c(i,x,t[k],t),t})).prototype=y,y.constructor=g),(B||I)&&(w("delete"),w("has"),x&&w("get")),(I||E)&&w(k),v&&y.clear&&delete y.clear}else g=h.getConstructor(n,e,x,k),r(g.prototype,i),s.NEED=!0;return d(g,e),S[e]=g,a(a.G+a.W+a.F*(g!=b),S),v||h.setStrong(g,e,x),g}},function(e,n,i){for(var t,a=i(2),o=i(11),r=i(37),s=r("typed_array"),c=r("view"),p=!(!a.ArrayBuffer||!a.DataView),u=p,l=0,f="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");l<9;)(t=a[f[l++]])?(o(t.prototype,s,!0),o(t.prototype,c,!0)):u=!1;e.exports={ABV:p,CONSTR:u,TYPED:s,VIEW:c}},function(e,n,i){"use strict";e.exports=i(34)||!i(3)(function(){var e=Math.random();__defineSetter__.call(null,e,function(){}),delete i(2)[e]})},function(e,n,i){"use strict";var t=i(0);e.exports=function(e){t(t.S,e,{of:function(){for(var e=arguments.length,n=new Array(e);e--;)n[e]=arguments[e];return new this(n)}})}},function(e,n,i){"use strict";var t=i(0),a=i(10),o=i(20),r=i(44);e.exports=function(e){t(t.S,e,{from:function(e){var n,i,t,s,c=arguments[1];return a(this),(n=void 0!==c)&&a(c),null==e?new this:(i=[],n?(t=0,s=o(c,arguments[2],2),r(e,!1,function(e){i.push(s(e,t++))})):r(e,!1,i.push,i),new this(i))}})}},function(e,n){e.exports=require("stream")},function(e,n){e.exports=require("util")},function(e,n,i){var t=i(150);e.exports=t("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")},function(e,n,i){var t=i(4),a=i(2).document,o=t(a)&&t(a.createElement);e.exports=function(e){return o?a.createElement(e):{}}},function(e,n,i){var t=i(2),a=i(19),o=i(34),r=i(108),s=i(7).f;e.exports=function(e){var n=a.Symbol||(a.Symbol=o?{}:t.Symbol||{});"_"==e.charAt(0)||e in n||s(n,e,{value:r.f(e)})}},function(e,n,i){var t=i(55)("keys"),a=i(37);e.exports=function(e){return t[e]||(t[e]=a(e))}},function(e,n){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,n,i){var t=i(2).document;e.exports=t&&t.documentElement},function(e,n,i){var t=i(4),a=i(1),o=function(e,n){if(a(e),!t(n)&&null!==n)throw TypeError(n+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,n,t){try{(t=i(20)(Function.call,i(17).f(Object.prototype,"__proto__").set,2))(e,[]),n=!(e instanceof Array)}catch(e){n=!0}return function(e,i){return o(e,i),n?e.__proto__=i:t(e,i),e}}({},!1):void 0),check:o}},function(e,n){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,n,i){var t=i(4),a=i(78).set;e.exports=function(e,n,i){var o,r=n.constructor;return r!==i&&"function"==typeof r&&(o=r.prototype)!==i.prototype&&t(o)&&a&&a(e,o),e}},function(e,n,i){"use strict";var t=i(25),a=i(24);e.exports=function(e){var n=String(a(this)),i="",o=t(e);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(n+=n))1&o&&(i+=n);return i}},function(e,n){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,n){var i=Math.expm1;e.exports=!i||i(10)>22025.465794806718||i(10)<22025.465794806718||-2e-17!=i(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:i},function(e,n,i){var t=i(25),a=i(24);e.exports=function(e){return function(n,i){var o,r,s=String(a(n)),c=t(i),p=s.length;return c<0||c>=p?e?"":void 0:(o=s.charCodeAt(c))<55296||o>56319||c+1===p||(r=s.charCodeAt(c+1))<56320||r>57343?e?s.charAt(c):o:e?s.slice(c,c+2):r-56320+(o-55296<<10)+65536}}},function(e,n,i){"use strict";var t=i(34),a=i(0),o=i(12),r=i(11),s=i(48),c=i(86),p=i(46),u=i(18),l=i(5)("iterator"),f=!([].keys&&"next"in[].keys()),d=function(){return this};e.exports=function(e,n,i,m,h,x,v){c(i,n,m);var b,g,k,y=function(e){if(!f&&e in E)return E[e];switch(e){case"keys":case"values":return function(){return new i(this,e)}}return function(){return new i(this,e)}},S=n+" Iterator",w="values"==h,_=!1,E=e.prototype,B=E[l]||E["@@iterator"]||h&&E[h],j=B||y(h),I=h?w?y("entries"):j:void 0,N="Array"==n&&E.entries||B;if(N&&(k=u(N.call(new e)))!==Object.prototype&&k.next&&(p(k,S,!0),t||"function"==typeof k[l]||r(k,l,d)),w&&B&&"values"!==B.name&&(_=!0,j=function(){return B.call(this)}),t&&!v||!f&&!_&&E[l]||r(E,l,j),s[n]=j,s[S]=d,h)if(b={values:w?j:y("values"),keys:x?j:y("keys"),entries:I},v)for(g in b)g in E||o(E,g,b[g]);else a(a.P+a.F*(f||_),n,b);return b}},function(e,n,i){"use strict";var t=i(40),a=i(36),o=i(46),r={};i(11)(r,i(5)("iterator"),function(){return this}),e.exports=function(e,n,i){e.prototype=t(r,{next:a(1,i)}),o(e,n+" Iterator")}},function(e,n,i){var t=i(59),a=i(24);e.exports=function(e,n,i){if(t(n))throw TypeError("String#"+i+" doesn't accept regex!");return String(a(e))}},function(e,n,i){var t=i(5)("match");e.exports=function(e){var n=/./;try{"/./"[e](n)}catch(i){try{return n[t]=!1,!"/./"[e](n)}catch(e){}}return!0}},function(e,n,i){var t=i(48),a=i(5)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(t.Array===e||o[a]===e)}},function(e,n,i){"use strict";var t=i(7),a=i(36);e.exports=function(e,n,i){n in e?t.f(e,n,a(0,i)):e[n]=i}},function(e,n,i){var t=i(53),a=i(5)("iterator"),o=i(48);e.exports=i(19).getIteratorMethod=function(e){if(null!=e)return e[a]||e["@@iterator"]||o[t(e)]}},function(e,n,i){var t=i(256);e.exports=function(e,n){return new(t(e))(n)}},function(e,n,i){"use strict";var t=i(9),a=i(39),o=i(8);e.exports=function(e){for(var n=t(this),i=o(n.length),r=arguments.length,s=a(r>1?arguments[1]:void 0,i),c=r>2?arguments[2]:void 0,p=void 0===c?i:a(c,i);p>s;)n[s++]=e;return n}},function(e,n,i){"use strict";var t=i(35),a=i(124),o=i(48),r=i(16);e.exports=i(85)(Array,"Array",function(e,n){this._t=r(e),this._i=0,this._k=n},function(){var e=this._t,n=this._k,i=this._i++;return!e||i>=e.length?(this._t=void 0,a(1)):a(0,"keys"==n?i:"values"==n?e[i]:[i,e[i]])},"values"),o.Arguments=o.Array,t("keys"),t("values"),t("entries")},function(e,n,i){var t,a,o,r=i(20),s=i(114),c=i(77),p=i(73),u=i(2),l=u.process,f=u.setImmediate,d=u.clearImmediate,m=u.MessageChannel,h=u.Dispatch,x=0,v={},b=function(){var e=+this;if(v.hasOwnProperty(e)){var n=v[e];delete v[e],n()}},g=function(e){b.call(e.data)};f&&d||(f=function(e){for(var n=[],i=1;arguments.length>i;)n.push(arguments[i++]);return v[++x]=function(){s("function"==typeof e?e:Function(e),n)},t(x),x},d=function(e){delete v[e]},"process"==i(21)(l)?t=function(e){l.nextTick(r(b,e,1))}:h&&h.now?t=function(e){h.now(r(b,e,1))}:m?(o=(a=new m).port2,a.port1.onmessage=g,t=r(o.postMessage,o,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(t=function(e){u.postMessage(e+"","*")},u.addEventListener("message",g,!1)):t="onreadystatechange"in p("script")?function(e){c.appendChild(p("script")).onreadystatechange=function(){c.removeChild(this),b.call(e)}}:function(e){setTimeout(r(b,e,1),0)}),e.exports={set:f,clear:d}},function(e,n,i){var t=i(2),a=i(95).set,o=t.MutationObserver||t.WebKitMutationObserver,r=t.process,s=t.Promise,c="process"==i(21)(r);e.exports=function(){var e,n,i,p=function(){var t,a;for(c&&(t=r.domain)&&t.exit();e;){a=e.fn,e=e.next;try{a()}catch(t){throw e?i():n=void 0,t}}n=void 0,t&&t.enter()};if(c)i=function(){r.nextTick(p)};else if(!o||t.navigator&&t.navigator.standalone)if(s&&s.resolve){var u=s.resolve(void 0);i=function(){u.then(p)}}else i=function(){a.call(t,p)};else{var l=!0,f=document.createTextNode("");new o(p).observe(f,{characterData:!0}),i=function(){f.data=l=!l}}return function(t){var a={fn:t,next:void 0};n&&(n.next=a),e||(e=a,i()),n=a}}},function(e,n,i){"use strict";var t=i(10);function a(e){var n,i;this.promise=new e(function(e,t){if(void 0!==n||void 0!==i)throw TypeError("Bad Promise constructor");n=e,i=t}),this.resolve=t(n),this.reject=t(i)}e.exports.f=function(e){return new a(e)}},function(e,n,i){"use strict";var t=i(2),a=i(6),o=i(34),r=i(66),s=i(11),c=i(45),p=i(3),u=i(43),l=i(25),f=i(8),d=i(133),m=i(41).f,h=i(7).f,x=i(93),v=i(46),b="prototype",g="Wrong index!",k=t.ArrayBuffer,y=t.DataView,S=t.Math,w=t.RangeError,_=t.Infinity,E=k,B=S.abs,j=S.pow,I=S.floor,N=S.log,A=S.LN2,C=a?"_b":"buffer",K=a?"_l":"byteLength",O=a?"_o":"byteOffset";function L(e,n,i){var t,a,o,r=new Array(i),s=8*i-n-1,c=(1<<s)-1,p=c>>1,u=23===n?j(2,-24)-j(2,-77):0,l=0,f=e<0||0===e&&1/e<0?1:0;for((e=B(e))!=e||e===_?(a=e!=e?1:0,t=c):(t=I(N(e)/A),e*(o=j(2,-t))<1&&(t--,o*=2),(e+=t+p>=1?u/o:u*j(2,1-p))*o>=2&&(t++,o/=2),t+p>=c?(a=0,t=c):t+p>=1?(a=(e*o-1)*j(2,n),t+=p):(a=e*j(2,p-1)*j(2,n),t=0));n>=8;r[l++]=255&a,a/=256,n-=8);for(t=t<<n|a,s+=n;s>0;r[l++]=255&t,t/=256,s-=8);return r[--l]|=128*f,r}function P(e,n,i){var t,a=8*i-n-1,o=(1<<a)-1,r=o>>1,s=a-7,c=i-1,p=e[c--],u=127&p;for(p>>=7;s>0;u=256*u+e[c],c--,s-=8);for(t=u&(1<<-s)-1,u>>=-s,s+=n;s>0;t=256*t+e[c],c--,s-=8);if(0===u)u=1-r;else{if(u===o)return t?NaN:p?-_:_;t+=j(2,n),u-=r}return(p?-1:1)*t*j(2,u-n)}function M(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function T(e){return[255&e]}function F(e){return[255&e,e>>8&255]}function R(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function z(e){return L(e,52,8)}function q(e){return L(e,23,4)}function D(e,n,i){h(e[b],n,{get:function(){return this[i]}})}function U(e,n,i,t){var a=d(+i);if(a+n>e[K])throw w(g);var o=e[C]._b,r=a+e[O],s=o.slice(r,r+n);return t?s:s.reverse()}function V(e,n,i,t,a,o){var r=d(+i);if(r+n>e[K])throw w(g);for(var s=e[C]._b,c=r+e[O],p=t(+a),u=0;u<n;u++)s[c+u]=p[o?u:n-u-1]}if(r.ABV){if(!p(function(){k(1)})||!p(function(){new k(-1)})||p(function(){return new k,new k(1.5),new k(NaN),"ArrayBuffer"!=k.name})){for(var $,H=(k=function(e){return u(this,k),new E(d(e))})[b]=E[b],W=m(E),G=0;W.length>G;)($=W[G++])in k||s(k,$,E[$]);o||(H.constructor=k)}var J=new y(new k(2)),X=y[b].setInt8;J.setInt8(0,2147483648),J.setInt8(1,2147483649),!J.getInt8(0)&&J.getInt8(1)||c(y[b],{setInt8:function(e,n){X.call(this,e,n<<24>>24)},setUint8:function(e,n){X.call(this,e,n<<24>>24)}},!0)}else k=function(e){u(this,k,"ArrayBuffer");var n=d(e);this._b=x.call(new Array(n),0),this[K]=n},y=function(e,n,i){u(this,y,"DataView"),u(e,k,"DataView");var t=e[K],a=l(n);if(a<0||a>t)throw w("Wrong offset!");if(a+(i=void 0===i?t-a:f(i))>t)throw w("Wrong length!");this[C]=e,this[O]=a,this[K]=i},a&&(D(k,"byteLength","_l"),D(y,"buffer","_b"),D(y,"byteLength","_l"),D(y,"byteOffset","_o")),c(y[b],{getInt8:function(e){return U(this,1,e)[0]<<24>>24},getUint8:function(e){return U(this,1,e)[0]},getInt16:function(e){var n=U(this,2,e,arguments[1]);return(n[1]<<8|n[0])<<16>>16},getUint16:function(e){var n=U(this,2,e,arguments[1]);return n[1]<<8|n[0]},getInt32:function(e){return M(U(this,4,e,arguments[1]))},getUint32:function(e){return M(U(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return P(U(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return P(U(this,8,e,arguments[1]),52,8)},setInt8:function(e,n){V(this,1,e,T,n)},setUint8:function(e,n){V(this,1,e,T,n)},setInt16:function(e,n){V(this,2,e,F,n,arguments[2])},setUint16:function(e,n){V(this,2,e,F,n,arguments[2])},setInt32:function(e,n){V(this,4,e,R,n,arguments[2])},setUint32:function(e,n){V(this,4,e,R,n,arguments[2])},setFloat32:function(e,n){V(this,4,e,q,n,arguments[2])},setFloat64:function(e,n){V(this,8,e,z,n,arguments[2])}});v(k,"ArrayBuffer"),v(y,"DataView"),s(y[b],r.VIEW,!0),n.ArrayBuffer=k,n.DataView=y},function(e,n,i){"use strict";var t=i(14),a=i(371),o={"Content-Type":"application/x-www-form-urlencoded"};function r(e,n){!t.isUndefined(e)&&t.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var s,c={adapter:("undefined"!=typeof XMLHttpRequest?s=i(372):"undefined"!=typeof process&&(s=i(377)),s),transformRequest:[function(e,n){return a(n,"Content-Type"),t.isFormData(e)||t.isArrayBuffer(e)||t.isBuffer(e)||t.isStream(e)||t.isFile(e)||t.isBlob(e)?e:t.isArrayBufferView(e)?e.buffer:t.isURLSearchParams(e)?(r(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):t.isObject(e)?(r(n,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},t.forEach(["delete","get","head"],function(e){c.headers[e]={}}),t.forEach(["post","put","patch"],function(e){c.headers[e]=t.merge(o)}),e.exports=c},function(e,n,i){"use strict";var t=i(143);e.exports=function(e,n,i,a,o){var r=new Error(e);return t(r,n,i,a,o)}},function(e,n){e.exports=require("http")},function(e,n){e.exports=require("https")},function(e,n){e.exports=require("url")},function(e,n,i){"use strict";const t=i(72),a=i(396);n.names=a.names,n.codes=a.codes,n.defaultLengths=a.defaultLengths;const o=i(50);function r(e){n.decode(e)}n.toHexString=function(e){if(!Buffer.isBuffer(e))throw new Error("must be passed a buffer");return e.toString("hex")},n.fromHexString=function(e){return Buffer.from(e,"hex")},n.toB58String=function(e){if(!Buffer.isBuffer(e))throw new Error("must be passed a buffer");return t.encode(e)},n.fromB58String=function(e){let n=e;return Buffer.isBuffer(e)&&(n=e.toString()),Buffer.from(t.decode(n))},n.decode=function(e){if(!Buffer.isBuffer(e))throw new Error("multihash must be a Buffer");if(e.length<3)throw new Error("multihash too short. must be > 3 bytes.");let i=o.decode(e);if(!n.isValidCode(i))throw new Error(`multihash unknown function code: 0x${i.toString(16)}`);e=e.slice(o.decode.bytes);let t=o.decode(e);if(t<1)throw new Error(`multihash invalid length: 0x${t.toString(16)}`);if((e=e.slice(o.decode.bytes)).length!==t)throw new Error(`multihash length inconsistent: 0x${e.toString("hex")}`);return{code:i,name:a.codes[i],length:t,digest:e}},n.encode=function(e,i,t){if(!e||!i)throw new Error("multihash encode requires at least two args: digest, code");const a=n.coerceCode(i);if(!Buffer.isBuffer(e))throw new Error("digest should be a Buffer");if(null==t&&(t=e.length),t&&e.length!==t)throw new Error("digest length should be equal to specified length.");return Buffer.concat([Buffer.from(o.encode(a)),Buffer.from(o.encode(t)),e])},n.coerceCode=function(e){let i=e;if("string"==typeof e){if(!a.names[e])throw new Error(`Unrecognized hash function named: ${e}`);i=a.names[e]}if("number"!=typeof i)throw new Error(`Hash function code should be a number. Got: ${i}`);if(!a.codes[i]&&!n.isAppCode(i))throw new Error(`Unrecognized function code: ${i}`);return i},n.isAppCode=function(e){return e>0&&e<16},n.isValidCode=function(e){return!!n.isAppCode(e)||!!a.codes[e]},n.validate=r,n.prefix=function(e){return r(e),e.slice(0,2)}},function(e,n,i){"use strict";function t(e){if("number"==typeof e){if(t.codes[e])return t.codes[e];throw new Error("no protocol with code: "+e)}if("string"==typeof e||e instanceof String){if(t.names[e])return t.names[e];throw new Error("no protocol with name: "+e)}throw new Error("invalid protocol id type: "+e)}const a=-1;function o(e,n,i,t,a){return{code:e,size:n,name:i,resolvable:Boolean(t),path:Boolean(a)}}t.lengthPrefixedVarSize=a,t.V=a,t.table=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,a,"ip6zone"],[53,a,"dns","resolvable"],[54,a,"dns4","resolvable"],[55,a,"dns6","resolvable"],[56,a,"dnsaddr","resolvable"],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,a,"unix",!1,"path"],[421,a,"p2p"],[421,a,"ipfs"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,a,"garlic64"],[460,0,"quic"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"]],t.names={},t.codes={},t.table.map(e=>{const n=o.apply(null,e);t.codes[n.code]=n,t.names[n.name]=n}),t.object=o,e.exports=t},function(e,n,i){"use strict";n.raw=Buffer.from("55","hex"),n.cbor=Buffer.from("51","hex"),n.protobuf=Buffer.from("50","hex"),n.rlp=Buffer.from("60","hex"),n.bencode=Buffer.from("63","hex"),n.multicodec=Buffer.from("30","hex"),n.multihash=Buffer.from("31","hex"),n.multiaddr=Buffer.from("32","hex"),n.multibase=Buffer.from("33","hex"),n.identity=Buffer.from("00","hex"),n.md4=Buffer.from("d4","hex"),n.md5=Buffer.from("d5","hex"),n.sha1=Buffer.from("11","hex"),n["sha2-256"]=Buffer.from("12","hex"),n["sha2-512"]=Buffer.from("13","hex"),n["dbl-sha2-256"]=Buffer.from("56","hex"),n["sha3-224"]=Buffer.from("17","hex"),n["sha3-256"]=Buffer.from("16","hex"),n["sha3-384"]=Buffer.from("15","hex"),n["sha3-512"]=Buffer.from("14","hex"),n["shake-128"]=Buffer.from("18","hex"),n["shake-256"]=Buffer.from("19","hex"),n["keccak-224"]=Buffer.from("1a","hex"),n["keccak-256"]=Buffer.from("1b","hex"),n["keccak-384"]=Buffer.from("1c","hex"),n["keccak-512"]=Buffer.from("1d","hex"),n["murmur3-128"]=Buffer.from("22","hex"),n["murmur3-32"]=Buffer.from("23","hex"),n.x11=Buffer.from("1100","hex"),n["blake2b-8"]=Buffer.from("b201","hex"),n["blake2b-16"]=Buffer.from("b202","hex"),n["blake2b-24"]=Buffer.from("b203","hex"),n["blake2b-32"]=Buffer.from("b204","hex"),n["blake2b-40"]=Buffer.from("b205","hex"),n["blake2b-48"]=Buffer.from("b206","hex"),n["blake2b-56"]=Buffer.from("b207","hex"),n["blake2b-64"]=Buffer.from("b208","hex"),n["blake2b-72"]=Buffer.from("b209","hex"),n["blake2b-80"]=Buffer.from("b20a","hex"),n["blake2b-88"]=Buffer.from("b20b","hex"),n["blake2b-96"]=Buffer.from("b20c","hex"),n["blake2b-104"]=Buffer.from("b20d","hex"),n["blake2b-112"]=Buffer.from("b20e","hex"),n["blake2b-120"]=Buffer.from("b20f","hex"),n["blake2b-128"]=Buffer.from("b210","hex"),n["blake2b-136"]=Buffer.from("b211","hex"),n["blake2b-144"]=Buffer.from("b212","hex"),n["blake2b-152"]=Buffer.from("b213","hex"),n["blake2b-160"]=Buffer.from("b214","hex"),n["blake2b-168"]=Buffer.from("b215","hex"),n["blake2b-176"]=Buffer.from("b216","hex"),n["blake2b-184"]=Buffer.from("b217","hex"),n["blake2b-192"]=Buffer.from("b218","hex"),n["blake2b-200"]=Buffer.from("b219","hex"),n["blake2b-208"]=Buffer.from("b21a","hex"),n["blake2b-216"]=Buffer.from("b21b","hex"),n["blake2b-224"]=Buffer.from("b21c","hex"),n["blake2b-232"]=Buffer.from("b21d","hex"),n["blake2b-240"]=Buffer.from("b21e","hex"),n["blake2b-248"]=Buffer.from("b21f","hex"),n["blake2b-256"]=Buffer.from("b220","hex"),n["blake2b-264"]=Buffer.from("b221","hex"),n["blake2b-272"]=Buffer.from("b222","hex"),n["blake2b-280"]=Buffer.from("b223","hex"),n["blake2b-288"]=Buffer.from("b224","hex"),n["blake2b-296"]=Buffer.from("b225","hex"),n["blake2b-304"]=Buffer.from("b226","hex"),n["blake2b-312"]=Buffer.from("b227","hex"),n["blake2b-320"]=Buffer.from("b228","hex"),n["blake2b-328"]=Buffer.from("b229","hex"),n["blake2b-336"]=Buffer.from("b22a","hex"),n["blake2b-344"]=Buffer.from("b22b","hex"),n["blake2b-352"]=Buffer.from("b22c","hex"),n["blake2b-360"]=Buffer.from("b22d","hex"),n["blake2b-368"]=Buffer.from("b22e","hex"),n["blake2b-376"]=Buffer.from("b22f","hex"),n["blake2b-384"]=Buffer.from("b230","hex"),n["blake2b-392"]=Buffer.from("b231","hex"),n["blake2b-400"]=Buffer.from("b232","hex"),n["blake2b-408"]=Buffer.from("b233","hex"),n["blake2b-416"]=Buffer.from("b234","hex"),n["blake2b-424"]=Buffer.from("b235","hex"),n["blake2b-432"]=Buffer.from("b236","hex"),n["blake2b-440"]=Buffer.from("b237","hex"),n["blake2b-448"]=Buffer.from("b238","hex"),n["blake2b-456"]=Buffer.from("b239","hex"),n["blake2b-464"]=Buffer.from("b23a","hex"),n["blake2b-472"]=Buffer.from("b23b","hex"),n["blake2b-480"]=Buffer.from("b23c","hex"),n["blake2b-488"]=Buffer.from("b23d","hex"),n["blake2b-496"]=Buffer.from("b23e","hex"),n["blake2b-504"]=Buffer.from("b23f","hex"),n["blake2b-512"]=Buffer.from("b240","hex"),n["blake2s-8"]=Buffer.from("b241","hex"),n["blake2s-16"]=Buffer.from("b242","hex"),n["blake2s-24"]=Buffer.from("b243","hex"),n["blake2s-32"]=Buffer.from("b244","hex"),n["blake2s-40"]=Buffer.from("b245","hex"),n["blake2s-48"]=Buffer.from("b246","hex"),n["blake2s-56"]=Buffer.from("b247","hex"),n["blake2s-64"]=Buffer.from("b248","hex"),n["blake2s-72"]=Buffer.from("b249","hex"),n["blake2s-80"]=Buffer.from("b24a","hex"),n["blake2s-88"]=Buffer.from("b24b","hex"),n["blake2s-96"]=Buffer.from("b24c","hex"),n["blake2s-104"]=Buffer.from("b24d","hex"),n["blake2s-112"]=Buffer.from("b24e","hex"),n["blake2s-120"]=Buffer.from("b24f","hex"),n["blake2s-128"]=Buffer.from("b250","hex"),n["blake2s-136"]=Buffer.from("b251","hex"),n["blake2s-144"]=Buffer.from("b252","hex"),n["blake2s-152"]=Buffer.from("b253","hex"),n["blake2s-160"]=Buffer.from("b254","hex"),n["blake2s-168"]=Buffer.from("b255","hex"),n["blake2s-176"]=Buffer.from("b256","hex"),n["blake2s-184"]=Buffer.from("b257","hex"),n["blake2s-192"]=Buffer.from("b258","hex"),n["blake2s-200"]=Buffer.from("b259","hex"),n["blake2s-208"]=Buffer.from("b25a","hex"),n["blake2s-216"]=Buffer.from("b25b","hex"),n["blake2s-224"]=Buffer.from("b25c","hex"),n["blake2s-232"]=Buffer.from("b25d","hex"),n["blake2s-240"]=Buffer.from("b25e","hex"),n["blake2s-248"]=Buffer.from("b25f","hex"),n["blake2s-256"]=Buffer.from("b260","hex"),n["skein256-8"]=Buffer.from("b301","hex"),n["skein256-16"]=Buffer.from("b302","hex"),n["skein256-24"]=Buffer.from("b303","hex"),n["skein256-32"]=Buffer.from("b304","hex"),n["skein256-40"]=Buffer.from("b305","hex"),n["skein256-48"]=Buffer.from("b306","hex"),n["skein256-56"]=Buffer.from("b307","hex"),n["skein256-64"]=Buffer.from("b308","hex"),n["skein256-72"]=Buffer.from("b309","hex"),n["skein256-80"]=Buffer.from("b30a","hex"),n["skein256-88"]=Buffer.from("b30b","hex"),n["skein256-96"]=Buffer.from("b30c","hex"),n["skein256-104"]=Buffer.from("b30d","hex"),n["skein256-112"]=Buffer.from("b30e","hex"),n["skein256-120"]=Buffer.from("b30f","hex"),n["skein256-128"]=Buffer.from("b310","hex"),n["skein256-136"]=Buffer.from("b311","hex"),n["skein256-144"]=Buffer.from("b312","hex"),n["skein256-152"]=Buffer.from("b313","hex"),n["skein256-160"]=Buffer.from("b314","hex"),n["skein256-168"]=Buffer.from("b315","hex"),n["skein256-176"]=Buffer.from("b316","hex"),n["skein256-184"]=Buffer.from("b317","hex"),n["skein256-192"]=Buffer.from("b318","hex"),n["skein256-200"]=Buffer.from("b319","hex"),n["skein256-208"]=Buffer.from("b31a","hex"),n["skein256-216"]=Buffer.from("b31b","hex"),n["skein256-224"]=Buffer.from("b31c","hex"),n["skein256-232"]=Buffer.from("b31d","hex"),n["skein256-240"]=Buffer.from("b31e","hex"),n["skein256-248"]=Buffer.from("b31f","hex"),n["skein256-256"]=Buffer.from("b320","hex"),n["skein512-8"]=Buffer.from("b321","hex"),n["skein512-16"]=Buffer.from("b322","hex"),n["skein512-24"]=Buffer.from("b323","hex"),n["skein512-32"]=Buffer.from("b324","hex"),n["skein512-40"]=Buffer.from("b325","hex"),n["skein512-48"]=Buffer.from("b326","hex"),n["skein512-56"]=Buffer.from("b327","hex"),n["skein512-64"]=Buffer.from("b328","hex"),n["skein512-72"]=Buffer.from("b329","hex"),n["skein512-80"]=Buffer.from("b32a","hex"),n["skein512-88"]=Buffer.from("b32b","hex"),n["skein512-96"]=Buffer.from("b32c","hex"),n["skein512-104"]=Buffer.from("b32d","hex"),n["skein512-112"]=Buffer.from("b32e","hex"),n["skein512-120"]=Buffer.from("b32f","hex"),n["skein512-128"]=Buffer.from("b330","hex"),n["skein512-136"]=Buffer.from("b331","hex"),n["skein512-144"]=Buffer.from("b332","hex"),n["skein512-152"]=Buffer.from("b333","hex"),n["skein512-160"]=Buffer.from("b334","hex"),n["skein512-168"]=Buffer.from("b335","hex"),n["skein512-176"]=Buffer.from("b336","hex"),n["skein512-184"]=Buffer.from("b337","hex"),n["skein512-192"]=Buffer.from("b338","hex"),n["skein512-200"]=Buffer.from("b339","hex"),n["skein512-208"]=Buffer.from("b33a","hex"),n["skein512-216"]=Buffer.from("b33b","hex"),n["skein512-224"]=Buffer.from("b33c","hex"),n["skein512-232"]=Buffer.from("b33d","hex"),n["skein512-240"]=Buffer.from("b33e","hex"),n["skein512-248"]=Buffer.from("b33f","hex"),n["skein512-256"]=Buffer.from("b340","hex"),n["skein512-264"]=Buffer.from("b341","hex"),n["skein512-272"]=Buffer.from("b342","hex"),n["skein512-280"]=Buffer.from("b343","hex"),n["skein512-288"]=Buffer.from("b344","hex"),n["skein512-296"]=Buffer.from("b345","hex"),n["skein512-304"]=Buffer.from("b346","hex"),n["skein512-312"]=Buffer.from("b347","hex"),n["skein512-320"]=Buffer.from("b348","hex"),n["skein512-328"]=Buffer.from("b349","hex"),n["skein512-336"]=Buffer.from("b34a","hex"),n["skein512-344"]=Buffer.from("b34b","hex"),n["skein512-352"]=Buffer.from("b34c","hex"),n["skein512-360"]=Buffer.from("b34d","hex"),n["skein512-368"]=Buffer.from("b34e","hex"),n["skein512-376"]=Buffer.from("b34f","hex"),n["skein512-384"]=Buffer.from("b350","hex"),n["skein512-392"]=Buffer.from("b351","hex"),n["skein512-400"]=Buffer.from("b352","hex"),n["skein512-408"]=Buffer.from("b353","hex"),n["skein512-416"]=Buffer.from("b354","hex"),n["skein512-424"]=Buffer.from("b355","hex"),n["skein512-432"]=Buffer.from("b356","hex"),n["skein512-440"]=Buffer.from("b357","hex"),n["skein512-448"]=Buffer.from("b358","hex"),n["skein512-456"]=Buffer.from("b359","hex"),n["skein512-464"]=Buffer.from("b35a","hex"),n["skein512-472"]=Buffer.from("b35b","hex"),n["skein512-480"]=Buffer.from("b35c","hex"),n["skein512-488"]=Buffer.from("b35d","hex"),n["skein512-496"]=Buffer.from("b35e","hex"),n["skein512-504"]=Buffer.from("b35f","hex"),n["skein512-512"]=Buffer.from("b360","hex"),n["skein1024-8"]=Buffer.from("b361","hex"),n["skein1024-16"]=Buffer.from("b362","hex"),n["skein1024-24"]=Buffer.from("b363","hex"),n["skein1024-32"]=Buffer.from("b364","hex"),n["skein1024-40"]=Buffer.from("b365","hex"),n["skein1024-48"]=Buffer.from("b366","hex"),n["skein1024-56"]=Buffer.from("b367","hex"),n["skein1024-64"]=Buffer.from("b368","hex"),n["skein1024-72"]=Buffer.from("b369","hex"),n["skein1024-80"]=Buffer.from("b36a","hex"),n["skein1024-88"]=Buffer.from("b36b","hex"),n["skein1024-96"]=Buffer.from("b36c","hex"),n["skein1024-104"]=Buffer.from("b36d","hex"),n["skein1024-112"]=Buffer.from("b36e","hex"),n["skein1024-120"]=Buffer.from("b36f","hex"),n["skein1024-128"]=Buffer.from("b370","hex"),n["skein1024-136"]=Buffer.from("b371","hex"),n["skein1024-144"]=Buffer.from("b372","hex"),n["skein1024-152"]=Buffer.from("b373","hex"),n["skein1024-160"]=Buffer.from("b374","hex"),n["skein1024-168"]=Buffer.from("b375","hex"),n["skein1024-176"]=Buffer.from("b376","hex"),n["skein1024-184"]=Buffer.from("b377","hex"),n["skein1024-192"]=Buffer.from("b378","hex"),n["skein1024-200"]=Buffer.from("b379","hex"),n["skein1024-208"]=Buffer.from("b37a","hex"),n["skein1024-216"]=Buffer.from("b37b","hex"),n["skein1024-224"]=Buffer.from("b37c","hex"),n["skein1024-232"]=Buffer.from("b37d","hex"),n["skein1024-240"]=Buffer.from("b37e","hex"),n["skein1024-248"]=Buffer.from("b37f","hex"),n["skein1024-256"]=Buffer.from("b380","hex"),n["skein1024-264"]=Buffer.from("b381","hex"),n["skein1024-272"]=Buffer.from("b382","hex"),n["skein1024-280"]=Buffer.from("b383","hex"),n["skein1024-288"]=Buffer.from("b384","hex"),n["skein1024-296"]=Buffer.from("b385","hex"),n["skein1024-304"]=Buffer.from("b386","hex"),n["skein1024-312"]=Buffer.from("b387","hex"),n["skein1024-320"]=Buffer.from("b388","hex"),n["skein1024-328"]=Buffer.from("b389","hex"),n["skein1024-336"]=Buffer.from("b38a","hex"),n["skein1024-344"]=Buffer.from("b38b","hex"),n["skein1024-352"]=Buffer.from("b38c","hex"),n["skein1024-360"]=Buffer.from("b38d","hex"),n["skein1024-368"]=Buffer.from("b38e","hex"),n["skein1024-376"]=Buffer.from("b38f","hex"),n["skein1024-384"]=Buffer.from("b390","hex"),n["skein1024-392"]=Buffer.from("b391","hex"),n["skein1024-400"]=Buffer.from("b392","hex"),n["skein1024-408"]=Buffer.from("b393","hex"),n["skein1024-416"]=Buffer.from("b394","hex"),n["skein1024-424"]=Buffer.from("b395","hex"),n["skein1024-432"]=Buffer.from("b396","hex"),n["skein1024-440"]=Buffer.from("b397","hex"),n["skein1024-448"]=Buffer.from("b398","hex"),n["skein1024-456"]=Buffer.from("b399","hex"),n["skein1024-464"]=Buffer.from("b39a","hex"),n["skein1024-472"]=Buffer.from("b39b","hex"),n["skein1024-480"]=Buffer.from("b39c","hex"),n["skein1024-488"]=Buffer.from("b39d","hex"),n["skein1024-496"]=Buffer.from("b39e","hex"),n["skein1024-504"]=Buffer.from("b39f","hex"),n["skein1024-512"]=Buffer.from("b3a0","hex"),n["skein1024-520"]=Buffer.from("b3a1","hex"),n["skein1024-528"]=Buffer.from("b3a2","hex"),n["skein1024-536"]=Buffer.from("b3a3","hex"),n["skein1024-544"]=Buffer.from("b3a4","hex"),n["skein1024-552"]=Buffer.from("b3a5","hex"),n["skein1024-560"]=Buffer.from("b3a6","hex"),n["skein1024-568"]=Buffer.from("b3a7","hex"),n["skein1024-576"]=Buffer.from("b3a8","hex"),n["skein1024-584"]=Buffer.from("b3a9","hex"),n["skein1024-592"]=Buffer.from("b3aa","hex"),n["skein1024-600"]=Buffer.from("b3ab","hex"),n["skein1024-608"]=Buffer.from("b3ac","hex"),n["skein1024-616"]=Buffer.from("b3ad","hex"),n["skein1024-624"]=Buffer.from("b3ae","hex"),n["skein1024-632"]=Buffer.from("b3af","hex"),n["skein1024-640"]=Buffer.from("b3b0","hex"),n["skein1024-648"]=Buffer.from("b3b1","hex"),n["skein1024-656"]=Buffer.from("b3b2","hex"),n["skein1024-664"]=Buffer.from("b3b3","hex"),n["skein1024-672"]=Buffer.from("b3b4","hex"),n["skein1024-680"]=Buffer.from("b3b5","hex"),n["skein1024-688"]=Buffer.from("b3b6","hex"),n["skein1024-696"]=Buffer.from("b3b7","hex"),n["skein1024-704"]=Buffer.from("b3b8","hex"),n["skein1024-712"]=Buffer.from("b3b9","hex"),n["skein1024-720"]=Buffer.from("b3ba","hex"),n["skein1024-728"]=Buffer.from("b3bb","hex"),n["skein1024-736"]=Buffer.from("b3bc","hex"),n["skein1024-744"]=Buffer.from("b3bd","hex"),n["skein1024-752"]=Buffer.from("b3be","hex"),n["skein1024-760"]=Buffer.from("b3bf","hex"),n["skein1024-768"]=Buffer.from("b3c0","hex"),n["skein1024-776"]=Buffer.from("b3c1","hex"),n["skein1024-784"]=Buffer.from("b3c2","hex"),n["skein1024-792"]=Buffer.from("b3c3","hex"),n["skein1024-800"]=Buffer.from("b3c4","hex"),n["skein1024-808"]=Buffer.from("b3c5","hex"),n["skein1024-816"]=Buffer.from("b3c6","hex"),n["skein1024-824"]=Buffer.from("b3c7","hex"),n["skein1024-832"]=Buffer.from("b3c8","hex"),n["skein1024-840"]=Buffer.from("b3c9","hex"),n["skein1024-848"]=Buffer.from("b3ca","hex"),n["skein1024-856"]=Buffer.from("b3cb","hex"),n["skein1024-864"]=Buffer.from("b3cc","hex"),n["skein1024-872"]=Buffer.from("b3cd","hex"),n["skein1024-880"]=Buffer.from("b3ce","hex"),n["skein1024-888"]=Buffer.from("b3cf","hex"),n["skein1024-896"]=Buffer.from("b3d0","hex"),n["skein1024-904"]=Buffer.from("b3d1","hex"),n["skein1024-912"]=Buffer.from("b3d2","hex"),n["skein1024-920"]=Buffer.from("b3d3","hex"),n["skein1024-928"]=Buffer.from("b3d4","hex"),n["skein1024-936"]=Buffer.from("b3d5","hex"),n["skein1024-944"]=Buffer.from("b3d6","hex"),n["skein1024-952"]=Buffer.from("b3d7","hex"),n["skein1024-960"]=Buffer.from("b3d8","hex"),n["skein1024-968"]=Buffer.from("b3d9","hex"),n["skein1024-976"]=Buffer.from("b3da","hex"),n["skein1024-984"]=Buffer.from("b3db","hex"),n["skein1024-992"]=Buffer.from("b3dc","hex"),n["skein1024-1000"]=Buffer.from("b3dd","hex"),n["skein1024-1008"]=Buffer.from("b3de","hex"),n["skein1024-1016"]=Buffer.from("b3df","hex"),n["skein1024-1024"]=Buffer.from("b3e0","hex"),n.ip4=Buffer.from("04","hex"),n.ip6=Buffer.from("29","hex"),n.ip6zone=Buffer.from("2a","hex"),n.tcp=Buffer.from("06","hex"),n.udp=Buffer.from("0111","hex"),n.dccp=Buffer.from("21","hex"),n.sctp=Buffer.from("84","hex"),n.udt=Buffer.from("012d","hex"),n.utp=Buffer.from("012e","hex"),n.p2p=Buffer.from("01a5","hex"),n.ipfs=Buffer.from("01a5","hex"),n.http=Buffer.from("01e0","hex"),n.https=Buffer.from("01bb","hex"),n.quic=Buffer.from("01cc","hex"),n.ws=Buffer.from("01dd","hex"),n.wss=Buffer.from("01de","hex"),n.onion=Buffer.from("01bc","hex"),n.onion3=Buffer.from("01bd","hex"),n.garlic64=Buffer.from("01be","hex"),n["p2p-circuit"]=Buffer.from("0122","hex"),n.dns=Buffer.from("35","hex"),n.dns4=Buffer.from("36","hex"),n.dns6=Buffer.from("37","hex"),n.dnsaddr=Buffer.from("38","hex"),n["p2p-websocket-star"]=Buffer.from("01df","hex"),n["p2p-stardust"]=Buffer.from("0115","hex"),n["p2p-webrtc-star"]=Buffer.from("0113","hex"),n["p2p-webrtc-direct"]=Buffer.from("0114","hex"),n.unix=Buffer.from("0190","hex"),n["dag-pb"]=Buffer.from("70","hex"),n["dag-cbor"]=Buffer.from("71","hex"),n["dag-json"]=Buffer.from("0129","hex"),n["git-raw"]=Buffer.from("78","hex"),n["eth-block"]=Buffer.from("90","hex"),n["eth-block-list"]=Buffer.from("91","hex"),n["eth-tx-trie"]=Buffer.from("92","hex"),n["eth-tx"]=Buffer.from("93","hex"),n["eth-tx-receipt-trie"]=Buffer.from("94","hex"),n["eth-tx-receipt"]=Buffer.from("95","hex"),n["eth-state-trie"]=Buffer.from("96","hex"),n["eth-account-snapshot"]=Buffer.from("97","hex"),n["eth-storage-trie"]=Buffer.from("98","hex"),n["bitcoin-block"]=Buffer.from("b0","hex"),n["bitcoin-tx"]=Buffer.from("b1","hex"),n["zcash-block"]=Buffer.from("c0","hex"),n["zcash-tx"]=Buffer.from("c1","hex"),n["stellar-block"]=Buffer.from("d0","hex"),n["stellar-tx"]=Buffer.from("d1","hex"),n["decred-block"]=Buffer.from("e0","hex"),n["decred-tx"]=Buffer.from("e1","hex"),n["dash-block"]=Buffer.from("f0","hex"),n["dash-tx"]=Buffer.from("f1","hex"),n["leofcoin-block"]=Buffer.from("81","hex"),n["leofcoin-tx"]=Buffer.from("82","hex"),n["leofcoin-pr"]=Buffer.from("83","hex"),n["torrent-info"]=Buffer.from("7b","hex"),n["torrent-file"]=Buffer.from("7c","hex"),n["ed25519-pub"]=Buffer.from("ed","hex"),n["ipld-ns"]=Buffer.from("e2","hex"),n["ipfs-ns"]=Buffer.from("e3","hex"),n["swarm-ns"]=Buffer.from("e4","hex")},function(e,n,i){e.exports=!i(6)&&!i(3)(function(){return 7!=Object.defineProperty(i(73)("div"),"a",{get:function(){return 7}}).a})},function(e,n,i){n.f=i(5)},function(e,n,i){var t=i(15),a=i(16),o=i(56)(!1),r=i(75)("IE_PROTO");e.exports=function(e,n){var i,s=a(e),c=0,p=[];for(i in s)i!=r&&t(s,i)&&p.push(i);for(;n.length>c;)t(s,i=n[c++])&&(~o(p,i)||p.push(i));return p}},function(e,n,i){var t=i(7),a=i(1),o=i(38);e.exports=i(6)?Object.defineProperties:function(e,n){a(e);for(var i,r=o(n),s=r.length,c=0;s>c;)t.f(e,i=r[c++],n[i]);return e}},function(e,n,i){var t=i(16),a=i(41).f,o={}.toString,r="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return r&&"[object Window]"==o.call(e)?function(e){try{return a(e)}catch(e){return r.slice()}}(e):a(t(e))}},function(e,n,i){"use strict";var t=i(38),a=i(57),o=i(52),r=i(9),s=i(51),c=Object.assign;e.exports=!c||i(3)(function(){var e={},n={},i=Symbol(),t="abcdefghijklmnopqrst";return e[i]=7,t.split("").forEach(function(e){n[e]=e}),7!=c({},e)[i]||Object.keys(c({},n)).join("")!=t})?function(e,n){for(var i=r(e),c=arguments.length,p=1,u=a.f,l=o.f;c>p;)for(var f,d=s(arguments[p++]),m=u?t(d).concat(u(d)):t(d),h=m.length,x=0;h>x;)l.call(d,f=m[x++])&&(i[f]=d[f]);return i}:c},function(e,n,i){"use strict";var t=i(10),a=i(4),o=i(114),r=[].slice,s={};e.exports=Function.bind||function(e){var n=t(this),i=r.call(arguments,1),c=function(){var t=i.concat(r.call(arguments));return this instanceof c?function(e,n,i){if(!(n in s)){for(var t=[],a=0;a<n;a++)t[a]="a["+a+"]";s[n]=Function("F,a","return new F("+t.join(",")+")")}return s[n](e,i)}(n,t.length,t):o(n,t,e)};return a(n.prototype)&&(c.prototype=n.prototype),c}},function(e,n){e.exports=function(e,n,i){var t=void 0===i;switch(n.length){case 0:return t?e():e.call(i);case 1:return t?e(n[0]):e.call(i,n[0]);case 2:return t?e(n[0],n[1]):e.call(i,n[0],n[1]);case 3:return t?e(n[0],n[1],n[2]):e.call(i,n[0],n[1],n[2]);case 4:return t?e(n[0],n[1],n[2],n[3]):e.call(i,n[0],n[1],n[2],n[3])}return e.apply(i,n)}},function(e,n,i){var t=i(2).parseInt,a=i(47).trim,o=i(79),r=/^[-+]?0[xX]/;e.exports=8!==t(o+"08")||22!==t(o+"0x16")?function(e,n){var i=a(String(e),3);return t(i,n>>>0||(r.test(i)?16:10))}:t},function(e,n,i){var t=i(2).parseFloat,a=i(47).trim;e.exports=1/t(i(79)+"-0")!=-1/0?function(e){var n=a(String(e),3),i=t(n);return 0===i&&"-"==n.charAt(0)?-0:i}:t},function(e,n,i){var t=i(21);e.exports=function(e,n){if("number"!=typeof e&&"Number"!=t(e))throw TypeError(n);return+e}},function(e,n,i){var t=i(4),a=Math.floor;e.exports=function(e){return!t(e)&&isFinite(e)&&a(e)===e}},function(e,n){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,n,i){var t=i(82),a=Math.pow,o=a(2,-52),r=a(2,-23),s=a(2,127)*(2-r),c=a(2,-126);e.exports=Math.fround||function(e){var n,i,a=Math.abs(e),p=t(e);return a<c?p*(a/c/r+1/o-1/o)*c*r:(i=(n=(1+r/o)*a)-(n-a))>s||i!=i?p*(1/0):p*i}},function(e,n,i){var t=i(1);e.exports=function(e,n,i,a){try{return a?n(t(i)[0],i[1]):n(i)}catch(n){var o=e.return;throw void 0!==o&&t(o.call(e)),n}}},function(e,n,i){var t=i(10),a=i(9),o=i(51),r=i(8);e.exports=function(e,n,i,s,c){t(n);var p=a(e),u=o(p),l=r(p.length),f=c?l-1:0,d=c?-1:1;if(i<2)for(;;){if(f in u){s=u[f],f+=d;break}if(f+=d,c?f<0:l<=f)throw TypeError("Reduce of empty array with no initial value")}for(;c?f>=0:l>f;f+=d)f in u&&(s=n(s,u[f],f,p));return s}},function(e,n,i){"use strict";var t=i(9),a=i(39),o=i(8);e.exports=[].copyWithin||function(e,n){var i=t(this),r=o(i.length),s=a(e,r),c=a(n,r),p=arguments.length>2?arguments[2]:void 0,u=Math.min((void 0===p?r:a(p,r))-c,r-s),l=1;for(c<s&&s<c+u&&(l=-1,c+=u-1,s+=u-1);u-- >0;)c in i?i[s]=i[c]:delete i[s],s+=l,c+=l;return i}},function(e,n){e.exports=function(e,n){return{value:n,done:!!e}}},function(e,n,i){i(6)&&"g"!=/./g.flags&&i(7).f(RegExp.prototype,"flags",{configurable:!0,get:i(61)})},function(e,n){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,n,i){var t=i(1),a=i(4),o=i(97);e.exports=function(e,n){if(t(e),a(n)&&n.constructor===e)return n;var i=o.f(e);return(0,i.resolve)(n),i.promise}},function(e,n,i){"use strict";var t=i(129),a=i(49);e.exports=i(65)("Map",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{get:function(e){var n=t.getEntry(a(this,"Map"),e);return n&&n.v},set:function(e,n){return t.def(a(this,"Map"),0===e?0:e,n)}},t,!0)},function(e,n,i){"use strict";var t=i(7).f,a=i(40),o=i(45),r=i(20),s=i(43),c=i(44),p=i(85),u=i(124),l=i(42),f=i(6),d=i(33).fastKey,m=i(49),h=f?"_s":"size",x=function(e,n){var i,t=d(n);if("F"!==t)return e._i[t];for(i=e._f;i;i=i.n)if(i.k==n)return i};e.exports={getConstructor:function(e,n,i,p){var u=e(function(e,t){s(e,u,n,"_i"),e._t=n,e._i=a(null),e._f=void 0,e._l=void 0,e[h]=0,null!=t&&c(t,i,e[p],e)});return o(u.prototype,{clear:function(){for(var e=m(this,n),i=e._i,t=e._f;t;t=t.n)t.r=!0,t.p&&(t.p=t.p.n=void 0),delete i[t.i];e._f=e._l=void 0,e[h]=0},delete:function(e){var i=m(this,n),t=x(i,e);if(t){var a=t.n,o=t.p;delete i._i[t.i],t.r=!0,o&&(o.n=a),a&&(a.p=o),i._f==t&&(i._f=a),i._l==t&&(i._l=o),i[h]--}return!!t},forEach:function(e){m(this,n);for(var i,t=r(e,arguments.length>1?arguments[1]:void 0,3);i=i?i.n:this._f;)for(t(i.v,i.k,this);i&&i.r;)i=i.p},has:function(e){return!!x(m(this,n),e)}}),f&&t(u.prototype,"size",{get:function(){return m(this,n)[h]}}),u},def:function(e,n,i){var t,a,o=x(e,n);return o?o.v=i:(e._l=o={i:a=d(n,!0),k:n,v:i,p:t=e._l,n:void 0,r:!1},e._f||(e._f=o),t&&(t.n=o),e[h]++,"F"!==a&&(e._i[a]=o)),e},getEntry:x,setStrong:function(e,n,i){p(e,n,function(e,i){this._t=m(e,n),this._k=i,this._l=void 0},function(){for(var e=this._k,n=this._l;n&&n.r;)n=n.p;return this._t&&(this._l=n=n?n.n:this._t._f)?u(0,"keys"==e?n.k:"values"==e?n.v:[n.k,n.v]):(this._t=void 0,u(1))},i?"entries":"values",!i,!0),l(n)}}},function(e,n,i){"use strict";var t=i(129),a=i(49);e.exports=i(65)("Set",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return t.def(a(this,"Set"),e=0===e?0:e,e)}},t)},function(e,n,i){"use strict";var t,a=i(27)(0),o=i(12),r=i(33),s=i(112),c=i(132),p=i(4),u=i(3),l=i(49),f=r.getWeak,d=Object.isExtensible,m=c.ufstore,h={},x=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},v={get:function(e){if(p(e)){var n=f(e);return!0===n?m(l(this,"WeakMap")).get(e):n?n[this._i]:void 0}},set:function(e,n){return c.def(l(this,"WeakMap"),e,n)}},b=e.exports=i(65)("WeakMap",x,v,c,!0,!0);u(function(){return 7!=(new b).set((Object.freeze||Object)(h),7).get(h)})&&(s((t=c.getConstructor(x,"WeakMap")).prototype,v),r.NEED=!0,a(["delete","has","get","set"],function(e){var n=b.prototype,i=n[e];o(n,e,function(n,a){if(p(n)&&!d(n)){this._f||(this._f=new t);var o=this._f[e](n,a);return"set"==e?this:o}return i.call(this,n,a)})}))},function(e,n,i){"use strict";var t=i(45),a=i(33).getWeak,o=i(1),r=i(4),s=i(43),c=i(44),p=i(27),u=i(15),l=i(49),f=p(5),d=p(6),m=0,h=function(e){return e._l||(e._l=new x)},x=function(){this.a=[]},v=function(e,n){return f(e.a,function(e){return e[0]===n})};x.prototype={get:function(e){var n=v(this,e);if(n)return n[1]},has:function(e){return!!v(this,e)},set:function(e,n){var i=v(this,e);i?i[1]=n:this.a.push([e,n])},delete:function(e){var n=d(this.a,function(n){return n[0]===e});return~n&&this.a.splice(n,1),!!~n}},e.exports={getConstructor:function(e,n,i,o){var p=e(function(e,t){s(e,p,n,"_i"),e._t=n,e._i=m++,e._l=void 0,null!=t&&c(t,i,e[o],e)});return t(p.prototype,{delete:function(e){if(!r(e))return!1;var i=a(e);return!0===i?h(l(this,n)).delete(e):i&&u(i,this._i)&&delete i[this._i]},has:function(e){if(!r(e))return!1;var i=a(e);return!0===i?h(l(this,n)).has(e):i&&u(i,this._i)}}),p},def:function(e,n,i){var t=a(o(n),!0);return!0===t?h(e).set(n,i):t[e._i]=i,e},ufstore:h}},function(e,n,i){var t=i(25),a=i(8);e.exports=function(e){if(void 0===e)return 0;var n=t(e),i=a(n);if(n!==i)throw RangeError("Wrong length!");return i}},function(e,n,i){var t=i(41),a=i(57),o=i(1),r=i(2).Reflect;e.exports=r&&r.ownKeys||function(e){var n=t.f(o(e)),i=a.f;return i?n.concat(i(e)):n}},function(e,n,i){"use strict";var t=i(58),a=i(4),o=i(8),r=i(20),s=i(5)("isConcatSpreadable");e.exports=function e(n,i,c,p,u,l,f,d){for(var m,h,x=u,v=0,b=!!f&&r(f,d,3);v<p;){if(v in c){if(m=b?b(c[v],v,i):c[v],h=!1,a(m)&&(h=void 0!==(h=m[s])?!!h:t(m)),h&&l>0)x=e(n,i,m,o(m.length),x,l-1)-1;else{if(x>=9007199254740991)throw TypeError();n[x]=m}x++}v++}return x}},function(e,n,i){var t=i(8),a=i(81),o=i(24);e.exports=function(e,n,i,r){var s=String(o(e)),c=s.length,p=void 0===i?" ":String(i),u=t(n);if(u<=c||""==p)return s;var l=u-c,f=a.call(p,Math.ceil(l/p.length));return f.length>l&&(f=f.slice(0,l)),r?f+s:s+f}},function(e,n,i){var t=i(38),a=i(16),o=i(52).f;e.exports=function(e){return function(n){for(var i,r=a(n),s=t(r),c=s.length,p=0,u=[];c>p;)o.call(r,i=s[p++])&&u.push(e?[i,r[i]]:r[i]);return u}}},function(e,n,i){var t=i(53),a=i(139);e.exports=function(e){return function(){if(t(this)!=e)throw TypeError(e+"#toJSON isn't generic");return a(this)}}},function(e,n,i){var t=i(44);e.exports=function(e,n){var i=[];return t(e,!1,i.push,i,n),i}},function(e,n){e.exports=Math.scale||function(e,n,i,t,a){return 0===arguments.length||e!=e||n!=n||i!=i||t!=t||a!=a?NaN:e===1/0||e===-1/0?e:(e-n)*(a-t)/(i-n)+t}},function(e,n,i){"use strict";e.exports=function(e,n){return function(){for(var i=new Array(arguments.length),t=0;t<i.length;t++)i[t]=arguments[t];return e.apply(n,i)}}},function(e,n,i){"use strict";var t=i(100);e.exports=function(e,n,i){var a=i.config.validateStatus;i.status&&a&&!a(i.status)?n(t("Request failed with status code "+i.status,i.config,null,i.request,i)):e(i)}},function(e,n,i){"use strict";e.exports=function(e,n,i,t,a){return e.config=n,i&&(e.code=i),e.request=t,e.response=a,e}},function(e,n,i){"use strict";var t=i(14);function a(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,i){if(!n)return e;var o;if(i)o=i(n);else if(t.isURLSearchParams(n))o=n.toString();else{var r=[];t.forEach(n,function(e,n){null!=e&&(t.isArray(e)?n+="[]":e=[e],t.forEach(e,function(e){t.isDate(e)?e=e.toISOString():t.isObject(e)&&(e=JSON.stringify(e)),r.push(a(n)+"="+a(e))}))}),o=r.join("&")}return o&&(e+=(-1===e.indexOf("?")?"?":"&")+o),e}},function(e,n,i){var t=i(103),a=t.URL,o=i(101),r=i(102),s=i(378),c=i(70).Writable,p=i(379)("follow-redirects"),u={GET:!0,HEAD:!0,OPTIONS:!0,TRACE:!0},l=Object.create(null);function f(e,n){c.call(this),e.headers=e.headers||{},this._options=e,this._ended=!1,this._ending=!1,this._redirectCount=0,this._redirects=[],this._requestBodyLength=0,this._requestBodyBuffers=[],e.host&&(e.hostname||(e.hostname=e.host),delete e.host),n&&this.on("response",n);var i=this;if(this._onNativeResponse=function(e){i._processResponse(e)},!e.pathname&&e.path){var t=e.path.indexOf("?");t<0?e.pathname=e.path:(e.pathname=e.path.substring(0,t),e.search=e.path.substring(t))}this._performRequest()}function d(e,n){clearTimeout(e._timeout),e._timeout=setTimeout(function(){e.emit("timeout")},n)}function m(){clearTimeout(this._timeout)}function h(e){var n={maxRedirects:21,maxBodyLength:10485760},i={};return Object.keys(e).forEach(function(o){var r=o+":",c=i[r]=e[o],u=n[o]=Object.create(c);u.request=function(e,o,c){if("string"==typeof e){var u=e;try{e=v(new a(u))}catch(n){e=t.parse(u)}}else a&&e instanceof a?e=v(e):(c=o,o=e,e={protocol:r});return"function"==typeof o&&(c=o,o=null),(o=Object.assign({maxRedirects:n.maxRedirects,maxBodyLength:n.maxBodyLength},e,o)).nativeProtocols=i,s.equal(o.protocol,r,"protocol mismatch"),p("options",o),new f(o,c)},u.get=function(e,n,i){var t=u.request(e,n,i);return t.end(),t}}),n}function x(){}function v(e){var n={protocol:e.protocol,hostname:e.hostname.startsWith("[")?e.hostname.slice(1,-1):e.hostname,hash:e.hash,search:e.search,pathname:e.pathname,path:e.pathname+e.search,href:e.href};return""!==e.port&&(n.port=Number(e.port)),n}["abort","aborted","error","socket","timeout"].forEach(function(e){l[e]=function(n){this._redirectable.emit(e,n)}}),f.prototype=Object.create(c.prototype),f.prototype.write=function(e,n,i){if(this._ending)throw new Error("write after end");if(!("string"==typeof e||"object"==typeof e&&"length"in e))throw new Error("data should be a string, Buffer or Uint8Array");"function"==typeof n&&(i=n,n=null),0!==e.length?this._requestBodyLength+e.length<=this._options.maxBodyLength?(this._requestBodyLength+=e.length,this._requestBodyBuffers.push({data:e,encoding:n}),this._currentRequest.write(e,n,i)):(this.emit("error",new Error("Request body larger than maxBodyLength limit")),this.abort()):i&&i()},f.prototype.end=function(e,n,i){if("function"==typeof e?(i=e,e=n=null):"function"==typeof n&&(i=n,n=null),e){var t=this,a=this._currentRequest;this.write(e,n,function(){t._ended=!0,a.end(null,null,i)}),this._ending=!0}else this._ended=this._ending=!0,this._currentRequest.end(null,null,i)},f.prototype.setHeader=function(e,n){this._options.headers[e]=n,this._currentRequest.setHeader(e,n)},f.prototype.removeHeader=function(e){delete this._options.headers[e],this._currentRequest.removeHeader(e)},f.prototype.setTimeout=function(e,n){if(n&&this.once("timeout",n),this.socket)d(this,e);else{var i=this;this._currentRequest.once("socket",function(){d(i,e)})}return this.once("response",m),this.once("error",m),this},["abort","flushHeaders","getHeader","setNoDelay","setSocketKeepAlive"].forEach(function(e){f.prototype[e]=function(n,i){return this._currentRequest[e](n,i)}}),["aborted","connection","socket"].forEach(function(e){Object.defineProperty(f.prototype,e,{get:function(){return this._currentRequest[e]}})}),f.prototype._performRequest=function(){var e=this._options.protocol,n=this._options.nativeProtocols[e];if(n){if(this._options.agents){var i=e.substr(0,e.length-1);this._options.agent=this._options.agents[i]}var a=this._currentRequest=n.request(this._options,this._onNativeResponse);for(var o in this._currentUrl=t.format(this._options),a._redirectable=this,l)o&&a.on(o,l[o]);if(this._isRedirect){var r=0,s=this,c=this._requestBodyBuffers;!function e(n){if(a===s._currentRequest)if(n)s.emit("error",n);else if(r<c.length){var i=c[r++];a.finished||a.write(i.data,i.encoding,e)}else s._ended&&a.end()}()}}else this.emit("error",new Error("Unsupported protocol "+e))},f.prototype._processResponse=function(e){this._options.trackRedirects&&this._redirects.push({url:this._currentUrl,headers:e.headers,statusCode:e.statusCode});var n=e.headers.location;if(n&&!1!==this._options.followRedirects&&e.statusCode>=300&&e.statusCode<400){if(this._currentRequest.removeAllListeners(),this._currentRequest.on("error",x),this._currentRequest.abort(),++this._redirectCount>this._options.maxRedirects)return void this.emit("error",new Error("Max redirects exceeded."));var i,a=this._options.headers;if(307!==e.statusCode&&!(this._options.method in u))for(i in this._options.method="GET",this._requestBodyBuffers=[],a)/^content-/i.test(i)&&delete a[i];if(!this._isRedirect)for(i in a)/^host$/i.test(i)&&delete a[i];var o=t.resolve(this._currentUrl,n);p("redirecting to",o),Object.assign(this._options,t.parse(o)),this._isRedirect=!0,this._performRequest(),e.destroy()}else e.responseUrl=this._currentUrl,e.redirects=this._redirects,this.emit("response",e),this._requestBodyBuffers=[]},e.exports=h({http:o,https:r}),e.exports.wrap=h},function(e,n,i){e.exports=function(e){function n(e){let n=0;for(let i=0;i<e.length;i++)n=(n<<5)-n+e.charCodeAt(i),n|=0;return t.colors[Math.abs(n)%t.colors.length]}function t(e){let i;function r(...e){if(!r.enabled)return;const n=r,a=Number(new Date),o=a-(i||a);n.diff=o,n.prev=i,n.curr=a,i=a,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let s=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(i,a)=>{if("%%"===i)return i;s++;const o=t.formatters[a];if("function"==typeof o){const t=e[s];i=o.call(n,t),e.splice(s,1),s--}return i}),t.formatArgs.call(n,e),(n.log||t.log).apply(n,e)}return r.namespace=e,r.enabled=t.enabled(e),r.useColors=t.useColors(),r.color=n(e),r.destroy=a,r.extend=o,"function"==typeof t.init&&t.init(r),t.instances.push(r),r}function a(){const e=t.instances.indexOf(this);return-1!==e&&(t.instances.splice(e,1),!0)}function o(e,n){return t(this.namespace+(void 0===n?":":n)+e)}function r(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(r),...t.skips.map(r).map(e=>"-"+e)].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.names=[],t.skips=[];const i=("string"==typeof e?e:"").split(/[\s,]+/),a=i.length;for(n=0;n<a;n++)i[n]&&("-"===(e=i[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")));for(n=0;n<t.instances.length;n++){const e=t.instances[n];e.enabled=t.enabled(e.namespace)}},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,i;for(n=0,i=t.skips.length;n<i;n++)if(t.skips[n].test(e))return!1;for(n=0,i=t.names.length;n<i;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=i(381),Object.keys(e).forEach(n=>{t[n]=e[n]}),t.instances=[],t.names=[],t.skips=[],t.formatters={},t.selectColor=n,t.enable(t.load()),t}},function(e,n){e.exports=require("os")},function(e,n,i){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,n,i){"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},function(e,n,i){const t=i(395).Buffer;e.exports=function(e){if(e.length>=255)throw new TypeError("Alphabet too long");const n=new Uint8Array(256);n.fill(255);for(let i=0;i<e.length;i++){const t=e.charAt(i),a=t.charCodeAt(0);if(255!==n[a])throw new TypeError(t+" is ambiguous");n[a]=i}const i=e.length,a=e.charAt(0),o=Math.log(i)/Math.log(256),r=Math.log(256)/Math.log(i);function s(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return t.alloc(0);let r=0;if(" "===e[r])return;let s=0,c=0;for(;e[r]===a;)s++,r++;const p=(e.length-r)*o+1>>>0,u=new Uint8Array(p);for(;e[r];){let t=n[e.charCodeAt(r)];if(255===t)return;let a=0;for(let e=p-1;(0!==t||a<c)&&-1!==e;e--,a++)t+=i*u[e]>>>0,u[e]=t%256>>>0,t=t/256>>>0;if(0!==t)throw new Error("Non-zero carry");c=a,r++}if(" "===e[r])return;let l=p-c;for(;l!==p&&0===u[l];)l++;const f=t.allocUnsafe(s+(p-l));f.fill(0,0,s);let d=s;for(;l!==p;)f[d++]=u[l++];return f}return{encode:function(n){if(!t.isBuffer(n))throw new TypeError("Expected Buffer");if(0===n.length)return"";let o=0,s=0,c=0;const p=n.length;for(;c!==p&&0===n[c];)c++,o++;const u=(p-c)*r+1>>>0,l=new Uint8Array(u);for(;c!==p;){let e=n[c],t=0;for(let n=u-1;(0!==e||t<s)&&-1!==n;n--,t++)e+=256*l[n]>>>0,l[n]=e%i>>>0,e=e/i>>>0;if(0!==e)throw new Error("Non-zero carry");s=t,c++}let f=u-s;for(;f!==u&&0===l[f];)f++;let d=a.repeat(o);for(;f<u;++f)d+=e.charAt(l[f]);return d},decodeUnsafe:s,decode:function(e){const n=s(e);if(n)return n;throw new Error("Non-base"+i+" character")}}}},function(e,n){e.exports=require("buffer")},function(e,n,i){"use strict";const t=i(400);(n=e.exports=o).encode=function(e,n){const i=r(e);return o(i.name,Buffer.from(i.encode(n)))},n.decode=function(e){Buffer.isBuffer(e)&&(e=e.toString());const n=e.substring(0,1);"string"==typeof(e=e.substring(1,e.length))&&(e=Buffer.from(e));const i=r(n);return Buffer.from(i.decode(e.toString()))},n.isEncoded=function(e){Buffer.isBuffer(e)&&(e=e.toString());if("[object String]"!==Object.prototype.toString.call(e))return!1;const n=e.substring(0,1);try{const e=r(n);return e.name}catch(e){return!1}},n.names=Object.freeze(Object.keys(t.names)),n.codes=Object.freeze(Object.keys(t.codes));const a=new Error("Unsupported encoding");function o(e,n){if(!n)throw new Error("requires an encoded buffer");const i=r(e),t=Buffer.from(i.code);return function(e,n){r(e).decode(n.toString())}(i.name,n),Buffer.concat([t,n])}function r(e){let n;if(t.names[e])n=t.names[e];else{if(!t.codes[e])throw a;n=t.codes[e]}if(!n.isImplemented())throw new Error("Base "+e+" is not implemented yet");return n}},function(e,n,i){"use strict";const t=i(405),a=i(105),o=i(50),r=i(72),s=i(154).proto(function(e){if(!(this instanceof s))return new s(e);if(null==e&&(e=""),e instanceof Buffer)this.buffer=t.fromBuffer(e);else if("string"==typeof e||e instanceof String){if(e.length>0&&"/"!==e.charAt(0))throw new Error(`multiaddr "${e}" must start with a "/"`);this.buffer=t.fromString(e)}else{if(!(e.buffer&&e.protos&&e.protoCodes))throw new Error("addr must be a string, Buffer, or another Multiaddr");this.buffer=t.fromBuffer(e.buffer)}},{className:"Multiaddr",symbolName:"@multiformats/js-multiaddr/multiaddr"});s.prototype.toString=function(){return t.bufferToString(this.buffer)},s.prototype.toJSON=s.prototype.toString,s.prototype.toOptions=function(){const e={},n=this.toString().split("/");return e.family="ip4"===n[1]?"ipv4":"ipv6",e.host=n[2],e.transport=n[3],e.port=n[4],e},s.prototype.inspect=function(){return"<Multiaddr "+this.buffer.toString("hex")+" - "+t.bufferToString(this.buffer)+">"},s.prototype.protos=function(){return this.protoCodes().map(e=>Object.assign({},a(e)))},s.prototype.protoCodes=function(){const e=[],n=this.buffer;let i=0;for(;i<n.length;){const r=o.decode(n,i),s=o.decode.bytes,c=a(r);i+=t.sizeForAddr(c,n.slice(i+s))+s,e.push(r)}return e},s.prototype.protoNames=function(){return this.protos().map(e=>e.name)},s.prototype.tuples=function(){return t.bufferToTuples(this.buffer)},s.prototype.stringTuples=function(){const e=t.bufferToTuples(this.buffer);return t.tuplesToStringTuples(e)},s.prototype.encapsulate=function(e){return e=s(e),s(this.toString()+e.toString())},s.prototype.decapsulate=function(e){e=e.toString();const n=this.toString(),i=n.lastIndexOf(e);if(i<0)throw new Error("Address "+this+" does not contain subaddress: "+e);return s(n.slice(0,i))},s.prototype.getPeerId=function(){let e=null;try{e=this.stringTuples().filter(e=>{if(e[0]===a.names.ipfs.code)return!0})[0][1],r.decode(e)}catch(n){e=null}return e},s.prototype.getPath=function(){let e=null;try{e=this.stringTuples().filter(e=>{if(a(e[0]).path)return!0})[0][1]}catch(n){e=null}return e},s.prototype.equals=function(e){return this.buffer.equals(e.buffer)},s.prototype.nodeAddress=function(){const e=this.protoCodes(),n=this.protoNames(),i=this.toString().split("/").slice(1);if(i.length<4)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}".');if(4!==e[0]&&41!==e[0]&&54!==e[0]&&55!==e[0])throw new Error(`no protocol with name: "'${n[0]}'". Must have a valid family name: "{ip4, ip6, dns4, dns6}".`);if("tcp"!==i[2]&&"udp"!==i[2])throw new Error(`no protocol with name: "'${n[1]}'". Must have a valid transport protocol: "{tcp, udp}".`);return{family:41===e[0]||55===e[0]?6:4,address:i[1],port:i[3]}},s.fromNodeAddress=function(e,n){if(!e)throw new Error("requires node address object");if(!n)throw new Error("requires transport protocol");const i="IPv6"===e.family?"ip6":"ip4";return s("/"+[i,e.address,n,e.port].join("/"))},s.prototype.isThinWaistAddress=function(e){const n=(e||this).protos();return 2===n.length&&((4===n[0].code||41===n[0].code)&&(6===n[1].code||273===n[1].code))},s.protocols=a,s.isName=function(e){return!!s.isMultiaddr(e)&&e.protos().some(e=>e.resolvable)},s.resolve=function(e,n){return s.isMultiaddr(e)&&s.isName(e)?n(new Error("not implemented yet")):n(new Error("not a valid name"))},e.exports=s},function(e,n,i){"use strict";e.exports=function(e,{className:n,symbolName:i}){const t=Symbol.for(i),a={[n]:class extends e{constructor(...e){super(...e),Object.defineProperty(this,t,{value:!0})}get[Symbol.toStringTag](){return n}}}[n];return a[`is${n}`]=(e=>!(!e||!e[t])),a},e.exports.proto=function(e,{className:n,symbolName:i,withoutNew:t}){const a=Symbol.for(i),o={[n]:function(...n){if(t&&!(this instanceof o))return new o(...n);const i=e.call(this,...n)||this;return i&&!i[a]&&Object.defineProperty(i,a,{value:!0}),i}}[n];return o.prototype=Object.create(e.prototype),o.prototype.constructor=o,Object.defineProperty(o.prototype,Symbol.toStringTag,{get:()=>n}),o[`is${n}`]=(e=>!(!e||!e[a])),o}},function(e,n,i){"use strict";const t=i(50);function a(e){return parseInt(e.toString("hex"),16)}function o(e){let n=e.toString(16);return n.length%2==1&&(n="0"+n),Buffer.from(n,"hex")}e.exports={numberToBuffer:o,bufferToNumber:a,varintBufferEncode:function(e){return Buffer.from(t.encode(a(e)))},varintBufferDecode:function(e){return o(t.decode(e))}}},function(e,n){e.exports=require("path")},function(e,n,i){var t=i(158),a=i(159);e.exports=function(e,n,i,o){var r=i.keyedList?i.keyedList[i.index]:i.index;i.jobs[r]=function(e,n,i,a){var o;o=2==e.length?e(i,t(a)):e(i,n,t(a));return o}(n,r,e[r],function(e,n){r in i.jobs&&(delete i.jobs[r],e?a(i):i.results[r]=n,o(e,i.results))})}},function(e,n,i){var t=i(429);e.exports=function(e){var n=!1;return t(function(){n=!0}),function(i,a){n?e(i,a):t(function(){e(i,a)})}}},function(e,n){e.exports=function(e){Object.keys(e.jobs).forEach(function(e){"function"==typeof this.jobs[e]&&this.jobs[e]()}.bind(e)),e.jobs={}}},function(e,n){e.exports=function(e,n){var i=!Array.isArray(e),t={index:0,keyedList:i||n?Object.keys(e):null,jobs:{},results:i?{}:[],size:i?Object.keys(e).length:e.length};n&&t.keyedList.sort(i?n:function(i,t){return n(e[i],e[t])});return t}},function(e,n,i){var t=i(159),a=i(158);e.exports=function(e){if(!Object.keys(this.jobs).length)return;this.index=this.size,t(this),a(e)(null,this.results)}},function(e,n,i){var t=i(157),a=i(160),o=i(161);function r(e,n){return e<n?-1:e>n?1:0}e.exports=function(e,n,i,r){var s=a(e,i);return t(e,n,s,function i(a,o){a?r(a,o):(s.index++,s.index<(s.keyedList||e).length?t(e,n,s,i):r(null,s.results))}),o.bind(s,r)},e.exports.ascending=r,e.exports.descending=function(e,n){return-1*r(e,n)}},function(e,n,i){i(164),e.exports=i(366)},function(e,n,i){"use strict";if(i(165),i(362),i(363),global._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");global._babelPolyfill=!0;var t="defineProperty";function a(e,n,i){e[n]||Object[t](e,n,{writable:!0,configurable:!0,value:i})}a(String.prototype,"padLeft","".padStart),a(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function(e){[][e]&&a(Array,e,Function.call.bind([][e]))})},function(e,n,i){i(166),i(168),i(169),i(170),i(171),i(172),i(173),i(174),i(175),i(176),i(177),i(178),i(179),i(180),i(181),i(182),i(184),i(185),i(186),i(187),i(188),i(189),i(190),i(191),i(192),i(193),i(194),i(195),i(196),i(197),i(198),i(199),i(200),i(201),i(202),i(203),i(204),i(205),i(206),i(207),i(208),i(209),i(210),i(211),i(212),i(213),i(214),i(215),i(216),i(217),i(218),i(219),i(220),i(221),i(222),i(223),i(224),i(225),i(226),i(227),i(228),i(229),i(230),i(231),i(232),i(233),i(234),i(235),i(236),i(237),i(238),i(239),i(240),i(241),i(242),i(243),i(244),i(246),i(247),i(249),i(250),i(251),i(252),i(253),i(254),i(255),i(257),i(258),i(259),i(260),i(261),i(262),i(263),i(264),i(265),i(266),i(267),i(268),i(269),i(94),i(270),i(271),i(125),i(272),i(273),i(274),i(275),i(276),i(128),i(130),i(131),i(277),i(278),i(279),i(280),i(281),i(282),i(283),i(284),i(285),i(286),i(287),i(288),i(289),i(290),i(291),i(292),i(293),i(294),i(295),i(296),i(297),i(298),i(299),i(300),i(301),i(302),i(303),i(304),i(305),i(306),i(307),i(308),i(309),i(310),i(311),i(312),i(313),i(314),i(315),i(316),i(317),i(318),i(319),i(320),i(321),i(322),i(323),i(324),i(325),i(326),i(327),i(328),i(329),i(330),i(331),i(332),i(333),i(334),i(335),i(336),i(337),i(338),i(339),i(340),i(341),i(342),i(343),i(344),i(345),i(346),i(347),i(348),i(349),i(350),i(351),i(352),i(353),i(354),i(355),i(356),i(357),i(358),i(359),i(360),i(361),e.exports=i(19)},function(e,n,i){"use strict";var t=i(2),a=i(15),o=i(6),r=i(0),s=i(12),c=i(33).KEY,p=i(3),u=i(55),l=i(46),f=i(37),d=i(5),m=i(108),h=i(74),x=i(167),v=i(58),b=i(1),g=i(4),k=i(16),y=i(23),S=i(36),w=i(40),_=i(111),E=i(17),B=i(7),j=i(38),I=E.f,N=B.f,A=_.f,C=t.Symbol,K=t.JSON,O=K&&K.stringify,L=d("_hidden"),P=d("toPrimitive"),M={}.propertyIsEnumerable,T=u("symbol-registry"),F=u("symbols"),R=u("op-symbols"),z=Object.prototype,q="function"==typeof C,D=t.QObject,U=!D||!D.prototype||!D.prototype.findChild,V=o&&p(function(){return 7!=w(N({},"a",{get:function(){return N(this,"a",{value:7}).a}})).a})?function(e,n,i){var t=I(z,n);t&&delete z[n],N(e,n,i),t&&e!==z&&N(z,n,t)}:N,$=function(e){var n=F[e]=w(C.prototype);return n._k=e,n},H=q&&"symbol"==typeof C.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof C},W=function(e,n,i){return e===z&&W(R,n,i),b(e),n=y(n,!0),b(i),a(F,n)?(i.enumerable?(a(e,L)&&e[L][n]&&(e[L][n]=!1),i=w(i,{enumerable:S(0,!1)})):(a(e,L)||N(e,L,S(1,{})),e[L][n]=!0),V(e,n,i)):N(e,n,i)},G=function(e,n){b(e);for(var i,t=x(n=k(n)),a=0,o=t.length;o>a;)W(e,i=t[a++],n[i]);return e},J=function(e){var n=M.call(this,e=y(e,!0));return!(this===z&&a(F,e)&&!a(R,e))&&(!(n||!a(this,e)||!a(F,e)||a(this,L)&&this[L][e])||n)},X=function(e,n){if(e=k(e),n=y(n,!0),e!==z||!a(F,n)||a(R,n)){var i=I(e,n);return!i||!a(F,n)||a(e,L)&&e[L][n]||(i.enumerable=!0),i}},Y=function(e){for(var n,i=A(k(e)),t=[],o=0;i.length>o;)a(F,n=i[o++])||n==L||n==c||t.push(n);return t},Z=function(e){for(var n,i=e===z,t=A(i?R:k(e)),o=[],r=0;t.length>r;)!a(F,n=t[r++])||i&&!a(z,n)||o.push(F[n]);return o};q||(s((C=function(){if(this instanceof C)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),n=function(i){this===z&&n.call(R,i),a(this,L)&&a(this[L],e)&&(this[L][e]=!1),V(this,e,S(1,i))};return o&&U&&V(z,e,{configurable:!0,set:n}),$(e)}).prototype,"toString",function(){return this._k}),E.f=X,B.f=W,i(41).f=_.f=Y,i(52).f=J,i(57).f=Z,o&&!i(34)&&s(z,"propertyIsEnumerable",J,!0),m.f=function(e){return $(d(e))}),r(r.G+r.W+r.F*!q,{Symbol:C});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)d(Q[ee++]);for(var ne=j(d.store),ie=0;ne.length>ie;)h(ne[ie++]);r(r.S+r.F*!q,"Symbol",{for:function(e){return a(T,e+="")?T[e]:T[e]=C(e)},keyFor:function(e){if(!H(e))throw TypeError(e+" is not a symbol!");for(var n in T)if(T[n]===e)return n},useSetter:function(){U=!0},useSimple:function(){U=!1}}),r(r.S+r.F*!q,"Object",{create:function(e,n){return void 0===n?w(e):G(w(e),n)},defineProperty:W,defineProperties:G,getOwnPropertyDescriptor:X,getOwnPropertyNames:Y,getOwnPropertySymbols:Z}),K&&r(r.S+r.F*(!q||p(function(){var e=C();return"[null]"!=O([e])||"{}"!=O({a:e})||"{}"!=O(Object(e))})),"JSON",{stringify:function(e){for(var n,i,t=[e],a=1;arguments.length>a;)t.push(arguments[a++]);if(i=n=t[1],(g(n)||void 0!==e)&&!H(e))return v(n)||(n=function(e,n){if("function"==typeof i&&(n=i.call(this,e,n)),!H(n))return n}),t[1]=n,O.apply(K,t)}}),C.prototype[P]||i(11)(C.prototype,P,C.prototype.valueOf),l(C,"Symbol"),l(Math,"Math",!0),l(t.JSON,"JSON",!0)},function(e,n,i){var t=i(38),a=i(57),o=i(52);e.exports=function(e){var n=t(e),i=a.f;if(i)for(var r,s=i(e),c=o.f,p=0;s.length>p;)c.call(e,r=s[p++])&&n.push(r);return n}},function(e,n,i){var t=i(0);t(t.S,"Object",{create:i(40)})},function(e,n,i){var t=i(0);t(t.S+t.F*!i(6),"Object",{defineProperty:i(7).f})},function(e,n,i){var t=i(0);t(t.S+t.F*!i(6),"Object",{defineProperties:i(110)})},function(e,n,i){var t=i(16),a=i(17).f;i(26)("getOwnPropertyDescriptor",function(){return function(e,n){return a(t(e),n)}})},function(e,n,i){var t=i(9),a=i(18);i(26)("getPrototypeOf",function(){return function(e){return a(t(e))}})},function(e,n,i){var t=i(9),a=i(38);i(26)("keys",function(){return function(e){return a(t(e))}})},function(e,n,i){i(26)("getOwnPropertyNames",function(){return i(111).f})},function(e,n,i){var t=i(4),a=i(33).onFreeze;i(26)("freeze",function(e){return function(n){return e&&t(n)?e(a(n)):n}})},function(e,n,i){var t=i(4),a=i(33).onFreeze;i(26)("seal",function(e){return function(n){return e&&t(n)?e(a(n)):n}})},function(e,n,i){var t=i(4),a=i(33).onFreeze;i(26)("preventExtensions",function(e){return function(n){return e&&t(n)?e(a(n)):n}})},function(e,n,i){var t=i(4);i(26)("isFrozen",function(e){return function(n){return!t(n)||!!e&&e(n)}})},function(e,n,i){var t=i(4);i(26)("isSealed",function(e){return function(n){return!t(n)||!!e&&e(n)}})},function(e,n,i){var t=i(4);i(26)("isExtensible",function(e){return function(n){return!!t(n)&&(!e||e(n))}})},function(e,n,i){var t=i(0);t(t.S+t.F,"Object",{assign:i(112)})},function(e,n,i){var t=i(0);t(t.S,"Object",{is:i(183)})},function(e,n){e.exports=Object.is||function(e,n){return e===n?0!==e||1/e==1/n:e!=e&&n!=n}},function(e,n,i){var t=i(0);t(t.S,"Object",{setPrototypeOf:i(78).set})},function(e,n,i){"use strict";var t=i(53),a={};a[i(5)("toStringTag")]="z",a+""!="[object z]"&&i(12)(Object.prototype,"toString",function(){return"[object "+t(this)+"]"},!0)},function(e,n,i){var t=i(0);t(t.P,"Function",{bind:i(113)})},function(e,n,i){var t=i(7).f,a=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in a||i(6)&&t(a,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},function(e,n,i){"use strict";var t=i(4),a=i(18),o=i(5)("hasInstance"),r=Function.prototype;o in r||i(7).f(r,o,{value:function(e){if("function"!=typeof this||!t(e))return!1;if(!t(this.prototype))return e instanceof this;for(;e=a(e);)if(this.prototype===e)return!0;return!1}})},function(e,n,i){var t=i(0),a=i(115);t(t.G+t.F*(parseInt!=a),{parseInt:a})},function(e,n,i){var t=i(0),a=i(116);t(t.G+t.F*(parseFloat!=a),{parseFloat:a})},function(e,n,i){"use strict";var t=i(2),a=i(15),o=i(21),r=i(80),s=i(23),c=i(3),p=i(41).f,u=i(17).f,l=i(7).f,f=i(47).trim,d=t.Number,m=d,h=d.prototype,x="Number"==o(i(40)(h)),v="trim"in String.prototype,b=function(e){var n=s(e,!1);if("string"==typeof n&&n.length>2){var i,t,a,o=(n=v?n.trim():f(n,3)).charCodeAt(0);if(43===o||45===o){if(88===(i=n.charCodeAt(2))||120===i)return NaN}else if(48===o){switch(n.charCodeAt(1)){case 66:case 98:t=2,a=49;break;case 79:case 111:t=8,a=55;break;default:return+n}for(var r,c=n.slice(2),p=0,u=c.length;p<u;p++)if((r=c.charCodeAt(p))<48||r>a)return NaN;return parseInt(c,t)}}return+n};if(!d(" 0o1")||!d("0b1")||d("+0x1")){d=function(e){var n=arguments.length<1?0:e,i=this;return i instanceof d&&(x?c(function(){h.valueOf.call(i)}):"Number"!=o(i))?r(new m(b(n)),i,d):b(n)};for(var g,k=i(6)?p(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),y=0;k.length>y;y++)a(m,g=k[y])&&!a(d,g)&&l(d,g,u(m,g));d.prototype=h,h.constructor=d,i(12)(t,"Number",d)}},function(e,n,i){"use strict";var t=i(0),a=i(25),o=i(117),r=i(81),s=1..toFixed,c=Math.floor,p=[0,0,0,0,0,0],u="Number.toFixed: incorrect invocation!",l=function(e,n){for(var i=-1,t=n;++i<6;)t+=e*p[i],p[i]=t%1e7,t=c(t/1e7)},f=function(e){for(var n=6,i=0;--n>=0;)i+=p[n],p[n]=c(i/e),i=i%e*1e7},d=function(){for(var e=6,n="";--e>=0;)if(""!==n||0===e||0!==p[e]){var i=String(p[e]);n=""===n?i:n+r.call("0",7-i.length)+i}return n},m=function(e,n,i){return 0===n?i:n%2==1?m(e,n-1,i*e):m(e*e,n/2,i)};t(t.P+t.F*(!!s&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!i(3)(function(){s.call({})})),"Number",{toFixed:function(e){var n,i,t,s,c=o(this,u),p=a(e),h="",x="0";if(p<0||p>20)throw RangeError(u);if(c!=c)return"NaN";if(c<=-1e21||c>=1e21)return String(c);if(c<0&&(h="-",c=-c),c>1e-21)if(i=(n=function(e){for(var n=0,i=e;i>=4096;)n+=12,i/=4096;for(;i>=2;)n+=1,i/=2;return n}(c*m(2,69,1))-69)<0?c*m(2,-n,1):c/m(2,n,1),i*=4503599627370496,(n=52-n)>0){for(l(0,i),t=p;t>=7;)l(1e7,0),t-=7;for(l(m(10,t,1),0),t=n-1;t>=23;)f(1<<23),t-=23;f(1<<t),l(1,1),f(2),x=d()}else l(0,i),l(1<<-n,0),x=d()+r.call("0",p);return x=p>0?h+((s=x.length)<=p?"0."+r.call("0",p-s)+x:x.slice(0,s-p)+"."+x.slice(s-p)):h+x}})},function(e,n,i){"use strict";var t=i(0),a=i(3),o=i(117),r=1..toPrecision;t(t.P+t.F*(a(function(){return"1"!==r.call(1,void 0)})||!a(function(){r.call({})})),"Number",{toPrecision:function(e){var n=o(this,"Number#toPrecision: incorrect invocation!");return void 0===e?r.call(n):r.call(n,e)}})},function(e,n,i){var t=i(0);t(t.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,n,i){var t=i(0),a=i(2).isFinite;t(t.S,"Number",{isFinite:function(e){return"number"==typeof e&&a(e)}})},function(e,n,i){var t=i(0);t(t.S,"Number",{isInteger:i(118)})},function(e,n,i){var t=i(0);t(t.S,"Number",{isNaN:function(e){return e!=e}})},function(e,n,i){var t=i(0),a=i(118),o=Math.abs;t(t.S,"Number",{isSafeInteger:function(e){return a(e)&&o(e)<=9007199254740991}})},function(e,n,i){var t=i(0);t(t.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,n,i){var t=i(0);t(t.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,n,i){var t=i(0),a=i(116);t(t.S+t.F*(Number.parseFloat!=a),"Number",{parseFloat:a})},function(e,n,i){var t=i(0),a=i(115);t(t.S+t.F*(Number.parseInt!=a),"Number",{parseInt:a})},function(e,n,i){var t=i(0),a=i(119),o=Math.sqrt,r=Math.acosh;t(t.S+t.F*!(r&&710==Math.floor(r(Number.MAX_VALUE))&&r(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:a(e-1+o(e-1)*o(e+1))}})},function(e,n,i){var t=i(0),a=Math.asinh;t(t.S+t.F*!(a&&1/a(0)>0),"Math",{asinh:function e(n){return isFinite(n=+n)&&0!=n?n<0?-e(-n):Math.log(n+Math.sqrt(n*n+1)):n}})},function(e,n,i){var t=i(0),a=Math.atanh;t(t.S+t.F*!(a&&1/a(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,n,i){var t=i(0),a=i(82);t(t.S,"Math",{cbrt:function(e){return a(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,n,i){var t=i(0),a=Math.exp;t(t.S,"Math",{cosh:function(e){return(a(e=+e)+a(-e))/2}})},function(e,n,i){var t=i(0),a=i(83);t(t.S+t.F*(a!=Math.expm1),"Math",{expm1:a})},function(e,n,i){var t=i(0);t(t.S,"Math",{fround:i(120)})},function(e,n,i){var t=i(0),a=Math.abs;t(t.S,"Math",{hypot:function(e,n){for(var i,t,o=0,r=0,s=arguments.length,c=0;r<s;)c<(i=a(arguments[r++]))?(o=o*(t=c/i)*t+1,c=i):o+=i>0?(t=i/c)*t:i;return c===1/0?1/0:c*Math.sqrt(o)}})},function(e,n,i){var t=i(0),a=Math.imul;t(t.S+t.F*i(3)(function(){return-5!=a(4294967295,5)||2!=a.length}),"Math",{imul:function(e,n){var i=+e,t=+n,a=65535&i,o=65535&t;return 0|a*o+((65535&i>>>16)*o+a*(65535&t>>>16)<<16>>>0)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,n,i){var t=i(0);t(t.S,"Math",{log1p:i(119)})},function(e,n,i){var t=i(0);t(t.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,n,i){var t=i(0);t(t.S,"Math",{sign:i(82)})},function(e,n,i){var t=i(0),a=i(83),o=Math.exp;t(t.S+t.F*i(3)(function(){return-2e-17!=!Math.sinh(-2e-17)}),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(a(e)-a(-e))/2:(o(e-1)-o(-e-1))*(Math.E/2)}})},function(e,n,i){var t=i(0),a=i(83),o=Math.exp;t(t.S,"Math",{tanh:function(e){var n=a(e=+e),i=a(-e);return n==1/0?1:i==1/0?-1:(n-i)/(o(e)+o(-e))}})},function(e,n,i){var t=i(0);t(t.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,n,i){var t=i(0),a=i(39),o=String.fromCharCode,r=String.fromCodePoint;t(t.S+t.F*(!!r&&1!=r.length),"String",{fromCodePoint:function(e){for(var n,i=[],t=arguments.length,r=0;t>r;){if(n=+arguments[r++],a(n,1114111)!==n)throw RangeError(n+" is not a valid code point");i.push(n<65536?o(n):o(55296+((n-=65536)>>10),n%1024+56320))}return i.join("")}})},function(e,n,i){var t=i(0),a=i(16),o=i(8);t(t.S,"String",{raw:function(e){for(var n=a(e.raw),i=o(n.length),t=arguments.length,r=[],s=0;i>s;)r.push(String(n[s++])),s<t&&r.push(String(arguments[s]));return r.join("")}})},function(e,n,i){"use strict";i(47)("trim",function(e){return function(){return e(this,3)}})},function(e,n,i){"use strict";var t=i(84)(!0);i(85)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,n=this._t,i=this._i;return i>=n.length?{value:void 0,done:!0}:(e=t(n,i),this._i+=e.length,{value:e,done:!1})})},function(e,n,i){"use strict";var t=i(0),a=i(84)(!1);t(t.P,"String",{codePointAt:function(e){return a(this,e)}})},function(e,n,i){"use strict";var t=i(0),a=i(8),o=i(87),r="".endsWith;t(t.P+t.F*i(88)("endsWith"),"String",{endsWith:function(e){var n=o(this,e,"endsWith"),i=arguments.length>1?arguments[1]:void 0,t=a(n.length),s=void 0===i?t:Math.min(a(i),t),c=String(e);return r?r.call(n,c,s):n.slice(s-c.length,s)===c}})},function(e,n,i){"use strict";var t=i(0),a=i(87);t(t.P+t.F*i(88)("includes"),"String",{includes:function(e){return!!~a(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,n,i){var t=i(0);t(t.P,"String",{repeat:i(81)})},function(e,n,i){"use strict";var t=i(0),a=i(8),o=i(87),r="".startsWith;t(t.P+t.F*i(88)("startsWith"),"String",{startsWith:function(e){var n=o(this,e,"startsWith"),i=a(Math.min(arguments.length>1?arguments[1]:void 0,n.length)),t=String(e);return r?r.call(n,t,i):n.slice(i,i+t.length)===t}})},function(e,n,i){"use strict";i(13)("anchor",function(e){return function(n){return e(this,"a","name",n)}})},function(e,n,i){"use strict";i(13)("big",function(e){return function(){return e(this,"big","","")}})},function(e,n,i){"use strict";i(13)("blink",function(e){return function(){return e(this,"blink","","")}})},function(e,n,i){"use strict";i(13)("bold",function(e){return function(){return e(this,"b","","")}})},function(e,n,i){"use strict";i(13)("fixed",function(e){return function(){return e(this,"tt","","")}})},function(e,n,i){"use strict";i(13)("fontcolor",function(e){return function(n){return e(this,"font","color",n)}})},function(e,n,i){"use strict";i(13)("fontsize",function(e){return function(n){return e(this,"font","size",n)}})},function(e,n,i){"use strict";i(13)("italics",function(e){return function(){return e(this,"i","","")}})},function(e,n,i){"use strict";i(13)("link",function(e){return function(n){return e(this,"a","href",n)}})},function(e,n,i){"use strict";i(13)("small",function(e){return function(){return e(this,"small","","")}})},function(e,n,i){"use strict";i(13)("strike",function(e){return function(){return e(this,"strike","","")}})},function(e,n,i){"use strict";i(13)("sub",function(e){return function(){return e(this,"sub","","")}})},function(e,n,i){"use strict";i(13)("sup",function(e){return function(){return e(this,"sup","","")}})},function(e,n,i){var t=i(0);t(t.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,n,i){"use strict";var t=i(0),a=i(9),o=i(23);t(t.P+t.F*i(3)(function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}),"Date",{toJSON:function(e){var n=a(this),i=o(n);return"number"!=typeof i||isFinite(i)?n.toISOString():null}})},function(e,n,i){var t=i(0),a=i(245);t(t.P+t.F*(Date.prototype.toISOString!==a),"Date",{toISOString:a})},function(e,n,i){"use strict";var t=i(3),a=Date.prototype.getTime,o=Date.prototype.toISOString,r=function(e){return e>9?e:"0"+e};e.exports=t(function(){return"0385-07-25T07:06:39.999Z"!=o.call(new Date(-5e13-1))})||!t(function(){o.call(new Date(NaN))})?function(){if(!isFinite(a.call(this)))throw RangeError("Invalid time value");var e=this,n=e.getUTCFullYear(),i=e.getUTCMilliseconds(),t=n<0?"-":n>9999?"+":"";return t+("00000"+Math.abs(n)).slice(t?-6:-4)+"-"+r(e.getUTCMonth()+1)+"-"+r(e.getUTCDate())+"T"+r(e.getUTCHours())+":"+r(e.getUTCMinutes())+":"+r(e.getUTCSeconds())+"."+(i>99?i:"0"+r(i))+"Z"}:o},function(e,n,i){var t=Date.prototype,a=t.toString,o=t.getTime;new Date(NaN)+""!="Invalid Date"&&i(12)(t,"toString",function(){var e=o.call(this);return e==e?a.call(this):"Invalid Date"})},function(e,n,i){var t=i(5)("toPrimitive"),a=Date.prototype;t in a||i(11)(a,t,i(248))},function(e,n,i){"use strict";var t=i(1),a=i(23);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return a(t(this),"number"!=e)}},function(e,n,i){var t=i(0);t(t.S,"Array",{isArray:i(58)})},function(e,n,i){"use strict";var t=i(20),a=i(0),o=i(9),r=i(121),s=i(89),c=i(8),p=i(90),u=i(91);a(a.S+a.F*!i(60)(function(e){Array.from(e)}),"Array",{from:function(e){var n,i,a,l,f=o(e),d="function"==typeof this?this:Array,m=arguments.length,h=m>1?arguments[1]:void 0,x=void 0!==h,v=0,b=u(f);if(x&&(h=t(h,m>2?arguments[2]:void 0,2)),null==b||d==Array&&s(b))for(i=new d(n=c(f.length));n>v;v++)p(i,v,x?h(f[v],v):f[v]);else for(l=b.call(f),i=new d;!(a=l.next()).done;v++)p(i,v,x?r(l,h,[a.value,v],!0):a.value);return i.length=v,i}})},function(e,n,i){"use strict";var t=i(0),a=i(90);t(t.S+t.F*i(3)(function(){function e(){}return!(Array.of.call(e)instanceof e)}),"Array",{of:function(){for(var e=0,n=arguments.length,i=new("function"==typeof this?this:Array)(n);n>e;)a(i,e,arguments[e++]);return i.length=n,i}})},function(e,n,i){"use strict";var t=i(0),a=i(16),o=[].join;t(t.P+t.F*(i(51)!=Object||!i(22)(o)),"Array",{join:function(e){return o.call(a(this),void 0===e?",":e)}})},function(e,n,i){"use strict";var t=i(0),a=i(77),o=i(21),r=i(39),s=i(8),c=[].slice;t(t.P+t.F*i(3)(function(){a&&c.call(a)}),"Array",{slice:function(e,n){var i=s(this.length),t=o(this);if(n=void 0===n?i:n,"Array"==t)return c.call(this,e,n);for(var a=r(e,i),p=r(n,i),u=s(p-a),l=new Array(u),f=0;f<u;f++)l[f]="String"==t?this.charAt(a+f):this[a+f];return l}})},function(e,n,i){"use strict";var t=i(0),a=i(10),o=i(9),r=i(3),s=[].sort,c=[1,2,3];t(t.P+t.F*(r(function(){c.sort(void 0)})||!r(function(){c.sort(null)})||!i(22)(s)),"Array",{sort:function(e){return void 0===e?s.call(o(this)):s.call(o(this),a(e))}})},function(e,n,i){"use strict";var t=i(0),a=i(27)(0),o=i(22)([].forEach,!0);t(t.P+t.F*!o,"Array",{forEach:function(e){return a(this,e,arguments[1])}})},function(e,n,i){var t=i(4),a=i(58),o=i(5)("species");e.exports=function(e){var n;return a(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!a(n.prototype)||(n=void 0),t(n)&&null===(n=n[o])&&(n=void 0)),void 0===n?Array:n}},function(e,n,i){"use strict";var t=i(0),a=i(27)(1);t(t.P+t.F*!i(22)([].map,!0),"Array",{map:function(e){return a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(27)(2);t(t.P+t.F*!i(22)([].filter,!0),"Array",{filter:function(e){return a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(27)(3);t(t.P+t.F*!i(22)([].some,!0),"Array",{some:function(e){return a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(27)(4);t(t.P+t.F*!i(22)([].every,!0),"Array",{every:function(e){return a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(122);t(t.P+t.F*!i(22)([].reduce,!0),"Array",{reduce:function(e){return a(this,e,arguments.length,arguments[1],!1)}})},function(e,n,i){"use strict";var t=i(0),a=i(122);t(t.P+t.F*!i(22)([].reduceRight,!0),"Array",{reduceRight:function(e){return a(this,e,arguments.length,arguments[1],!0)}})},function(e,n,i){"use strict";var t=i(0),a=i(56)(!1),o=[].indexOf,r=!!o&&1/[1].indexOf(1,-0)<0;t(t.P+t.F*(r||!i(22)(o)),"Array",{indexOf:function(e){return r?o.apply(this,arguments)||0:a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(16),o=i(25),r=i(8),s=[].lastIndexOf,c=!!s&&1/[1].lastIndexOf(1,-0)<0;t(t.P+t.F*(c||!i(22)(s)),"Array",{lastIndexOf:function(e){if(c)return s.apply(this,arguments)||0;var n=a(this),i=r(n.length),t=i-1;for(arguments.length>1&&(t=Math.min(t,o(arguments[1]))),t<0&&(t=i+t);t>=0;t--)if(t in n&&n[t]===e)return t||0;return-1}})},function(e,n,i){var t=i(0);t(t.P,"Array",{copyWithin:i(123)}),i(35)("copyWithin")},function(e,n,i){var t=i(0);t(t.P,"Array",{fill:i(93)}),i(35)("fill")},function(e,n,i){"use strict";var t=i(0),a=i(27)(5),o=!0;"find"in[]&&Array(1).find(function(){o=!1}),t(t.P+t.F*o,"Array",{find:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i(35)("find")},function(e,n,i){"use strict";var t=i(0),a=i(27)(6),o="findIndex",r=!0;o in[]&&Array(1)[o](function(){r=!1}),t(t.P+t.F*r,"Array",{findIndex:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i(35)(o)},function(e,n,i){i(42)("Array")},function(e,n,i){var t=i(2),a=i(80),o=i(7).f,r=i(41).f,s=i(59),c=i(61),p=t.RegExp,u=p,l=p.prototype,f=/a/g,d=/a/g,m=new p(f)!==f;if(i(6)&&(!m||i(3)(function(){return d[i(5)("match")]=!1,p(f)!=f||p(d)==d||"/a/i"!=p(f,"i")}))){p=function(e,n){var i=this instanceof p,t=s(e),o=void 0===n;return!i&&t&&e.constructor===p&&o?e:a(m?new u(t&&!o?e.source:e,n):u((t=e instanceof p)?e.source:e,t&&o?c.call(e):n),i?this:l,p)};for(var h=function(e){e in p||o(p,e,{configurable:!0,get:function(){return u[e]},set:function(n){u[e]=n}})},x=r(u),v=0;x.length>v;)h(x[v++]);l.constructor=p,p.prototype=l,i(12)(t,"RegExp",p)}i(42)("RegExp")},function(e,n,i){"use strict";i(125);var t=i(1),a=i(61),o=i(6),r=/./.toString,s=function(e){i(12)(RegExp.prototype,"toString",e,!0)};i(3)(function(){return"/a/b"!=r.call({source:"a",flags:"b"})})?s(function(){var e=t(this);return"/".concat(e.source,"/","flags"in e?e.flags:!o&&e instanceof RegExp?a.call(e):void 0)}):"toString"!=r.name&&s(function(){return r.call(this)})},function(e,n,i){i(62)("match",1,function(e,n,i){return[function(i){"use strict";var t=e(this),a=null==i?void 0:i[n];return void 0!==a?a.call(i,t):new RegExp(i)[n](String(t))},i]})},function(e,n,i){i(62)("replace",2,function(e,n,i){return[function(t,a){"use strict";var o=e(this),r=null==t?void 0:t[n];return void 0!==r?r.call(t,o,a):i.call(String(o),t,a)},i]})},function(e,n,i){i(62)("search",1,function(e,n,i){return[function(i){"use strict";var t=e(this),a=null==i?void 0:i[n];return void 0!==a?a.call(i,t):new RegExp(i)[n](String(t))},i]})},function(e,n,i){i(62)("split",2,function(e,n,t){"use strict";var a=i(59),o=t,r=[].push;if("c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length){var s=void 0===/()??/.exec("")[1];t=function(e,n){var i=String(this);if(void 0===e&&0===n)return[];if(!a(e))return o.call(i,e,n);var t,c,p,u,l,f=[],d=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),m=0,h=void 0===n?4294967295:n>>>0,x=new RegExp(e.source,d+"g");for(s||(t=new RegExp("^"+x.source+"$(?!\\s)",d));(c=x.exec(i))&&!((p=c.index+c[0].length)>m&&(f.push(i.slice(m,c.index)),!s&&c.length>1&&c[0].replace(t,function(){for(l=1;l<arguments.length-2;l++)void 0===arguments[l]&&(c[l]=void 0)}),c.length>1&&c.index<i.length&&r.apply(f,c.slice(1)),u=c[0].length,m=p,f.length>=h));)x.lastIndex===c.index&&x.lastIndex++;return m===i.length?!u&&x.test("")||f.push(""):f.push(i.slice(m)),f.length>h?f.slice(0,h):f}}else"0".split(void 0,0).length&&(t=function(e,n){return void 0===e&&0===n?[]:o.call(this,e,n)});return[function(i,a){var o=e(this),r=null==i?void 0:i[n];return void 0!==r?r.call(i,o,a):t.call(String(o),i,a)},t]})},function(e,n,i){"use strict";var t,a,o,r,s=i(34),c=i(2),p=i(20),u=i(53),l=i(0),f=i(4),d=i(10),m=i(43),h=i(44),x=i(63),v=i(95).set,b=i(96)(),g=i(97),k=i(126),y=i(64),S=i(127),w=c.TypeError,_=c.process,E=_&&_.versions,B=E&&E.v8||"",j=c.Promise,I="process"==u(_),N=function(){},A=a=g.f,C=!!function(){try{var e=j.resolve(1),n=(e.constructor={})[i(5)("species")]=function(e){e(N,N)};return(I||"function"==typeof PromiseRejectionEvent)&&e.then(N)instanceof n&&0!==B.indexOf("6.6")&&-1===y.indexOf("Chrome/66")}catch(e){}}(),K=function(e){var n;return!(!f(e)||"function"!=typeof(n=e.then))&&n},O=function(e,n){if(!e._n){e._n=!0;var i=e._c;b(function(){for(var t=e._v,a=1==e._s,o=0,r=function(n){var i,o,r,s=a?n.ok:n.fail,c=n.resolve,p=n.reject,u=n.domain;try{s?(a||(2==e._h&&M(e),e._h=1),!0===s?i=t:(u&&u.enter(),i=s(t),u&&(u.exit(),r=!0)),i===n.promise?p(w("Promise-chain cycle")):(o=K(i))?o.call(i,c,p):c(i)):p(t)}catch(e){u&&!r&&u.exit(),p(e)}};i.length>o;)r(i[o++]);e._c=[],e._n=!1,n&&!e._h&&L(e)})}},L=function(e){v.call(c,function(){var n,i,t,a=e._v,o=P(e);if(o&&(n=k(function(){I?_.emit("unhandledRejection",a,e):(i=c.onunhandledrejection)?i({promise:e,reason:a}):(t=c.console)&&t.error&&t.error("Unhandled promise rejection",a)}),e._h=I||P(e)?2:1),e._a=void 0,o&&n.e)throw n.v})},P=function(e){return 1!==e._h&&0===(e._a||e._c).length},M=function(e){v.call(c,function(){var n;I?_.emit("rejectionHandled",e):(n=c.onrejectionhandled)&&n({promise:e,reason:e._v})})},T=function(e){var n=this;n._d||(n._d=!0,(n=n._w||n)._v=e,n._s=2,n._a||(n._a=n._c.slice()),O(n,!0))},F=function(e){var n,i=this;if(!i._d){i._d=!0,i=i._w||i;try{if(i===e)throw w("Promise can't be resolved itself");(n=K(e))?b(function(){var t={_w:i,_d:!1};try{n.call(e,p(F,t,1),p(T,t,1))}catch(e){T.call(t,e)}}):(i._v=e,i._s=1,O(i,!1))}catch(e){T.call({_w:i,_d:!1},e)}}};C||(j=function(e){m(this,j,"Promise","_h"),d(e),t.call(this);try{e(p(F,this,1),p(T,this,1))}catch(e){T.call(this,e)}},(t=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=i(45)(j.prototype,{then:function(e,n){var i=A(x(this,j));return i.ok="function"!=typeof e||e,i.fail="function"==typeof n&&n,i.domain=I?_.domain:void 0,this._c.push(i),this._a&&this._a.push(i),this._s&&O(this,!1),i.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new t;this.promise=e,this.resolve=p(F,e,1),this.reject=p(T,e,1)},g.f=A=function(e){return e===j||e===r?new o(e):a(e)}),l(l.G+l.W+l.F*!C,{Promise:j}),i(46)(j,"Promise"),i(42)("Promise"),r=i(19).Promise,l(l.S+l.F*!C,"Promise",{reject:function(e){var n=A(this);return(0,n.reject)(e),n.promise}}),l(l.S+l.F*(s||!C),"Promise",{resolve:function(e){return S(s&&this===r?j:this,e)}}),l(l.S+l.F*!(C&&i(60)(function(e){j.all(e).catch(N)})),"Promise",{all:function(e){var n=this,i=A(n),t=i.resolve,a=i.reject,o=k(function(){var i=[],o=0,r=1;h(e,!1,function(e){var s=o++,c=!1;i.push(void 0),r++,n.resolve(e).then(function(e){c||(c=!0,i[s]=e,--r||t(i))},a)}),--r||t(i)});return o.e&&a(o.v),i.promise},race:function(e){var n=this,i=A(n),t=i.reject,a=k(function(){h(e,!1,function(e){n.resolve(e).then(i.resolve,t)})});return a.e&&t(a.v),i.promise}})},function(e,n,i){"use strict";var t=i(132),a=i(49);i(65)("WeakSet",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return t.def(a(this,"WeakSet"),e,!0)}},t,!1,!0)},function(e,n,i){"use strict";var t=i(0),a=i(66),o=i(98),r=i(1),s=i(39),c=i(8),p=i(4),u=i(2).ArrayBuffer,l=i(63),f=o.ArrayBuffer,d=o.DataView,m=a.ABV&&u.isView,h=f.prototype.slice,x=a.VIEW;t(t.G+t.W+t.F*(u!==f),{ArrayBuffer:f}),t(t.S+t.F*!a.CONSTR,"ArrayBuffer",{isView:function(e){return m&&m(e)||p(e)&&x in e}}),t(t.P+t.U+t.F*i(3)(function(){return!new f(2).slice(1,void 0).byteLength}),"ArrayBuffer",{slice:function(e,n){if(void 0!==h&&void 0===n)return h.call(r(this),e);for(var i=r(this).byteLength,t=s(e,i),a=s(void 0===n?i:n,i),o=new(l(this,f))(c(a-t)),p=new d(this),u=new d(o),m=0;t<a;)u.setUint8(m++,p.getUint8(t++));return o}}),i(42)("ArrayBuffer")},function(e,n,i){var t=i(0);t(t.G+t.W+t.F*!i(66).ABV,{DataView:i(98).DataView})},function(e,n,i){i(28)("Int8",1,function(e){return function(n,i,t){return e(this,n,i,t)}})},function(e,n,i){i(28)("Uint8",1,function(e){return function(n,i,t){return e(this,n,i,t)}})},function(e,n,i){i(28)("Uint8",1,function(e){return function(n,i,t){return e(this,n,i,t)}},!0)},function(e,n,i){i(28)("Int16",2,function(e){return function(n,i,t){return e(this,n,i,t)}})},function(e,n,i){i(28)("Uint16",2,function(e){return function(n,i,t){return e(this,n,i,t)}})},function(e,n,i){i(28)("Int32",4,function(e){return function(n,i,t){return e(this,n,i,t)}})},function(e,n,i){i(28)("Uint32",4,function(e){return function(n,i,t){return e(this,n,i,t)}})},function(e,n,i){i(28)("Float32",4,function(e){return function(n,i,t){return e(this,n,i,t)}})},function(e,n,i){i(28)("Float64",8,function(e){return function(n,i,t){return e(this,n,i,t)}})},function(e,n,i){var t=i(0),a=i(10),o=i(1),r=(i(2).Reflect||{}).apply,s=Function.apply;t(t.S+t.F*!i(3)(function(){r(function(){})}),"Reflect",{apply:function(e,n,i){var t=a(e),c=o(i);return r?r(t,n,c):s.call(t,n,c)}})},function(e,n,i){var t=i(0),a=i(40),o=i(10),r=i(1),s=i(4),c=i(3),p=i(113),u=(i(2).Reflect||{}).construct,l=c(function(){function e(){}return!(u(function(){},[],e)instanceof e)}),f=!c(function(){u(function(){})});t(t.S+t.F*(l||f),"Reflect",{construct:function(e,n){o(e),r(n);var i=arguments.length<3?e:o(arguments[2]);if(f&&!l)return u(e,n,i);if(e==i){switch(n.length){case 0:return new e;case 1:return new e(n[0]);case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[1],n[2]);case 4:return new e(n[0],n[1],n[2],n[3])}var t=[null];return t.push.apply(t,n),new(p.apply(e,t))}var c=i.prototype,d=a(s(c)?c:Object.prototype),m=Function.apply.call(e,d,n);return s(m)?m:d}})},function(e,n,i){var t=i(7),a=i(0),o=i(1),r=i(23);a(a.S+a.F*i(3)(function(){Reflect.defineProperty(t.f({},1,{value:1}),1,{value:2})}),"Reflect",{defineProperty:function(e,n,i){o(e),n=r(n,!0),o(i);try{return t.f(e,n,i),!0}catch(e){return!1}}})},function(e,n,i){var t=i(0),a=i(17).f,o=i(1);t(t.S,"Reflect",{deleteProperty:function(e,n){var i=a(o(e),n);return!(i&&!i.configurable)&&delete e[n]}})},function(e,n,i){"use strict";var t=i(0),a=i(1),o=function(e){this._t=a(e),this._i=0;var n,i=this._k=[];for(n in e)i.push(n)};i(86)(o,"Object",function(){var e,n=this._k;do{if(this._i>=n.length)return{value:void 0,done:!0}}while(!((e=n[this._i++])in this._t));return{value:e,done:!1}}),t(t.S,"Reflect",{enumerate:function(e){return new o(e)}})},function(e,n,i){var t=i(17),a=i(18),o=i(15),r=i(0),s=i(4),c=i(1);r(r.S,"Reflect",{get:function e(n,i){var r,p,u=arguments.length<3?n:arguments[2];return c(n)===u?n[i]:(r=t.f(n,i))?o(r,"value")?r.value:void 0!==r.get?r.get.call(u):void 0:s(p=a(n))?e(p,i,u):void 0}})},function(e,n,i){var t=i(17),a=i(0),o=i(1);a(a.S,"Reflect",{getOwnPropertyDescriptor:function(e,n){return t.f(o(e),n)}})},function(e,n,i){var t=i(0),a=i(18),o=i(1);t(t.S,"Reflect",{getPrototypeOf:function(e){return a(o(e))}})},function(e,n,i){var t=i(0);t(t.S,"Reflect",{has:function(e,n){return n in e}})},function(e,n,i){var t=i(0),a=i(1),o=Object.isExtensible;t(t.S,"Reflect",{isExtensible:function(e){return a(e),!o||o(e)}})},function(e,n,i){var t=i(0);t(t.S,"Reflect",{ownKeys:i(134)})},function(e,n,i){var t=i(0),a=i(1),o=Object.preventExtensions;t(t.S,"Reflect",{preventExtensions:function(e){a(e);try{return o&&o(e),!0}catch(e){return!1}}})},function(e,n,i){var t=i(7),a=i(17),o=i(18),r=i(15),s=i(0),c=i(36),p=i(1),u=i(4);s(s.S,"Reflect",{set:function e(n,i,s){var l,f,d=arguments.length<4?n:arguments[3],m=a.f(p(n),i);if(!m){if(u(f=o(n)))return e(f,i,s,d);m=c(0)}if(r(m,"value")){if(!1===m.writable||!u(d))return!1;if(l=a.f(d,i)){if(l.get||l.set||!1===l.writable)return!1;l.value=s,t.f(d,i,l)}else t.f(d,i,c(0,s));return!0}return void 0!==m.set&&(m.set.call(d,s),!0)}})},function(e,n,i){var t=i(0),a=i(78);a&&t(t.S,"Reflect",{setPrototypeOf:function(e,n){a.check(e,n);try{return a.set(e,n),!0}catch(e){return!1}}})},function(e,n,i){"use strict";var t=i(0),a=i(56)(!0);t(t.P,"Array",{includes:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i(35)("includes")},function(e,n,i){"use strict";var t=i(0),a=i(135),o=i(9),r=i(8),s=i(10),c=i(92);t(t.P,"Array",{flatMap:function(e){var n,i,t=o(this);return s(e),n=r(t.length),i=c(t,0),a(i,t,t,n,0,1,e,arguments[1]),i}}),i(35)("flatMap")},function(e,n,i){"use strict";var t=i(0),a=i(135),o=i(9),r=i(8),s=i(25),c=i(92);t(t.P,"Array",{flatten:function(){var e=arguments[0],n=o(this),i=r(n.length),t=c(n,0);return a(t,n,n,i,0,void 0===e?1:s(e)),t}}),i(35)("flatten")},function(e,n,i){"use strict";var t=i(0),a=i(84)(!0);t(t.P,"String",{at:function(e){return a(this,e)}})},function(e,n,i){"use strict";var t=i(0),a=i(136),o=i(64);t(t.P+t.F*/Version\/10\.\d+(\.\d+)? Safari\//.test(o),"String",{padStart:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,n,i){"use strict";var t=i(0),a=i(136),o=i(64);t(t.P+t.F*/Version\/10\.\d+(\.\d+)? Safari\//.test(o),"String",{padEnd:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,n,i){"use strict";i(47)("trimLeft",function(e){return function(){return e(this,1)}},"trimStart")},function(e,n,i){"use strict";i(47)("trimRight",function(e){return function(){return e(this,2)}},"trimEnd")},function(e,n,i){"use strict";var t=i(0),a=i(24),o=i(8),r=i(59),s=i(61),c=RegExp.prototype,p=function(e,n){this._r=e,this._s=n};i(86)(p,"RegExp String",function(){var e=this._r.exec(this._s);return{value:e,done:null===e}}),t(t.P,"String",{matchAll:function(e){if(a(this),!r(e))throw TypeError(e+" is not a regexp!");var n=String(this),i="flags"in c?String(e.flags):s.call(e),t=new RegExp(e.source,~i.indexOf("g")?i:"g"+i);return t.lastIndex=o(e.lastIndex),new p(t,n)}})},function(e,n,i){i(74)("asyncIterator")},function(e,n,i){i(74)("observable")},function(e,n,i){var t=i(0),a=i(134),o=i(16),r=i(17),s=i(90);t(t.S,"Object",{getOwnPropertyDescriptors:function(e){for(var n,i,t=o(e),c=r.f,p=a(t),u={},l=0;p.length>l;)void 0!==(i=c(t,n=p[l++]))&&s(u,n,i);return u}})},function(e,n,i){var t=i(0),a=i(137)(!1);t(t.S,"Object",{values:function(e){return a(e)}})},function(e,n,i){var t=i(0),a=i(137)(!0);t(t.S,"Object",{entries:function(e){return a(e)}})},function(e,n,i){"use strict";var t=i(0),a=i(9),o=i(10),r=i(7);i(6)&&t(t.P+i(67),"Object",{__defineGetter__:function(e,n){r.f(a(this),e,{get:o(n),enumerable:!0,configurable:!0})}})},function(e,n,i){"use strict";var t=i(0),a=i(9),o=i(10),r=i(7);i(6)&&t(t.P+i(67),"Object",{__defineSetter__:function(e,n){r.f(a(this),e,{set:o(n),enumerable:!0,configurable:!0})}})},function(e,n,i){"use strict";var t=i(0),a=i(9),o=i(23),r=i(18),s=i(17).f;i(6)&&t(t.P+i(67),"Object",{__lookupGetter__:function(e){var n,i=a(this),t=o(e,!0);do{if(n=s(i,t))return n.get}while(i=r(i))}})},function(e,n,i){"use strict";var t=i(0),a=i(9),o=i(23),r=i(18),s=i(17).f;i(6)&&t(t.P+i(67),"Object",{__lookupSetter__:function(e){var n,i=a(this),t=o(e,!0);do{if(n=s(i,t))return n.set}while(i=r(i))}})},function(e,n,i){var t=i(0);t(t.P+t.R,"Map",{toJSON:i(138)("Map")})},function(e,n,i){var t=i(0);t(t.P+t.R,"Set",{toJSON:i(138)("Set")})},function(e,n,i){i(68)("Map")},function(e,n,i){i(68)("Set")},function(e,n,i){i(68)("WeakMap")},function(e,n,i){i(68)("WeakSet")},function(e,n,i){i(69)("Map")},function(e,n,i){i(69)("Set")},function(e,n,i){i(69)("WeakMap")},function(e,n,i){i(69)("WeakSet")},function(e,n,i){var t=i(0);t(t.G,{global:i(2)})},function(e,n,i){var t=i(0);t(t.S,"System",{global:i(2)})},function(e,n,i){var t=i(0),a=i(21);t(t.S,"Error",{isError:function(e){return"Error"===a(e)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{clamp:function(e,n,i){return Math.min(i,Math.max(n,e))}})},function(e,n,i){var t=i(0);t(t.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,n,i){var t=i(0),a=180/Math.PI;t(t.S,"Math",{degrees:function(e){return e*a}})},function(e,n,i){var t=i(0),a=i(140),o=i(120);t(t.S,"Math",{fscale:function(e,n,i,t,r){return o(a(e,n,i,t,r))}})},function(e,n,i){var t=i(0);t(t.S,"Math",{iaddh:function(e,n,i,t){var a=e>>>0,o=i>>>0;return(n>>>0)+(t>>>0)+((a&o|(a|o)&~(a+o>>>0))>>>31)|0}})},function(e,n,i){var t=i(0);t(t.S,"Math",{isubh:function(e,n,i,t){var a=e>>>0,o=i>>>0;return(n>>>0)-(t>>>0)-((~a&o|~(a^o)&a-o>>>0)>>>31)|0}})},function(e,n,i){var t=i(0);t(t.S,"Math",{imulh:function(e,n){var i=+e,t=+n,a=65535&i,o=65535&t,r=i>>16,s=t>>16,c=(r*o>>>0)+(a*o>>>16);return r*s+(c>>16)+((a*s>>>0)+(65535&c)>>16)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,n,i){var t=i(0),a=Math.PI/180;t(t.S,"Math",{radians:function(e){return e*a}})},function(e,n,i){var t=i(0);t(t.S,"Math",{scale:i(140)})},function(e,n,i){var t=i(0);t(t.S,"Math",{umulh:function(e,n){var i=+e,t=+n,a=65535&i,o=65535&t,r=i>>>16,s=t>>>16,c=(r*o>>>0)+(a*o>>>16);return r*s+(c>>>16)+((a*s>>>0)+(65535&c)>>>16)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,n,i){"use strict";var t=i(0),a=i(19),o=i(2),r=i(63),s=i(127);t(t.P+t.R,"Promise",{finally:function(e){var n=r(this,a.Promise||o.Promise),i="function"==typeof e;return this.then(i?function(i){return s(n,e()).then(function(){return i})}:e,i?function(i){return s(n,e()).then(function(){throw i})}:e)}})},function(e,n,i){"use strict";var t=i(0),a=i(97),o=i(126);t(t.S,"Promise",{try:function(e){var n=a.f(this),i=o(e);return(i.e?n.reject:n.resolve)(i.v),n.promise}})},function(e,n,i){var t=i(29),a=i(1),o=t.key,r=t.set;t.exp({defineMetadata:function(e,n,i,t){r(e,n,a(i),o(t))}})},function(e,n,i){var t=i(29),a=i(1),o=t.key,r=t.map,s=t.store;t.exp({deleteMetadata:function(e,n){var i=arguments.length<3?void 0:o(arguments[2]),t=r(a(n),i,!1);if(void 0===t||!t.delete(e))return!1;if(t.size)return!0;var c=s.get(n);return c.delete(i),!!c.size||s.delete(n)}})},function(e,n,i){var t=i(29),a=i(1),o=i(18),r=t.has,s=t.get,c=t.key,p=function(e,n,i){if(r(e,n,i))return s(e,n,i);var t=o(n);return null!==t?p(e,t,i):void 0};t.exp({getMetadata:function(e,n){return p(e,a(n),arguments.length<3?void 0:c(arguments[2]))}})},function(e,n,i){var t=i(130),a=i(139),o=i(29),r=i(1),s=i(18),c=o.keys,p=o.key,u=function(e,n){var i=c(e,n),o=s(e);if(null===o)return i;var r=u(o,n);return r.length?i.length?a(new t(i.concat(r))):r:i};o.exp({getMetadataKeys:function(e){return u(r(e),arguments.length<2?void 0:p(arguments[1]))}})},function(e,n,i){var t=i(29),a=i(1),o=t.get,r=t.key;t.exp({getOwnMetadata:function(e,n){return o(e,a(n),arguments.length<3?void 0:r(arguments[2]))}})},function(e,n,i){var t=i(29),a=i(1),o=t.keys,r=t.key;t.exp({getOwnMetadataKeys:function(e){return o(a(e),arguments.length<2?void 0:r(arguments[1]))}})},function(e,n,i){var t=i(29),a=i(1),o=i(18),r=t.has,s=t.key,c=function(e,n,i){if(r(e,n,i))return!0;var t=o(n);return null!==t&&c(e,t,i)};t.exp({hasMetadata:function(e,n){return c(e,a(n),arguments.length<3?void 0:s(arguments[2]))}})},function(e,n,i){var t=i(29),a=i(1),o=t.has,r=t.key;t.exp({hasOwnMetadata:function(e,n){return o(e,a(n),arguments.length<3?void 0:r(arguments[2]))}})},function(e,n,i){var t=i(29),a=i(1),o=i(10),r=t.key,s=t.set;t.exp({metadata:function(e,n){return function(i,t){s(e,n,(void 0!==t?a:o)(i),r(t))}}})},function(e,n,i){var t=i(0),a=i(96)(),o=i(2).process,r="process"==i(21)(o);t(t.G,{asap:function(e){var n=r&&o.domain;a(n?n.bind(e):e)}})},function(e,n,i){"use strict";var t=i(0),a=i(2),o=i(19),r=i(96)(),s=i(5)("observable"),c=i(10),p=i(1),u=i(43),l=i(45),f=i(11),d=i(44),m=d.RETURN,h=function(e){return null==e?void 0:c(e)},x=function(e){var n=e._c;n&&(e._c=void 0,n())},v=function(e){return void 0===e._o},b=function(e){v(e)||(e._o=void 0,x(e))},g=function(e,n){p(e),this._c=void 0,this._o=e,e=new k(this);try{var i=n(e),t=i;null!=i&&("function"==typeof i.unsubscribe?i=function(){t.unsubscribe()}:c(i),this._c=i)}catch(n){return void e.error(n)}v(this)&&x(this)};g.prototype=l({},{unsubscribe:function(){b(this)}});var k=function(e){this._s=e};k.prototype=l({},{next:function(e){var n=this._s;if(!v(n)){var i=n._o;try{var t=h(i.next);if(t)return t.call(i,e)}catch(e){try{b(n)}finally{throw e}}}},error:function(e){var n=this._s;if(v(n))throw e;var i=n._o;n._o=void 0;try{var t=h(i.error);if(!t)throw e;e=t.call(i,e)}catch(e){try{x(n)}finally{throw e}}return x(n),e},complete:function(e){var n=this._s;if(!v(n)){var i=n._o;n._o=void 0;try{var t=h(i.complete);e=t?t.call(i,e):void 0}catch(e){try{x(n)}finally{throw e}}return x(n),e}}});var y=function(e){u(this,y,"Observable","_f")._f=c(e)};l(y.prototype,{subscribe:function(e){return new g(e,this._f)},forEach:function(e){var n=this;return new(o.Promise||a.Promise)(function(i,t){c(e);var a=n.subscribe({next:function(n){try{return e(n)}catch(e){t(e),a.unsubscribe()}},error:t,complete:i})})}}),l(y,{from:function(e){var n="function"==typeof this?this:y,i=h(p(e)[s]);if(i){var t=p(i.call(e));return t.constructor===n?t:new n(function(e){return t.subscribe(e)})}return new n(function(n){var i=!1;return r(function(){if(!i){try{if(d(e,!1,function(e){if(n.next(e),i)return m})===m)return}catch(e){if(i)throw e;return void n.error(e)}n.complete()}}),function(){i=!0}})},of:function(){for(var e=0,n=arguments.length,i=new Array(n);e<n;)i[e]=arguments[e++];return new("function"==typeof this?this:y)(function(e){var n=!1;return r(function(){if(!n){for(var t=0;t<i.length;++t)if(e.next(i[t]),n)return;e.complete()}}),function(){n=!0}})}}),f(y.prototype,s,function(){return this}),t(t.G,{Observable:y}),i(42)("Observable")},function(e,n,i){var t=i(2),a=i(0),o=i(64),r=[].slice,s=/MSIE .\./.test(o),c=function(e){return function(n,i){var t=arguments.length>2,a=!!t&&r.call(arguments,2);return e(t?function(){("function"==typeof n?n:Function(n)).apply(this,a)}:n,i)}};a(a.G+a.B+a.F*s,{setTimeout:c(t.setTimeout),setInterval:c(t.setInterval)})},function(e,n,i){var t=i(0),a=i(95);t(t.G+t.B,{setImmediate:a.set,clearImmediate:a.clear})},function(e,n,i){for(var t=i(94),a=i(38),o=i(12),r=i(2),s=i(11),c=i(48),p=i(5),u=p("iterator"),l=p("toStringTag"),f=c.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},m=a(d),h=0;h<m.length;h++){var x,v=m[h],b=d[v],g=r[v],k=g&&g.prototype;if(k&&(k[u]||s(k,u,f),k[l]||s(k,l,v),c[v]=f,b))for(x in t)k[x]||o(k,x,t[x],!0)}},function(e,n){!function(n){"use strict";var i,t=Object.prototype,a=t.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},r=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag",p="object"==typeof e,u=n.regeneratorRuntime;if(u)p&&(e.exports=u);else{(u=n.regeneratorRuntime=p?e.exports:{}).wrap=k;var l="suspendedStart",f="suspendedYield",d="executing",m="completed",h={},x={};x[r]=function(){return this};var v=Object.getPrototypeOf,b=v&&v(v(C([])));b&&b!==t&&a.call(b,r)&&(x=b);var g=_.prototype=S.prototype=Object.create(x);w.prototype=g.constructor=_,_.constructor=w,_[c]=w.displayName="GeneratorFunction",u.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===w||"GeneratorFunction"===(n.displayName||n.name))},u.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,_):(e.__proto__=_,c in e||(e[c]="GeneratorFunction")),e.prototype=Object.create(g),e},u.awrap=function(e){return{__await:e}},E(B.prototype),B.prototype[s]=function(){return this},u.AsyncIterator=B,u.async=function(e,n,i,t){var a=new B(k(e,n,i,t));return u.isGeneratorFunction(n)?a:a.next().then(function(e){return e.done?e.value:a.next()})},E(g),g[c]="Generator",g[r]=function(){return this},g.toString=function(){return"[object Generator]"},u.keys=function(e){var n=[];for(var i in e)n.push(i);return n.reverse(),function i(){for(;n.length;){var t=n.pop();if(t in e)return i.value=t,i.done=!1,i}return i.done=!0,i}},u.values=C,A.prototype={constructor:A,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=i,this.done=!1,this.delegate=null,this.method="next",this.arg=i,this.tryEntries.forEach(N),!e)for(var n in this)"t"===n.charAt(0)&&a.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=i)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function t(t,a){return s.type="throw",s.arg=e,n.next=t,a&&(n.method="next",n.arg=i),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var r=this.tryEntries[o],s=r.completion;if("root"===r.tryLoc)return t("end");if(r.tryLoc<=this.prev){var c=a.call(r,"catchLoc"),p=a.call(r,"finallyLoc");if(c&&p){if(this.prev<r.catchLoc)return t(r.catchLoc,!0);if(this.prev<r.finallyLoc)return t(r.finallyLoc)}else if(c){if(this.prev<r.catchLoc)return t(r.catchLoc,!0)}else{if(!p)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return t(r.finallyLoc)}}}},abrupt:function(e,n){for(var i=this.tryEntries.length-1;i>=0;--i){var t=this.tryEntries[i];if(t.tryLoc<=this.prev&&a.call(t,"finallyLoc")&&this.prev<t.finallyLoc){var o=t;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var r=o?o.completion:{};return r.type=e,r.arg=n,o?(this.method="next",this.next=o.finallyLoc,h):this.complete(r)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),h},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.finallyLoc===e)return this.complete(i.completion,i.afterLoc),N(i),h}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc===e){var t=i.completion;if("throw"===t.type){var a=t.arg;N(i)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:C(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=i),h}}}function k(e,n,i,t){var a=n&&n.prototype instanceof S?n:S,o=Object.create(a.prototype),r=new A(t||[]);return o._invoke=function(e,n,i){var t=l;return function(a,o){if(t===d)throw new Error("Generator is already running");if(t===m){if("throw"===a)throw o;return K()}for(i.method=a,i.arg=o;;){var r=i.delegate;if(r){var s=j(r,i);if(s){if(s===h)continue;return s}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(t===l)throw t=m,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);t=d;var c=y(e,n,i);if("normal"===c.type){if(t=i.done?m:f,c.arg===h)continue;return{value:c.arg,done:i.done}}"throw"===c.type&&(t=m,i.method="throw",i.arg=c.arg)}}}(e,i,r),o}function y(e,n,i){try{return{type:"normal",arg:e.call(n,i)}}catch(e){return{type:"throw",arg:e}}}function S(){}function w(){}function _(){}function E(e){["next","throw","return"].forEach(function(n){e[n]=function(e){return this._invoke(n,e)}})}function B(e){var n;this._invoke=function(i,t){function o(){return new Promise(function(n,o){!function n(i,t,o,r){var s=y(e[i],e,t);if("throw"!==s.type){var c=s.arg,p=c.value;return p&&"object"==typeof p&&a.call(p,"__await")?Promise.resolve(p.__await).then(function(e){n("next",e,o,r)},function(e){n("throw",e,o,r)}):Promise.resolve(p).then(function(e){c.value=e,o(c)},r)}r(s.arg)}(i,t,n,o)})}return n=n?n.then(o,o):o()}}function j(e,n){var t=e.iterator[n.method];if(t===i){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=i,j(e,n),"throw"===n.method))return h;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var a=y(t,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,h;var o=a.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=i),n.delegate=null,h):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,h)}function I(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function N(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function A(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(I,this),this.reset(!0)}function C(e){if(e){var n=e[r];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var t=-1,o=function n(){for(;++t<e.length;)if(a.call(e,t))return n.value=e[t],n.done=!1,n;return n.value=i,n.done=!0,n};return o.next=o}}return{next:K}}function K(){return{value:i,done:!0}}}(function(){return this}()||Function("return this")())},function(e,n,i){i(364),e.exports=i(19).RegExp.escape},function(e,n,i){var t=i(0),a=i(365)(/[\\^$*+?.()|[\]{}]/g,"\\$&");t(t.S,"RegExp",{escape:function(e){return a(e)}})},function(e,n){e.exports=function(e,n){var i=n===Object(n)?function(e){return n[e]}:n;return function(n){return String(n).replace(e,i)}}},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){var i={};return i.addHashToPinQueue=function(i,a){return(0,t.default)(e,n,i,a)},i.pinFileToIPFS=function(i,t){return(0,a.default)(e,n,i,t)},i.pinJSONToIPFS=function(i,t){return(0,o.default)(e,n,i,t)},i.pinHashToIPFS=function(i,t){return(0,r.default)(e,n,i,t)},i.pinJobs=function(i){return(0,s.default)(e,n,i)},i.removePinFromIPFS=function(i){return(0,c.default)(e,n,i)},i.testAuthentication=function(){return(0,p.default)(e,n)},i.userPinList=function(i){return(0,u.default)(e,n,i)},i.userPinnedDataTotal=function(){return(0,l.default)(e,n)},i};var t=f(i(367)),a=f(i(418)),o=f(i(432)),r=f(i(433)),s=f(i(434)),c=f(i(436)),p=f(i(437)),u=f(i(438)),l=f(i(440));function f(e){return e&&e.__esModule?e:{default:e}}e.exports=n.default},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,i,s){if((0,o.validateApiKeys)(e,n),!i)throw new Error("hashToPin value is required for adding a hash to the pin queue");if(!r.default.cid(i))throw new Error("hashToPin value is an invalid IPFS CID");var c="".concat(a.baseUrl,"/pinning/addHashToPinQueue"),p={hashToPin:i};s&&(s.host_nodes&&((0,o.validateHostNodes)(s.host_nodes),p.host_nodes=s.host_nodes),s.pinataMetadata&&((0,o.validateMetadata)(s.pinataMetadata),p.pinataMetadata=s.pinataMetadata));return new Promise(function(i,a){t.default.post(c,p,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&a(new Error("unknown server response while adding to pin queue: ".concat(e))),i(e.data)}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?a(new Error(e.response.data.error)):a(e)})})};var t=s(i(30)),a=i(31),o=i(32),r=s(i(54));function s(e){return e&&e.__esModule?e:{default:e}}e.exports=n.default},function(e,n,i){"use strict";var t=i(14),a=i(141),o=i(370),r=i(99);function s(e){var n=new o(e),i=a(o.prototype.request,n);return t.extend(i,o.prototype,n),t.extend(i,n),i}var c=s(r);c.Axios=o,c.create=function(e){return s(t.merge(r,e))},c.Cancel=i(149),c.CancelToken=i(393),c.isCancel=i(148),c.all=function(e){return Promise.all(e)},c.spread=i(394),e.exports=c,e.exports.default=c},function(e,n){function i(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(i(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&i(e.slice(0,0))}(e)||!!e._isBuffer)}},function(e,n,i){"use strict";var t=i(99),a=i(14),o=i(388),r=i(389);function s(e){this.defaults=e,this.interceptors={request:new o,response:new o}}s.prototype.request=function(e){"string"==typeof e&&(e=a.merge({url:arguments[0]},arguments[1])),(e=a.merge(t,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var n=[r,void 0],i=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){n.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){n.push(e.fulfilled,e.rejected)});n.length;)i=i.then(n.shift(),n.shift());return i},a.forEach(["delete","get","head","options"],function(e){s.prototype[e]=function(n,i){return this.request(a.merge(i||{},{method:e,url:n}))}}),a.forEach(["post","put","patch"],function(e){s.prototype[e]=function(n,i,t){return this.request(a.merge(t||{},{method:e,url:n,data:i}))}}),e.exports=s},function(e,n,i){"use strict";var t=i(14);e.exports=function(e,n){t.forEach(e,function(i,t){t!==n&&t.toUpperCase()===n.toUpperCase()&&(e[n]=i,delete e[t])})}},function(e,n,i){"use strict";var t=i(14),a=i(142),o=i(144),r=i(373),s=i(374),c=i(100),p="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||i(375);e.exports=function(e){return new Promise(function(n,u){var l=e.data,f=e.headers;t.isFormData(l)&&delete f["Content-Type"];var d=new XMLHttpRequest,m="onreadystatechange",h=!1;if("undefined"==typeof window||!window.XDomainRequest||"withCredentials"in d||s(e.url)||(d=new window.XDomainRequest,m="onload",h=!0,d.onprogress=function(){},d.ontimeout=function(){}),e.auth){var x=e.auth.username||"",v=e.auth.password||"";f.Authorization="Basic "+p(x+":"+v)}if(d.open(e.method.toUpperCase(),o(e.url,e.params,e.paramsSerializer),!0),d.timeout=e.timeout,d[m]=function(){if(d&&(4===d.readyState||h)&&(0!==d.status||d.responseURL&&0===d.responseURL.indexOf("file:"))){var i="getAllResponseHeaders"in d?r(d.getAllResponseHeaders()):null,t={data:e.responseType&&"text"!==e.responseType?d.response:d.responseText,status:1223===d.status?204:d.status,statusText:1223===d.status?"No Content":d.statusText,headers:i,config:e,request:d};a(n,u,t),d=null}},d.onerror=function(){u(c("Network Error",e,null,d)),d=null},d.ontimeout=function(){u(c("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",d)),d=null},t.isStandardBrowserEnv()){var b=i(376),g=(e.withCredentials||s(e.url))&&e.xsrfCookieName?b.read(e.xsrfCookieName):void 0;g&&(f[e.xsrfHeaderName]=g)}if("setRequestHeader"in d&&t.forEach(f,function(e,n){void 0===l&&"content-type"===n.toLowerCase()?delete f[n]:d.setRequestHeader(n,e)}),e.withCredentials&&(d.withCredentials=!0),e.responseType)try{d.responseType=e.responseType}catch(n){if("json"!==e.responseType)throw n}"function"==typeof e.onDownloadProgress&&d.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&d.upload&&d.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){d&&(d.abort(),u(e),d=null)}),void 0===l&&(l=null),d.send(l)})}},function(e,n,i){"use strict";var t=i(14),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,i,o,r={};return e?(t.forEach(e.split("\n"),function(e){if(o=e.indexOf(":"),n=t.trim(e.substr(0,o)).toLowerCase(),i=t.trim(e.substr(o+1)),n){if(r[n]&&a.indexOf(n)>=0)return;r[n]="set-cookie"===n?(r[n]?r[n]:[]).concat([i]):r[n]?r[n]+", "+i:i}}),r):r}},function(e,n,i){"use strict";var t=i(14);e.exports=t.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement("a");function a(e){var t=e;return n&&(i.setAttribute("href",t),t=i.href),i.setAttribute("href",t),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,""):"",host:i.host,search:i.search?i.search.replace(/^\?/,""):"",hash:i.hash?i.hash.replace(/^#/,""):"",hostname:i.hostname,port:i.port,pathname:"/"===i.pathname.charAt(0)?i.pathname:"/"+i.pathname}}return e=a(window.location.href),function(n){var i=t.isString(n)?a(n):n;return i.protocol===e.protocol&&i.host===e.host}}():function(){return!0}},function(e,n,i){"use strict";var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function a(){this.message="String contains an invalid character"}a.prototype=new Error,a.prototype.code=5,a.prototype.name="InvalidCharacterError",e.exports=function(e){for(var n,i,o=String(e),r="",s=0,c=t;o.charAt(0|s)||(c="=",s%1);r+=c.charAt(63&n>>8-s%1*8)){if((i=o.charCodeAt(s+=.75))>255)throw new a;n=n<<8|i}return r}},function(e,n,i){"use strict";var t=i(14);e.exports=t.isStandardBrowserEnv()?{write:function(e,n,i,a,o,r){var s=[];s.push(e+"="+encodeURIComponent(n)),t.isNumber(i)&&s.push("expires="+new Date(i).toGMTString()),t.isString(a)&&s.push("path="+a),t.isString(o)&&s.push("domain="+o),!0===r&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,n,i){"use strict";var t=i(14),a=i(142),o=i(144),r=i(101),s=i(102),c=i(145).http,p=i(145).https,u=i(103),l=i(386),f=i(387),d=i(100),m=i(143);e.exports=function(e){return new Promise(function(n,i){var h,x=e.data,v=e.headers;if(v["User-Agent"]||v["user-agent"]||(v["User-Agent"]="axios/"+f.version),x&&!t.isStream(x)){if(Buffer.isBuffer(x));else if(t.isArrayBuffer(x))x=new Buffer(new Uint8Array(x));else{if(!t.isString(x))return i(d("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",e));x=new Buffer(x,"utf-8")}v["Content-Length"]=x.length}var b=void 0;e.auth&&(b=(e.auth.username||"")+":"+(e.auth.password||""));var g=u.parse(e.url),k=g.protocol||"http:";if(!b&&g.auth){var y=g.auth.split(":");b=(y[0]||"")+":"+(y[1]||"")}b&&delete v.Authorization;var S="https:"===k,w=S?e.httpsAgent:e.httpAgent,_={path:o(g.path,e.params,e.paramsSerializer).replace(/^\?/,""),method:e.method,headers:v,agent:w,auth:b};e.socketPath?_.socketPath=e.socketPath:(_.hostname=g.hostname,_.port=g.port);var E,B=e.proxy;if(!B&&!1!==B){var j=k.slice(0,-1)+"_proxy",I=process.env[j]||process.env[j.toUpperCase()];if(I){var N=u.parse(I);if(B={host:N.hostname,port:N.port},N.auth){var A=N.auth.split(":");B.auth={username:A[0],password:A[1]}}}}if(B&&(_.hostname=B.host,_.host=B.host,_.headers.host=g.hostname+(g.port?":"+g.port:""),_.port=B.port,_.path=k+"//"+g.hostname+(g.port?":"+g.port:"")+_.path,B.auth)){var C=new Buffer(B.auth.username+":"+B.auth.password,"utf8").toString("base64");_.headers["Proxy-Authorization"]="Basic "+C}e.transport?E=e.transport:0===e.maxRedirects?E=S?s:r:(e.maxRedirects&&(_.maxRedirects=e.maxRedirects),E=S?p:c),e.maxContentLength&&e.maxContentLength>-1&&(_.maxBodyLength=e.maxContentLength);var K=E.request(_,function(t){if(!K.aborted){clearTimeout(h),h=null;var o=t;switch(t.headers["content-encoding"]){case"gzip":case"compress":case"deflate":o=o.pipe(l.createUnzip()),delete t.headers["content-encoding"]}var r=t.req||K,s={status:t.statusCode,statusText:t.statusMessage,headers:t.headers,config:e,request:r};if("stream"===e.responseType)s.data=o,a(n,i,s);else{var c=[];o.on("data",function(n){c.push(n),e.maxContentLength>-1&&Buffer.concat(c).length>e.maxContentLength&&i(d("maxContentLength size of "+e.maxContentLength+" exceeded",e,null,r))}),o.on("error",function(n){K.aborted||i(m(n,e,null,r))}),o.on("end",function(){var t=Buffer.concat(c);"arraybuffer"!==e.responseType&&(t=t.toString("utf8")),s.data=t,a(n,i,s)})}}});K.on("error",function(n){K.aborted||i(m(n,e,null,K))}),e.timeout&&!h&&(h=setTimeout(function(){K.abort(),i(d("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",K))},e.timeout)),e.cancelToken&&e.cancelToken.promise.then(function(e){K.aborted||(K.abort(),i(e))}),t.isStream(x)?x.pipe(K):K.end(x)})}},function(e,n){e.exports=require("assert")},function(e,n,i){"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?e.exports=i(380):e.exports=i(382)},function(e,n,i){n.log=function(...e){return"object"==typeof console&&console.log&&console.log(...e)},n.formatArgs=function(n){if(n[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+n[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const i="color: "+this.color;n.splice(1,0,i,"color: inherit");let t=0,a=0;n[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(t++,"%c"===e&&(a=t))}),n.splice(a,0,i)},n.save=function(e){try{e?n.storage.setItem("debug",e):n.storage.removeItem("debug")}catch(e){}},n.load=function(){let e;try{e=n.storage.getItem("debug")}catch(e){}!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG);return e},n.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},n.storage=function(){try{return localStorage}catch(e){}}(),n.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=i(146)(n);const{formatters:t}=e.exports;t.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},function(e,n){var i=1e3,t=60*i,a=60*t,o=24*a,r=7*o,s=365.25*o;function c(e,n,i,t){var a=n>=1.5*i;return Math.round(e/i)+" "+t+(a?"s":"")}e.exports=function(e,n){n=n||{};var p=typeof e;if("string"===p&&e.length>0)return function(e){if((e=String(e)).length>100)return;var n=/^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!n)return;var c=parseFloat(n[1]);switch((n[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return c*s;case"weeks":case"week":case"w":return c*r;case"days":case"day":case"d":return c*o;case"hours":case"hour":case"hrs":case"hr":case"h":return c*a;case"minutes":case"minute":case"mins":case"min":case"m":return c*t;case"seconds":case"second":case"secs":case"sec":case"s":return c*i;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return c;default:return}}(e);if("number"===p&&!1===isNaN(e))return n.long?function(e){var n=Math.abs(e);if(n>=o)return c(e,n,o,"day");if(n>=a)return c(e,n,a,"hour");if(n>=t)return c(e,n,t,"minute");if(n>=i)return c(e,n,i,"second");return e+" ms"}(e):function(e){var n=Math.abs(e);if(n>=o)return Math.round(e/o)+"d";if(n>=a)return Math.round(e/a)+"h";if(n>=t)return Math.round(e/t)+"m";if(n>=i)return Math.round(e/i)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,n,i){const t=i(383),a=i(71);n.init=function(e){e.inspectOpts={};const i=Object.keys(n.inspectOpts);for(let t=0;t<i.length;t++)e.inspectOpts[i[t]]=n.inspectOpts[i[t]]},n.log=function(...e){return process.stderr.write(a.format(...e)+"\n")},n.formatArgs=function(i){const{namespace:t,useColors:a}=this;if(a){const n=this.color,a="[3"+(n<8?n:"8;5;"+n),o=`  ${a};1m${t} [0m`;i[0]=o+i[0].split("\n").join("\n"+o),i.push(a+"m+"+e.exports.humanize(this.diff)+"[0m")}else i[0]=function(){if(n.inspectOpts.hideDate)return"";return(new Date).toISOString()+" "}()+t+" "+i[0]},n.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},n.load=function(){return process.env.DEBUG},n.useColors=function(){return"colors"in n.inspectOpts?Boolean(n.inspectOpts.colors):t.isatty(process.stderr.fd)},n.colors=[6,2,3,4,5,1];try{const e=i(384);e&&(e.stderr||e).level>=2&&(n.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}n.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,n)=>{const i=n.substring(6).toLowerCase().replace(/_([a-z])/g,(e,n)=>n.toUpperCase());let t=process.env[n];return t=!!/^(yes|on|true|enabled)$/i.test(t)||!/^(no|off|false|disabled)$/i.test(t)&&("null"===t?null:Number(t)),e[i]=t,e},{}),e.exports=i(146)(n);const{formatters:o}=e.exports;o.o=function(e){return this.inspectOpts.colors=this.useColors,a.inspect(e,this.inspectOpts).replace(/\s*\n\s*/g," ")},o.O=function(e){return this.inspectOpts.colors=this.useColors,a.inspect(e,this.inspectOpts)}},function(e,n){e.exports=require("tty")},function(e,n,i){"use strict";const t=i(147),a=i(385),o=process.env;let r;function s(e){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(function(e){if(!1===r)return 0;if(a("color=16m")||a("color=full")||a("color=truecolor"))return 3;if(a("color=256"))return 2;if(e&&!e.isTTY&&!0!==r)return 0;const n=r?1:0;if("win32"===process.platform){const e=t.release().split(".");return Number(process.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in o)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(e=>e in o)||"codeship"===o.CI_NAME?1:n;if("TEAMCITY_VERSION"in o)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(o.TEAMCITY_VERSION)?1:0;if("truecolor"===o.COLORTERM)return 3;if("TERM_PROGRAM"in o){const e=parseInt((o.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(o.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(o.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(o.TERM)?1:"COLORTERM"in o?1:(o.TERM,n)}(e))}a("no-color")||a("no-colors")||a("color=false")?r=!1:(a("color")||a("colors")||a("color=true")||a("color=always"))&&(r=!0),"FORCE_COLOR"in o&&(r=0===o.FORCE_COLOR.length||0!==parseInt(o.FORCE_COLOR,10)),e.exports={supportsColor:s,stdout:s(process.stdout),stderr:s(process.stderr)}},function(e,n,i){"use strict";e.exports=((e,n)=>{n=n||process.argv;const i=e.startsWith("-")?"":1===e.length?"-":"--",t=n.indexOf(i+e),a=n.indexOf("--");return-1!==t&&(-1===a||t<a)})},function(e,n){e.exports=require("zlib")},function(e){e.exports={_args:[["axios@0.18.0","/Users/mattober/Repos/ipfs/pinata/open-source-tools/Pinata-SDK"]],_from:"axios@0.18.0",_id:"axios@0.18.0",_inBundle:!1,_integrity:"sha1-MtU+SFHv3AoRmTts0AB4nXDAUQI=",_location:"/axios",_phantomChildren:{},_requested:{type:"version",registry:!0,raw:"axios@0.18.0",name:"axios",escapedName:"axios",rawSpec:"0.18.0",saveSpec:null,fetchSpec:"0.18.0"},_requiredBy:["/"],_resolved:"https://registry.npmjs.org/axios/-/axios-0.18.0.tgz",_spec:"0.18.0",_where:"/Users/mattober/Repos/ipfs/pinata/open-source-tools/Pinata-SDK",author:{name:"Matt Zabriskie"},browser:{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},bugs:{url:"https://github.com/axios/axios/issues"},bundlesize:[{path:"./dist/axios.min.js",threshold:"5kB"}],dependencies:{"follow-redirects":"^1.3.0","is-buffer":"^1.1.5"},description:"Promise based HTTP client for the browser and node.js",devDependencies:{bundlesize:"^0.5.7",coveralls:"^2.11.9","es6-promise":"^4.0.5",grunt:"^1.0.1","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.0.0","grunt-contrib-nodeunit":"^1.0.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^19.0.0","grunt-karma":"^2.0.0","grunt-ts":"^6.0.0-beta.3","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1",karma:"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-coverage":"^1.0.0","karma-firefox-launcher":"^1.0.0","karma-jasmine":"^1.0.2","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.1.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2",minimist:"^1.2.0",sinon:"^1.17.4",typescript:"^2.0.3","url-search-params":"^0.6.1",webpack:"^1.13.1","webpack-dev-server":"^1.14.1"},homepage:"https://github.com/axios/axios",keywords:["xhr","http","ajax","promise","node"],license:"MIT",main:"index.js",name:"axios",repository:{type:"git",url:"git+https://github.com/axios/axios.git"},scripts:{build:"NODE_ENV=production grunt build",coveralls:"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",examples:"node ./examples/server.js",postversion:"git push && git push --tags",preversion:"npm test",start:"node ./sandbox/server.js",test:"grunt test && bundlesize",version:"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},typings:"./index.d.ts",version:"0.18.0"}},function(e,n,i){"use strict";var t=i(14);function a(){this.handlers=[]}a.prototype.use=function(e,n){return this.handlers.push({fulfilled:e,rejected:n}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){t.forEach(this.handlers,function(n){null!==n&&e(n)})},e.exports=a},function(e,n,i){"use strict";var t=i(14),a=i(390),o=i(148),r=i(99),s=i(391),c=i(392);function p(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return p(e),e.baseURL&&!s(e.url)&&(e.url=c(e.baseURL,e.url)),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=t.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),t.forEach(["delete","get","head","post","put","patch","common"],function(n){delete e.headers[n]}),(e.adapter||r.adapter)(e).then(function(n){return p(e),n.data=a(n.data,n.headers,e.transformResponse),n},function(n){return o(n)||(p(e),n&&n.response&&(n.response.data=a(n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)})}},function(e,n,i){"use strict";var t=i(14);e.exports=function(e,n,i){return t.forEach(i,function(i){e=i(e,n)}),e}},function(e,n,i){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,n,i){"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},function(e,n,i){"use strict";var t=i(149);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var n;this.promise=new Promise(function(e){n=e});var i=this;e(function(e){i.reason||(i.reason=new t(e),n(i.reason))})}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a(function(n){e=n}),cancel:e}},e.exports=a},function(e,n,i){"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},function(e,n,i){var t=i(151),a=t.Buffer;function o(e,n){for(var i in e)n[i]=e[i]}function r(e,n,i){return a(e,n,i)}a.from&&a.alloc&&a.allocUnsafe&&a.allocUnsafeSlow?e.exports=t:(o(t,n),n.Buffer=r),o(a,r),r.from=function(e,n,i){if("number"==typeof e)throw new TypeError("Argument must not be a number");return a(e,n,i)},r.alloc=function(e,n,i){if("number"!=typeof e)throw new TypeError("Argument must be a number");var t=a(e);return void 0!==n?"string"==typeof i?t.fill(n,i):t.fill(n):t.fill(0),t},r.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a(e)},r.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return t.SlowBuffer(e)}},function(e,n,i){"use strict";n.names=Object.freeze({id:0,sha1:17,"sha2-256":18,"sha2-512":19,"dbl-sha2-256":86,"sha3-224":23,"sha3-256":22,"sha3-384":21,"sha3-512":20,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"murmur3-128":34,"murmur3-32":35,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"Skein256-8":45825,"Skein256-16":45826,"Skein256-24":45827,"Skein256-32":45828,"Skein256-40":45829,"Skein256-48":45830,"Skein256-56":45831,"Skein256-64":45832,"Skein256-72":45833,"Skein256-80":45834,"Skein256-88":45835,"Skein256-96":45836,"Skein256-104":45837,"Skein256-112":45838,"Skein256-120":45839,"Skein256-128":45840,"Skein256-136":45841,"Skein256-144":45842,"Skein256-152":45843,"Skein256-160":45844,"Skein256-168":45845,"Skein256-176":45846,"Skein256-184":45847,"Skein256-192":45848,"Skein256-200":45849,"Skein256-208":45850,"Skein256-216":45851,"Skein256-224":45852,"Skein256-232":45853,"Skein256-240":45854,"Skein256-248":45855,"Skein256-256":45856,"Skein512-8":45857,"Skein512-16":45858,"Skein512-24":45859,"Skein512-32":45860,"Skein512-40":45861,"Skein512-48":45862,"Skein512-56":45863,"Skein512-64":45864,"Skein512-72":45865,"Skein512-80":45866,"Skein512-88":45867,"Skein512-96":45868,"Skein512-104":45869,"Skein512-112":45870,"Skein512-120":45871,"Skein512-128":45872,"Skein512-136":45873,"Skein512-144":45874,"Skein512-152":45875,"Skein512-160":45876,"Skein512-168":45877,"Skein512-176":45878,"Skein512-184":45879,"Skein512-192":45880,"Skein512-200":45881,"Skein512-208":45882,"Skein512-216":45883,"Skein512-224":45884,"Skein512-232":45885,"Skein512-240":45886,"Skein512-248":45887,"Skein512-256":45888,"Skein512-264":45889,"Skein512-272":45890,"Skein512-280":45891,"Skein512-288":45892,"Skein512-296":45893,"Skein512-304":45894,"Skein512-312":45895,"Skein512-320":45896,"Skein512-328":45897,"Skein512-336":45898,"Skein512-344":45899,"Skein512-352":45900,"Skein512-360":45901,"Skein512-368":45902,"Skein512-376":45903,"Skein512-384":45904,"Skein512-392":45905,"Skein512-400":45906,"Skein512-408":45907,"Skein512-416":45908,"Skein512-424":45909,"Skein512-432":45910,"Skein512-440":45911,"Skein512-448":45912,"Skein512-456":45913,"Skein512-464":45914,"Skein512-472":45915,"Skein512-480":45916,"Skein512-488":45917,"Skein512-496":45918,"Skein512-504":45919,"Skein512-512":45920,"Skein1024-8":45921,"Skein1024-16":45922,"Skein1024-24":45923,"Skein1024-32":45924,"Skein1024-40":45925,"Skein1024-48":45926,"Skein1024-56":45927,"Skein1024-64":45928,"Skein1024-72":45929,"Skein1024-80":45930,"Skein1024-88":45931,"Skein1024-96":45932,"Skein1024-104":45933,"Skein1024-112":45934,"Skein1024-120":45935,"Skein1024-128":45936,"Skein1024-136":45937,"Skein1024-144":45938,"Skein1024-152":45939,"Skein1024-160":45940,"Skein1024-168":45941,"Skein1024-176":45942,"Skein1024-184":45943,"Skein1024-192":45944,"Skein1024-200":45945,"Skein1024-208":45946,"Skein1024-216":45947,"Skein1024-224":45948,"Skein1024-232":45949,"Skein1024-240":45950,"Skein1024-248":45951,"Skein1024-256":45952,"Skein1024-264":45953,"Skein1024-272":45954,"Skein1024-280":45955,"Skein1024-288":45956,"Skein1024-296":45957,"Skein1024-304":45958,"Skein1024-312":45959,"Skein1024-320":45960,"Skein1024-328":45961,"Skein1024-336":45962,"Skein1024-344":45963,"Skein1024-352":45964,"Skein1024-360":45965,"Skein1024-368":45966,"Skein1024-376":45967,"Skein1024-384":45968,"Skein1024-392":45969,"Skein1024-400":45970,"Skein1024-408":45971,"Skein1024-416":45972,"Skein1024-424":45973,"Skein1024-432":45974,"Skein1024-440":45975,"Skein1024-448":45976,"Skein1024-456":45977,"Skein1024-464":45978,"Skein1024-472":45979,"Skein1024-480":45980,"Skein1024-488":45981,"Skein1024-496":45982,"Skein1024-504":45983,"Skein1024-512":45984,"Skein1024-520":45985,"Skein1024-528":45986,"Skein1024-536":45987,"Skein1024-544":45988,"Skein1024-552":45989,"Skein1024-560":45990,"Skein1024-568":45991,"Skein1024-576":45992,"Skein1024-584":45993,"Skein1024-592":45994,"Skein1024-600":45995,"Skein1024-608":45996,"Skein1024-616":45997,"Skein1024-624":45998,"Skein1024-632":45999,"Skein1024-640":46e3,"Skein1024-648":46001,"Skein1024-656":46002,"Skein1024-664":46003,"Skein1024-672":46004,"Skein1024-680":46005,"Skein1024-688":46006,"Skein1024-696":46007,"Skein1024-704":46008,"Skein1024-712":46009,"Skein1024-720":46010,"Skein1024-728":46011,"Skein1024-736":46012,"Skein1024-744":46013,"Skein1024-752":46014,"Skein1024-760":46015,"Skein1024-768":46016,"Skein1024-776":46017,"Skein1024-784":46018,"Skein1024-792":46019,"Skein1024-800":46020,"Skein1024-808":46021,"Skein1024-816":46022,"Skein1024-824":46023,"Skein1024-832":46024,"Skein1024-840":46025,"Skein1024-848":46026,"Skein1024-856":46027,"Skein1024-864":46028,"Skein1024-872":46029,"Skein1024-880":46030,"Skein1024-888":46031,"Skein1024-896":46032,"Skein1024-904":46033,"Skein1024-912":46034,"Skein1024-920":46035,"Skein1024-928":46036,"Skein1024-936":46037,"Skein1024-944":46038,"Skein1024-952":46039,"Skein1024-960":46040,"Skein1024-968":46041,"Skein1024-976":46042,"Skein1024-984":46043,"Skein1024-992":46044,"Skein1024-1000":46045,"Skein1024-1008":46046,"Skein1024-1016":46047,"Skein1024-1024":46048}),n.codes=Object.freeze({17:"sha1",18:"sha2-256",19:"sha2-512",86:"dbl-sha2-256",23:"sha3-224",22:"sha3-256",21:"sha3-384",20:"sha3-512",24:"shake-128",25:"shake-256",26:"keccak-224",27:"keccak-256",28:"keccak-384",29:"keccak-512",34:"murmur3-128",35:"murmur3-32",45569:"blake2b-8",45570:"blake2b-16",45571:"blake2b-24",45572:"blake2b-32",45573:"blake2b-40",45574:"blake2b-48",45575:"blake2b-56",45576:"blake2b-64",45577:"blake2b-72",45578:"blake2b-80",45579:"blake2b-88",45580:"blake2b-96",45581:"blake2b-104",45582:"blake2b-112",45583:"blake2b-120",45584:"blake2b-128",45585:"blake2b-136",45586:"blake2b-144",45587:"blake2b-152",45588:"blake2b-160",45589:"blake2b-168",45590:"blake2b-176",45591:"blake2b-184",45592:"blake2b-192",45593:"blake2b-200",45594:"blake2b-208",45595:"blake2b-216",45596:"blake2b-224",45597:"blake2b-232",45598:"blake2b-240",45599:"blake2b-248",45600:"blake2b-256",45601:"blake2b-264",45602:"blake2b-272",45603:"blake2b-280",45604:"blake2b-288",45605:"blake2b-296",45606:"blake2b-304",45607:"blake2b-312",45608:"blake2b-320",45609:"blake2b-328",45610:"blake2b-336",45611:"blake2b-344",45612:"blake2b-352",45613:"blake2b-360",45614:"blake2b-368",45615:"blake2b-376",45616:"blake2b-384",45617:"blake2b-392",45618:"blake2b-400",45619:"blake2b-408",45620:"blake2b-416",45621:"blake2b-424",45622:"blake2b-432",45623:"blake2b-440",45624:"blake2b-448",45625:"blake2b-456",45626:"blake2b-464",45627:"blake2b-472",45628:"blake2b-480",45629:"blake2b-488",45630:"blake2b-496",45631:"blake2b-504",45632:"blake2b-512",45633:"blake2s-8",45634:"blake2s-16",45635:"blake2s-24",45636:"blake2s-32",45637:"blake2s-40",45638:"blake2s-48",45639:"blake2s-56",45640:"blake2s-64",45641:"blake2s-72",45642:"blake2s-80",45643:"blake2s-88",45644:"blake2s-96",45645:"blake2s-104",45646:"blake2s-112",45647:"blake2s-120",45648:"blake2s-128",45649:"blake2s-136",45650:"blake2s-144",45651:"blake2s-152",45652:"blake2s-160",45653:"blake2s-168",45654:"blake2s-176",45655:"blake2s-184",45656:"blake2s-192",45657:"blake2s-200",45658:"blake2s-208",45659:"blake2s-216",45660:"blake2s-224",45661:"blake2s-232",45662:"blake2s-240",45663:"blake2s-248",45664:"blake2s-256",45825:"Skein256-8",45826:"Skein256-16",45827:"Skein256-24",45828:"Skein256-32",45829:"Skein256-40",45830:"Skein256-48",45831:"Skein256-56",45832:"Skein256-64",45833:"Skein256-72",45834:"Skein256-80",45835:"Skein256-88",45836:"Skein256-96",45837:"Skein256-104",45838:"Skein256-112",45839:"Skein256-120",45840:"Skein256-128",45841:"Skein256-136",45842:"Skein256-144",45843:"Skein256-152",45844:"Skein256-160",45845:"Skein256-168",45846:"Skein256-176",45847:"Skein256-184",45848:"Skein256-192",45849:"Skein256-200",45850:"Skein256-208",45851:"Skein256-216",45852:"Skein256-224",45853:"Skein256-232",45854:"Skein256-240",45855:"Skein256-248",45856:"Skein256-256",45857:"Skein512-8",45858:"Skein512-16",45859:"Skein512-24",45860:"Skein512-32",45861:"Skein512-40",45862:"Skein512-48",45863:"Skein512-56",45864:"Skein512-64",45865:"Skein512-72",45866:"Skein512-80",45867:"Skein512-88",45868:"Skein512-96",45869:"Skein512-104",45870:"Skein512-112",45871:"Skein512-120",45872:"Skein512-128",45873:"Skein512-136",45874:"Skein512-144",45875:"Skein512-152",45876:"Skein512-160",45877:"Skein512-168",45878:"Skein512-176",45879:"Skein512-184",45880:"Skein512-192",45881:"Skein512-200",45882:"Skein512-208",45883:"Skein512-216",45884:"Skein512-224",45885:"Skein512-232",45886:"Skein512-240",45887:"Skein512-248",45888:"Skein512-256",45889:"Skein512-264",45890:"Skein512-272",45891:"Skein512-280",45892:"Skein512-288",45893:"Skein512-296",45894:"Skein512-304",45895:"Skein512-312",45896:"Skein512-320",45897:"Skein512-328",45898:"Skein512-336",45899:"Skein512-344",45900:"Skein512-352",45901:"Skein512-360",45902:"Skein512-368",45903:"Skein512-376",45904:"Skein512-384",45905:"Skein512-392",45906:"Skein512-400",45907:"Skein512-408",45908:"Skein512-416",45909:"Skein512-424",45910:"Skein512-432",45911:"Skein512-440",45912:"Skein512-448",45913:"Skein512-456",45914:"Skein512-464",45915:"Skein512-472",45916:"Skein512-480",45917:"Skein512-488",45918:"Skein512-496",45919:"Skein512-504",45920:"Skein512-512",45921:"Skein1024-8",45922:"Skein1024-16",45923:"Skein1024-24",45924:"Skein1024-32",45925:"Skein1024-40",45926:"Skein1024-48",45927:"Skein1024-56",45928:"Skein1024-64",45929:"Skein1024-72",45930:"Skein1024-80",45931:"Skein1024-88",45932:"Skein1024-96",45933:"Skein1024-104",45934:"Skein1024-112",45935:"Skein1024-120",45936:"Skein1024-128",45937:"Skein1024-136",45938:"Skein1024-144",45939:"Skein1024-152",45940:"Skein1024-160",45941:"Skein1024-168",45942:"Skein1024-176",45943:"Skein1024-184",45944:"Skein1024-192",45945:"Skein1024-200",45946:"Skein1024-208",45947:"Skein1024-216",45948:"Skein1024-224",45949:"Skein1024-232",45950:"Skein1024-240",45951:"Skein1024-248",45952:"Skein1024-256",45953:"Skein1024-264",45954:"Skein1024-272",45955:"Skein1024-280",45956:"Skein1024-288",45957:"Skein1024-296",45958:"Skein1024-304",45959:"Skein1024-312",45960:"Skein1024-320",45961:"Skein1024-328",45962:"Skein1024-336",45963:"Skein1024-344",45964:"Skein1024-352",45965:"Skein1024-360",45966:"Skein1024-368",45967:"Skein1024-376",45968:"Skein1024-384",45969:"Skein1024-392",45970:"Skein1024-400",45971:"Skein1024-408",45972:"Skein1024-416",45973:"Skein1024-424",45974:"Skein1024-432",45975:"Skein1024-440",45976:"Skein1024-448",45977:"Skein1024-456",45978:"Skein1024-464",45979:"Skein1024-472",45980:"Skein1024-480",45981:"Skein1024-488",45982:"Skein1024-496",45983:"Skein1024-504",45984:"Skein1024-512",45985:"Skein1024-520",45986:"Skein1024-528",45987:"Skein1024-536",45988:"Skein1024-544",45989:"Skein1024-552",45990:"Skein1024-560",45991:"Skein1024-568",45992:"Skein1024-576",45993:"Skein1024-584",45994:"Skein1024-592",45995:"Skein1024-600",45996:"Skein1024-608",45997:"Skein1024-616",45998:"Skein1024-624",45999:"Skein1024-632",46000:"Skein1024-640",46001:"Skein1024-648",46002:"Skein1024-656",46003:"Skein1024-664",46004:"Skein1024-672",46005:"Skein1024-680",46006:"Skein1024-688",46007:"Skein1024-696",46008:"Skein1024-704",46009:"Skein1024-712",46010:"Skein1024-720",46011:"Skein1024-728",46012:"Skein1024-736",46013:"Skein1024-744",46014:"Skein1024-752",46015:"Skein1024-760",46016:"Skein1024-768",46017:"Skein1024-776",46018:"Skein1024-784",46019:"Skein1024-792",46020:"Skein1024-800",46021:"Skein1024-808",46022:"Skein1024-816",46023:"Skein1024-824",46024:"Skein1024-832",46025:"Skein1024-840",46026:"Skein1024-848",46027:"Skein1024-856",46028:"Skein1024-864",46029:"Skein1024-872",46030:"Skein1024-880",46031:"Skein1024-888",46032:"Skein1024-896",46033:"Skein1024-904",46034:"Skein1024-912",46035:"Skein1024-920",46036:"Skein1024-928",46037:"Skein1024-936",46038:"Skein1024-944",46039:"Skein1024-952",46040:"Skein1024-960",46041:"Skein1024-968",46042:"Skein1024-976",46043:"Skein1024-984",46044:"Skein1024-992",46045:"Skein1024-1000",46046:"Skein1024-1008",46047:"Skein1024-1016",46048:"Skein1024-1024"}),n.defaultLengths=Object.freeze({17:20,18:32,19:64,86:32,23:28,22:32,21:48,20:64,24:32,25:64,26:28,27:32,28:48,29:64,34:32,45569:1,45570:2,45571:3,45572:4,45573:5,45574:6,45575:7,45576:8,45577:9,45578:10,45579:11,45580:12,45581:13,45582:14,45583:15,45584:16,45585:17,45586:18,45587:19,45588:20,45589:21,45590:22,45591:23,45592:24,45593:25,45594:26,45595:27,45596:28,45597:29,45598:30,45599:31,45600:32,45601:33,45602:34,45603:35,45604:36,45605:37,45606:38,45607:39,45608:40,45609:41,45610:42,45611:43,45612:44,45613:45,45614:46,45615:47,45616:48,45617:49,45618:50,45619:51,45620:52,45621:53,45622:54,45623:55,45624:56,45625:57,45626:58,45627:59,45628:60,45629:61,45630:62,45631:63,45632:64,45633:1,45634:2,45635:3,45636:4,45637:5,45638:6,45639:7,45640:8,45641:9,45642:10,45643:11,45644:12,45645:13,45646:14,45647:15,45648:16,45649:17,45650:18,45651:19,45652:20,45653:21,45654:22,45655:23,45656:24,45657:25,45658:26,45659:27,45660:28,45661:29,45662:30,45663:31,45664:32,45825:1,45826:2,45827:3,45828:4,45829:5,45830:6,45831:7,45832:8,45833:9,45834:10,45835:11,45836:12,45837:13,45838:14,45839:15,45840:16,45841:17,45842:18,45843:19,45844:20,45845:21,45846:22,45847:23,45848:24,45849:25,45850:26,45851:27,45852:28,45853:29,45854:30,45855:31,45856:32,45857:1,45858:2,45859:3,45860:4,45861:5,45862:6,45863:7,45864:8,45865:9,45866:10,45867:11,45868:12,45869:13,45870:14,45871:15,45872:16,45873:17,45874:18,45875:19,45876:20,45877:21,45878:22,45879:23,45880:24,45881:25,45882:26,45883:27,45884:28,45885:29,45886:30,45887:31,45888:32,45889:33,45890:34,45891:35,45892:36,45893:37,45894:38,45895:39,45896:40,45897:41,45898:42,45899:43,45900:44,45901:45,45902:46,45903:47,45904:48,45905:49,45906:50,45907:51,45908:52,45909:53,45910:54,45911:55,45912:56,45913:57,45914:58,45915:59,45916:60,45917:61,45918:62,45919:63,45920:64,45921:1,45922:2,45923:3,45924:4,45925:5,45926:6,45927:7,45928:8,45929:9,45930:10,45931:11,45932:12,45933:13,45934:14,45935:15,45936:16,45937:17,45938:18,45939:19,45940:20,45941:21,45942:22,45943:23,45944:24,45945:25,45946:26,45947:27,45948:28,45949:29,45950:30,45951:31,45952:32,45953:33,45954:34,45955:35,45956:36,45957:37,45958:38,45959:39,45960:40,45961:41,45962:42,45963:43,45964:44,45965:45,45966:46,45967:47,45968:48,45969:49,45970:50,45971:51,45972:52,45973:53,45974:54,45975:55,45976:56,45977:57,45978:58,45979:59,45980:60,45981:61,45982:62,45983:63,45984:64,45985:65,45986:66,45987:67,45988:68,45989:69,45990:70,45991:71,45992:72,45993:73,45994:74,45995:75,45996:76,45997:77,45998:78,45999:79,46000:80,46001:81,46002:82,46003:83,46004:84,46005:85,46006:86,46007:87,46008:88,46009:89,46010:90,46011:91,46012:92,46013:93,46014:94,46015:95,46016:96,46017:97,46018:98,46019:99,46020:100,46021:101,46022:102,46023:103,46024:104,46025:105,46026:106,46027:107,46028:108,46029:109,46030:110,46031:111,46032:112,46033:113,46034:114,46035:115,46036:116,46037:117,46038:118,46039:119,46040:120,46041:121,46042:122,46043:123,46044:124,46045:125,46046:126,46047:127,46048:128})},function(e,n){e.exports=function e(n,o,r){o=o||[];r=r||0;var s=r;for(;n>=a;)o[r++]=255&n|i,n/=128;for(;n&t;)o[r++]=255&n|i,n>>>=7;o[r]=0|n;e.bytes=r-s+1;return o};var i=128,t=-128,a=Math.pow(2,31)},function(e,n){e.exports=function e(n,a){var o,r=0,a=a||0,s=0,c=a,p=n.length;do{if(c>=p)throw e.bytes=0,new RangeError("Could not decode varint");o=n[c++],r+=s<28?(o&t)<<s:(o&t)*Math.pow(2,s),s+=7}while(o>=i);e.bytes=c-a;return r};var i=128,t=127},function(e,n){var i=Math.pow(2,7),t=Math.pow(2,14),a=Math.pow(2,21),o=Math.pow(2,28),r=Math.pow(2,35),s=Math.pow(2,42),c=Math.pow(2,49),p=Math.pow(2,56),u=Math.pow(2,63);e.exports=function(e){return e<i?1:e<t?2:e<a?3:e<o?4:e<r?5:e<s?6:e<c?7:e<p?8:e<u?9:10}},function(e,n,i){"use strict";const t=i(401),a=i(150),o=i(402),r=i(403),s=i(404),c=[["base1","1","","1"],["base2","0",a,"01"],["base8","7",a,"01234567"],["base10","9",a,"0123456789"],["base16","f",o,"0123456789abcdef"],["base32","b",r,"abcdefghijklmnopqrstuvwxyz234567"],["base32pad","c",r,"abcdefghijklmnopqrstuvwxyz234567="],["base32hex","v",r,"0123456789abcdefghijklmnopqrstuv"],["base32hexpad","t",r,"0123456789abcdefghijklmnopqrstuv="],["base32z","h",r,"ybndrfg8ejkmcpqxot1uwisza345h769"],["base58flickr","Z",a,"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],["base58btc","z",a,"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],["base64","m",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],["base64pad","M",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],["base64url","u",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"],["base64urlpad","U",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]],p=c.reduce((e,n)=>(e[n[0]]=new t(n[0],n[1],n[2],n[3]),e),{}),u=c.reduce((e,n)=>(e[n[1]]=p[n[0]],e),{});e.exports={names:p,codes:u}},function(e,n,i){"use strict";e.exports=class{constructor(e,n,i,t){this.name=e,this.code=n,this.alphabet=t,i&&t&&(this.engine=i(t))}encode(e){return this.engine.encode(e)}decode(e){return this.engine.decode(e)}isImplemented(){return this.engine}}},function(e,n,i){"use strict";e.exports=function(e){return{encode:e=>"string"==typeof e?Buffer.from(e).toString("hex"):e.toString("hex"),decode(n){for(let i of n)if(e.indexOf(i)<0)throw new Error("invalid base16 character");return Buffer.from(n,"hex")}}}},function(e,n,i){"use strict";function t(e,n){let i=e.byteLength,t=new Uint8Array(e),a=n.indexOf("=")===n.length-1;a&&(n=n.substring(0,n.length-2));let o=0,r=0,s="";for(let e=0;e<i;e++)for(r=r<<8|t[e],o+=8;o>=5;)s+=n[r>>>o-5&31],o-=5;if(o>0&&(s+=n[r<<5-o&31]),a)for(;s.length%8!=0;)s+="=";return s}e.exports=function(e){return{encode:n=>t("string"==typeof n?Buffer.from(n):n,e),decode(n){for(let i of n)if(e.indexOf(i)<0)throw new Error("invalid base32 character");return function(e,n){let i=(e=e.replace(new RegExp("=","g"),"")).length,t=0,a=0,o=0,r=new Uint8Array(5*i/8|0);for(let s=0;s<i;s++)a=a<<5|n.indexOf(e[s]),(t+=5)>=8&&(r[o++]=a>>>t-8&255,t-=8);return r.buffer}(n,e)}}}},function(e,n,i){"use strict";e.exports=function(e){const n=e.indexOf("=")>-1,i=e.indexOf("-")>-1&&e.indexOf("_")>-1;return{encode(e){let t="";t="string"==typeof e?Buffer.from(e).toString("base64"):e.toString("base64"),i&&(t=t.replace(/\+/g,"-").replace(/\//g,"_"));const a=t.indexOf("=");return a>0&&!n&&(t=t.substring(0,a)),t},decode(n){for(let i of n)if(e.indexOf(i)<0)throw new Error("invalid base64 character");return Buffer.from(n,"base64")}}}},function(e,n,i){"use strict";const t=i(406),a=i(105),o=i(50);function r(e){const n=[],i=e.split("/").slice(1);if(1===i.length&&""===i[0])return[];for(let t=0;t<i.length;t++){const o=i[t],r=a(o);if(0!==r.size){if(++t>=i.length)throw v("invalid address: "+e);if(r.path){n.push([o,x(i.slice(t).join("/"))]);break}n.push([o,i[t]])}else n.push([o])}return n}function s(e){const n=[];return e.map(e=>{const i=b(e);n.push(i.name),e.length>1&&n.push(e[1])}),x(n.join("/"))}function c(e){return e.map(e=>{Array.isArray(e)||(e=[e]);const n=b(e);return e.length>1?[n.code,t.toBuffer(n.code,e[1])]:[n.code]})}function p(e){return e.map(e=>{const n=b(e);return e.length>1?[n.code,t.toString(n.code,e[1])]:[n.code]})}function u(e){return m(Buffer.concat(e.map(e=>{const n=b(e);let i=Buffer.from(o.encode(n.code));return e.length>1&&(i=Buffer.concat([i,e[1]])),i})))}function l(e,n){if(e.size>0)return e.size/8;if(0===e.size)return 0;return o.decode(n)+o.decode.bytes}function f(e){const n=[];let i=0;for(;i<e.length;){const t=o.decode(e,i),r=o.decode.bytes,s=l(a(t),e.slice(i+r));if(0===s){n.push([t]),i+=r;continue}const c=e.slice(i+r,i+r+s);if((i+=s+r)>e.length)throw v("Invalid address buffer: "+e.toString("hex"));n.push([t,c])}return n}function d(e){return u(c(r(e=x(e))))}function m(e){const n=h(e);if(n)throw n;return Buffer.from(e)}function h(e){try{f(e)}catch(e){return e}}function x(e){return"/"+e.trim().split("/").filter(e=>e).join("/")}function v(e){return new Error("Error parsing address: "+e)}function b(e){return a(e[0])}e.exports={stringToStringTuples:r,stringTuplesToString:s,tuplesToStringTuples:p,stringTuplesToTuples:c,bufferToTuples:f,tuplesToBuffer:u,bufferToString:function(e){return s(p(f(e)))},stringToBuffer:d,fromString:function(e){return d(e)},fromBuffer:m,validateBuffer:h,isValidBuffer:function(e){return void 0===h(e)},cleanPath:x,ParseError:v,protoFromTuple:b,sizeForAddr:l}},function(e,n,i){"use strict";const t=i(407),a=i(408),o=i(105),r=i(72),s=i(50);function c(e,n){return n instanceof Buffer?c.toString(e,n):c.toBuffer(e,n)}function p(e){if(!a(e))throw new Error("invalid ip address");return t.toBuffer(e)}e.exports=c,c.toString=function(e,n){switch((e=o(e)).code){case 4:case 41:return function(e){const n=t.toString(e);if(!a(n))throw new Error("invalid ip address");return n}(n);case 6:case 273:case 33:case 132:return function(e){return e.readUInt16BE(0)}(n);case 53:case 54:case 55:case 56:case 400:return function(e){const n=s.decode(e);if((e=e.slice(s.decode.bytes)).length!==n)throw new Error("inconsistent lengths");return e.toString()}(n);case 421:return function(e){const n=s.decode(e),i=e.slice(s.decode.bytes);if(i.length!==n)throw new Error("inconsistent lengths");return r.encode(i)}(n);default:return n.toString("hex")}},c.toBuffer=function(e,n){switch((e=o(e)).code){case 4:case 41:return p(n);case 6:case 273:case 33:case 132:return function(e){const n=Buffer.alloc(2);return n.writeUInt16BE(e,0),n}(parseInt(n,10));case 53:case 54:case 55:case 56:case 400:return function(e){const n=Buffer.from(e),i=Buffer.from(s.encode(n.length));return Buffer.concat([i,n])}(n);case 421:return function(e){const n=Buffer.from(r.decode(e)),i=Buffer.from(s.encode(n.length));return Buffer.concat([i,n])}(n);default:return Buffer.from(n,"hex")}}},function(e,n,i){"use strict";var t=n,a=i(151).Buffer,o=i(147);t.toBuffer=function(e,n,i){var t;if(i=~~i,this.isV4Format(e))t=n||new a(i+4),e.split(/\./g).map(function(e){t[i++]=255&parseInt(e,10)});else if(this.isV6Format(e)){var o,r=e.split(":",8);for(o=0;o<r.length;o++){var s;this.isV4Format(r[o])&&(s=this.toBuffer(r[o]),r[o]=s.slice(0,2).toString("hex")),s&&++o<8&&r.splice(o,0,s.slice(2,4).toString("hex"))}if(""===r[0])for(;r.length<8;)r.unshift("0");else if(""===r[r.length-1])for(;r.length<8;)r.push("0");else if(r.length<8){for(o=0;o<r.length&&""!==r[o];o++);var c=[o,1];for(o=9-r.length;o>0;o--)c.push("0");r.splice.apply(r,c)}for(t=n||new a(i+16),o=0;o<r.length;o++){var p=parseInt(r[o],16);t[i++]=p>>8&255,t[i++]=255&p}}if(!t)throw Error("Invalid ip address: "+e);return t},t.toString=function(e,n,i){n=~~n;var t=[];if(4===(i=i||e.length-n)){for(var a=0;a<i;a++)t.push(e[n+a]);t=t.join(".")}else if(16===i){for(a=0;a<i;a+=2)t.push(e.readUInt16BE(n+a).toString(16));t=(t=(t=t.join(":")).replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3")).replace(/:{3,4}/,"::")}return t};var r=/^(\d{1,3}\.){3,3}\d{1,3}$/,s=/^(::)?(((\d{1,3}\.){3}(\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;function c(e){return e?e.toLowerCase():"ipv4"}t.isV4Format=function(e){return r.test(e)},t.isV6Format=function(e){return s.test(e)},t.fromPrefixLen=function(e,n){var i=4;"ipv6"===(n=e>32?"ipv6":c(n))&&(i=16);for(var o=new a(i),r=0,s=o.length;r<s;++r){var p=8;e<8&&(p=e),e-=p,o[r]=255&~(255>>p)}return t.toString(o)},t.mask=function(e,n){e=t.toBuffer(e),n=t.toBuffer(n);var i=new a(Math.max(e.length,n.length)),o=0;if(e.length===n.length)for(o=0;o<e.length;o++)i[o]=e[o]&n[o];else if(4===n.length)for(o=0;o<n.length;o++)i[o]=e[e.length-4+o]&n[o];else{for(o=0;o<i.length-6;o++)i[o]=0;for(i[10]=255,i[11]=255,o=0;o<e.length;o++)i[o+12]=e[o]&n[o+12];o+=12}for(;o<i.length;o++)i[o]=0;return t.toString(i)},t.cidr=function(e){var n=e.split("/"),i=n[0];if(2!==n.length)throw new Error("invalid CIDR subnet: "+i);var a=t.fromPrefixLen(parseInt(n[1],10));return t.mask(i,a)},t.subnet=function(e,n){for(var i=t.toLong(t.mask(e,n)),a=t.toBuffer(n),o=0,r=0;r<a.length;r++)if(255===a[r])o+=8;else for(var s=255&a[r];s;)s=s<<1&255,o++;var c=Math.pow(2,32-o);return{networkAddress:t.fromLong(i),firstAddress:c<=2?t.fromLong(i):t.fromLong(i+1),lastAddress:c<=2?t.fromLong(i+c-1):t.fromLong(i+c-2),broadcastAddress:t.fromLong(i+c-1),subnetMask:n,subnetMaskLength:o,numHosts:c<=2?c:c-2,length:c,contains:function(e){return i===t.toLong(t.mask(e,n))}}},t.cidrSubnet=function(e){var n=e.split("/"),i=n[0];if(2!==n.length)throw new Error("invalid CIDR subnet: "+i);var a=t.fromPrefixLen(parseInt(n[1],10));return t.subnet(i,a)},t.not=function(e){for(var n=t.toBuffer(e),i=0;i<n.length;i++)n[i]=255^n[i];return t.toString(n)},t.or=function(e,n){if(e=t.toBuffer(e),n=t.toBuffer(n),e.length===n.length){for(var i=0;i<e.length;++i)e[i]|=n[i];return t.toString(e)}var a=e,o=n;n.length>e.length&&(a=n,o=e);var r=a.length-o.length;for(i=r;i<a.length;++i)a[i]|=o[i-r];return t.toString(a)},t.isEqual=function(e,n){if(e=t.toBuffer(e),n=t.toBuffer(n),e.length===n.length){for(var i=0;i<e.length;i++)if(e[i]!==n[i])return!1;return!0}if(4===n.length){var a=n;n=e,e=a}for(i=0;i<10;i++)if(0!==n[i])return!1;var o=n.readUInt16BE(10);if(0!==o&&65535!==o)return!1;for(i=0;i<4;i++)if(e[i]!==n[i+12])return!1;return!0},t.isPrivate=function(e){return/^(::f{4}:)?10\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?192\.168\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?172\.(1[6-9]|2\d|30|31)\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?169\.254\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^f[cd][0-9a-f]{2}:/i.test(e)||/^fe80:/i.test(e)||/^::1$/.test(e)||/^::$/.test(e)},t.isPublic=function(e){return!t.isPrivate(e)},t.isLoopback=function(e){return/^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/.test(e)||/^fe80::1$/.test(e)||/^::1$/.test(e)||/^::$/.test(e)},t.loopback=function(e){if("ipv4"!==(e=c(e))&&"ipv6"!==e)throw new Error("family must be ipv4 or ipv6");return"ipv4"===e?"127.0.0.1":"fe80::1"},t.address=function(e,n){var i,a=o.networkInterfaces();if(n=c(n),e&&"private"!==e&&"public"!==e){var r=a[e].filter(function(e){return e.family.toLowerCase()===n});if(0===r.length)return;return r[0].address}return(i=Object.keys(a).map(function(i){var o=a[i].filter(function(i){return i.family=i.family.toLowerCase(),i.family===n&&!t.isLoopback(i.address)&&(!e||("public"===e?t.isPrivate(i.address):t.isPublic(i.address)))});return o.length?o[0].address:void 0}).filter(Boolean)).length?i[0]:t.loopback(n)},t.toLong=function(e){var n=0;return e.split(".").forEach(function(e){n<<=8,n+=parseInt(e)}),n>>>0},t.fromLong=function(e){return(e>>>24)+"."+(e>>16&255)+"."+(e>>8&255)+"."+(255&e)}},function(e,n,i){"use strict";const t=i(409),a=e.exports=(e=>t({exact:!0}).test(e));a.v4=(e=>t.v4({exact:!0}).test(e)),a.v6=(e=>t.v6({exact:!0}).test(e))},function(e,n,i){"use strict";const t="(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}",a="[0-9a-fA-F]{1,4}",o=`\n(\n(?:${a}:){7}(?:${a}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${a}:){6}(?:${t}|:${a}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${a}:){5}(?::${t}|(:${a}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${a}:){4}(?:(:${a}){0,1}:${t}|(:${a}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${a}:){3}(?:(:${a}){0,2}:${t}|(:${a}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${a}:){2}(?:(:${a}){0,3}:${t}|(:${a}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${a}:){1}(?:(:${a}){0,4}:${t}|(:${a}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${a}){0,5}:${t}|(?::${a}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),r=e.exports=(e=>e&&e.exact?new RegExp(`(?:^${t}$)|(?:^${o}$)`):new RegExp(`(?:${t})|(?:${o})`,"g"));r.v4=(e=>e&&e.exact?new RegExp(`^${t}$`):new RegExp(t,"g")),r.v6=(e=>e&&e.exact?new RegExp(`^${o}$`):new RegExp(o,"g"))},function(e,n,i){"use strict";const t=i(153),a=N("dns4"),o=N("dns6"),r=I(N("dnsaddr"),a,o),s=I(N("ip4"),N("ip6")),c=I(j(s,N("tcp")),j(r,N("tcp"))),p=j(s,N("udp")),u=j(p,N("utp")),l=I(j(r,N("tcp")),r),f=I(j(c,N("ws")),j(l,N("ws"))),d=I(j(c,N("wss")),j(l,N("wss"))),m=I(j(c,N("http")),j(s,N("http")),j(l,N("http")),j(l)),h=I(j(c,N("https")),j(s,N("https")),j(l,N("https"))),x=I(j(f,N("p2p-webrtc-star"),N("ipfs")),j(d,N("p2p-webrtc-star"),N("ipfs"))),v=I(j(f,N("p2p-websocket-star"),N("ipfs")),j(d,N("p2p-websocket-star"),N("ipfs")),j(f,N("p2p-websocket-star")),j(d,N("p2p-websocket-star"))),b=I(j(m,N("p2p-webrtc-direct")),j(h,N("p2p-webrtc-direct"))),g=I(f,d,m,h,x,b,c,u),k=I(j(g,N("p2p-stardust"),N("ipfs")),j(g,N("p2p-stardust")));let y=I(j(g,N("ipfs")),x,N("ipfs"));const S=I(j(y,N("p2p-circuit"),y),j(y,N("p2p-circuit")),j(N("p2p-circuit"),y),j(g,N("p2p-circuit")),j(N("p2p-circuit"),g),N("p2p-circuit")),w=()=>I(j(S,w),S),_=w(),E=I(j(_,y,_),j(y,_),j(_,y),_,y);function B(e){return function(n){if(!t.isMultiaddr(n))try{n=t(n)}catch(e){return!1}let i=e(n.protoNames());return null!==i&&0===i.length}}function j(){const e=Array.from(arguments);function n(n){return n.length<e.length?null:(e.some(e=>{if(null===(n="function"==typeof e?e().partialMatch(n):e.partialMatch(n)))return!0}),n)}return{toString:function(){return"{ "+e.join(" ")+" }"},input:e,matches:B(n),partialMatch:n}}function I(){const e=Array.from(arguments);function n(n){let i=null;return e.some(e=>{const t="function"==typeof e?e().partialMatch(n):e.partialMatch(n);if(t)return i=t,!0}),i}return{toString:function(){return"{ "+e.join(" ")+" }"},input:e,matches:B(n),partialMatch:n}}function N(e){const n=e;return{toString:function(){return n},matches:function(e){if("string"==typeof e)try{e=t(e)}catch(e){return!1}const i=e.protoNames();return 1===i.length&&i[0]===n},partialMatch:function(e){return 0===e.length?null:e[0]===n?e.slice(1):null}}}n.DNS=l,n.DNS4=a,n.DNS6=o,n.IP=s,n.TCP=c,n.UDP=p,n.UTP=u,n.HTTP=m,n.HTTPS=h,n.WebSockets=f,n.WebSocketsSecure=d,n.WebSocketStar=v,n.WebRTCStar=x,n.WebRTCDirect=b,n.Reliable=g,n.Stardust=k,n.Circuit=_,n.IPFS=E},function(e,n,i){"use strict";const t=i(104),a=i(152),o=i(412),r=i(106),s=i(417);class c{constructor(n,i,r){if(e.exports.isCID(n)){let e=n;return this.version=e.version,this.codec=e.codec,void(this.multihash=Buffer.from(e.multihash))}if("string"==typeof n)if(a.isEncoded(n)){const e=a.decode(n);n=parseInt(e.slice(0,1).toString("hex"),16),i=o.getCodec(e.slice(1)),r=o.rmPrefix(e.slice(1))}else i="dag-pb",r=t.fromB58String(n),n=0;else if(Buffer.isBuffer(n)){const e=n.slice(0,1),t=parseInt(e.toString("hex"),16);if(0===t||1===t){const e=n;n=t,i=o.getCodec(e.slice(1)),r=o.rmPrefix(e.slice(1))}else i="dag-pb",r=n,n=0}this.codec=i,this.version=n,this.multihash=r,c.validateCID(this)}get buffer(){let e=this._buffer;if(!e){if(0===this.version)e=this.multihash;else{if(1!==this.version)throw new Error("unsupported version");e=Buffer.concat([Buffer.from("01","hex"),o.getCodeVarint(this.codec),this.multihash])}Object.defineProperty(this,"_buffer",{value:e})}return e}get prefix(){return Buffer.concat([Buffer.from(`0${this.version}`,"hex"),o.getCodeVarint(this.codec),t.prefix(this.multihash)])}toV0(){if("dag-pb"!==this.codec)throw new Error("Cannot convert a non dag-pb CID to CIDv0");const{name:e,length:n}=t.decode(this.multihash);if("sha2-256"!==e)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");if(32!==n)throw new Error("Cannot convert non 32 byte multihash CID to CIDv0");return new p(0,this.codec,this.multihash)}toV1(){return new p(1,this.codec,this.multihash)}toBaseEncodedString(e){switch(e=e||"base58btc",this.version){case 0:if("base58btc"!==e)throw new Error("not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()");return t.toB58String(this.multihash);case 1:return a.encode(e,this.buffer).toString();default:throw new Error("Unsupported version")}}toString(e){return this.toBaseEncodedString(e)}toJSON(){return{codec:this.codec,version:this.version,hash:this.multihash}}equals(e){return this.codec===e.codec&&this.version===e.version&&this.multihash.equals(e.multihash)}static validateCID(e){let n=s.checkCIDComponents(e);if(n)throw new Error(n)}}const p=i(154)(c,{className:"CID",symbolName:"@ipld/js-cid/CID"});p.codecs=r,e.exports=p},function(e,n,i){"use strict";const t=i(50),a=i(413),o=i(414),r=i(155);(n=e.exports).addPrefix=((e,n)=>{let i;if(Buffer.isBuffer(e))i=r.varintBufferEncode(e);else{if(!a[e])throw new Error("multicodec not recognized");i=a[e]}return Buffer.concat([i,n])}),n.rmPrefix=(e=>(t.decode(e),e.slice(t.decode.bytes))),n.getCodec=(e=>{const n=r.varintBufferDecode(e),i=o[n.toString("hex")];if(void 0===i)throw new Error("Code `0x"+n.toString("hex")+"` not found");return i}),n.getCode=(e=>t.decode(e)),n.getCodeVarint=(e=>{const n=a[e];if(void 0===n)throw new Error("Codec `"+e+"` not found");return n}),n.getVarint=(e=>t.encode(e));const s=i(415);Object.assign(n,s),n.print=i(416)},function(e,n,i){"use strict";const t=i(106),a=i(155).varintBufferEncode,o={};e.exports=o;for(let e in t){let n=t[e];o[e]=a(n)}},function(e,n,i){"use strict";const t=i(106),a={};e.exports=a;for(let e in t){a[t[e].toString("hex")]=e}},function(e,n,i){"use strict";e.exports=Object.freeze({RAW:85,CBOR:81,PROTOBUF:80,RLP:96,BENCODE:99,MULTICODEC:48,MULTIHASH:49,MULTIADDR:50,MULTIBASE:51,IDENTITY:0,MD4:212,MD5:213,SHA1:17,SHA2_256:18,SHA2_512:19,DBL_SHA2_256:86,SHA3_224:23,SHA3_256:22,SHA3_384:21,SHA3_512:20,SHAKE_128:24,SHAKE_256:25,KECCAK_224:26,KECCAK_256:27,KECCAK_384:28,KECCAK_512:29,MURMUR3_128:34,MURMUR3_32:35,X11:4352,BLAKE2B_8:45569,BLAKE2B_16:45570,BLAKE2B_24:45571,BLAKE2B_32:45572,BLAKE2B_40:45573,BLAKE2B_48:45574,BLAKE2B_56:45575,BLAKE2B_64:45576,BLAKE2B_72:45577,BLAKE2B_80:45578,BLAKE2B_88:45579,BLAKE2B_96:45580,BLAKE2B_104:45581,BLAKE2B_112:45582,BLAKE2B_120:45583,BLAKE2B_128:45584,BLAKE2B_136:45585,BLAKE2B_144:45586,BLAKE2B_152:45587,BLAKE2B_160:45588,BLAKE2B_168:45589,BLAKE2B_176:45590,BLAKE2B_184:45591,BLAKE2B_192:45592,BLAKE2B_200:45593,BLAKE2B_208:45594,BLAKE2B_216:45595,BLAKE2B_224:45596,BLAKE2B_232:45597,BLAKE2B_240:45598,BLAKE2B_248:45599,BLAKE2B_256:45600,BLAKE2B_264:45601,BLAKE2B_272:45602,BLAKE2B_280:45603,BLAKE2B_288:45604,BLAKE2B_296:45605,BLAKE2B_304:45606,BLAKE2B_312:45607,BLAKE2B_320:45608,BLAKE2B_328:45609,BLAKE2B_336:45610,BLAKE2B_344:45611,BLAKE2B_352:45612,BLAKE2B_360:45613,BLAKE2B_368:45614,BLAKE2B_376:45615,BLAKE2B_384:45616,BLAKE2B_392:45617,BLAKE2B_400:45618,BLAKE2B_408:45619,BLAKE2B_416:45620,BLAKE2B_424:45621,BLAKE2B_432:45622,BLAKE2B_440:45623,BLAKE2B_448:45624,BLAKE2B_456:45625,BLAKE2B_464:45626,BLAKE2B_472:45627,BLAKE2B_480:45628,BLAKE2B_488:45629,BLAKE2B_496:45630,BLAKE2B_504:45631,BLAKE2B_512:45632,BLAKE2S_8:45633,BLAKE2S_16:45634,BLAKE2S_24:45635,BLAKE2S_32:45636,BLAKE2S_40:45637,BLAKE2S_48:45638,BLAKE2S_56:45639,BLAKE2S_64:45640,BLAKE2S_72:45641,BLAKE2S_80:45642,BLAKE2S_88:45643,BLAKE2S_96:45644,BLAKE2S_104:45645,BLAKE2S_112:45646,BLAKE2S_120:45647,BLAKE2S_128:45648,BLAKE2S_136:45649,BLAKE2S_144:45650,BLAKE2S_152:45651,BLAKE2S_160:45652,BLAKE2S_168:45653,BLAKE2S_176:45654,BLAKE2S_184:45655,BLAKE2S_192:45656,BLAKE2S_200:45657,BLAKE2S_208:45658,BLAKE2S_216:45659,BLAKE2S_224:45660,BLAKE2S_232:45661,BLAKE2S_240:45662,BLAKE2S_248:45663,BLAKE2S_256:45664,SKEIN256_8:45825,SKEIN256_16:45826,SKEIN256_24:45827,SKEIN256_32:45828,SKEIN256_40:45829,SKEIN256_48:45830,SKEIN256_56:45831,SKEIN256_64:45832,SKEIN256_72:45833,SKEIN256_80:45834,SKEIN256_88:45835,SKEIN256_96:45836,SKEIN256_104:45837,SKEIN256_112:45838,SKEIN256_120:45839,SKEIN256_128:45840,SKEIN256_136:45841,SKEIN256_144:45842,SKEIN256_152:45843,SKEIN256_160:45844,SKEIN256_168:45845,SKEIN256_176:45846,SKEIN256_184:45847,SKEIN256_192:45848,SKEIN256_200:45849,SKEIN256_208:45850,SKEIN256_216:45851,SKEIN256_224:45852,SKEIN256_232:45853,SKEIN256_240:45854,SKEIN256_248:45855,SKEIN256_256:45856,SKEIN512_8:45857,SKEIN512_16:45858,SKEIN512_24:45859,SKEIN512_32:45860,SKEIN512_40:45861,SKEIN512_48:45862,SKEIN512_56:45863,SKEIN512_64:45864,SKEIN512_72:45865,SKEIN512_80:45866,SKEIN512_88:45867,SKEIN512_96:45868,SKEIN512_104:45869,SKEIN512_112:45870,SKEIN512_120:45871,SKEIN512_128:45872,SKEIN512_136:45873,SKEIN512_144:45874,SKEIN512_152:45875,SKEIN512_160:45876,SKEIN512_168:45877,SKEIN512_176:45878,SKEIN512_184:45879,SKEIN512_192:45880,SKEIN512_200:45881,SKEIN512_208:45882,SKEIN512_216:45883,SKEIN512_224:45884,SKEIN512_232:45885,SKEIN512_240:45886,SKEIN512_248:45887,SKEIN512_256:45888,SKEIN512_264:45889,SKEIN512_272:45890,SKEIN512_280:45891,SKEIN512_288:45892,SKEIN512_296:45893,SKEIN512_304:45894,SKEIN512_312:45895,SKEIN512_320:45896,SKEIN512_328:45897,SKEIN512_336:45898,SKEIN512_344:45899,SKEIN512_352:45900,SKEIN512_360:45901,SKEIN512_368:45902,SKEIN512_376:45903,SKEIN512_384:45904,SKEIN512_392:45905,SKEIN512_400:45906,SKEIN512_408:45907,SKEIN512_416:45908,SKEIN512_424:45909,SKEIN512_432:45910,SKEIN512_440:45911,SKEIN512_448:45912,SKEIN512_456:45913,SKEIN512_464:45914,SKEIN512_472:45915,SKEIN512_480:45916,SKEIN512_488:45917,SKEIN512_496:45918,SKEIN512_504:45919,SKEIN512_512:45920,SKEIN1024_8:45921,SKEIN1024_16:45922,SKEIN1024_24:45923,SKEIN1024_32:45924,SKEIN1024_40:45925,SKEIN1024_48:45926,SKEIN1024_56:45927,SKEIN1024_64:45928,SKEIN1024_72:45929,SKEIN1024_80:45930,SKEIN1024_88:45931,SKEIN1024_96:45932,SKEIN1024_104:45933,SKEIN1024_112:45934,SKEIN1024_120:45935,SKEIN1024_128:45936,SKEIN1024_136:45937,SKEIN1024_144:45938,SKEIN1024_152:45939,SKEIN1024_160:45940,SKEIN1024_168:45941,SKEIN1024_176:45942,SKEIN1024_184:45943,SKEIN1024_192:45944,SKEIN1024_200:45945,SKEIN1024_208:45946,SKEIN1024_216:45947,SKEIN1024_224:45948,SKEIN1024_232:45949,SKEIN1024_240:45950,SKEIN1024_248:45951,SKEIN1024_256:45952,SKEIN1024_264:45953,SKEIN1024_272:45954,SKEIN1024_280:45955,SKEIN1024_288:45956,SKEIN1024_296:45957,SKEIN1024_304:45958,SKEIN1024_312:45959,SKEIN1024_320:45960,SKEIN1024_328:45961,SKEIN1024_336:45962,SKEIN1024_344:45963,SKEIN1024_352:45964,SKEIN1024_360:45965,SKEIN1024_368:45966,SKEIN1024_376:45967,SKEIN1024_384:45968,SKEIN1024_392:45969,SKEIN1024_400:45970,SKEIN1024_408:45971,SKEIN1024_416:45972,SKEIN1024_424:45973,SKEIN1024_432:45974,SKEIN1024_440:45975,SKEIN1024_448:45976,SKEIN1024_456:45977,SKEIN1024_464:45978,SKEIN1024_472:45979,SKEIN1024_480:45980,SKEIN1024_488:45981,SKEIN1024_496:45982,SKEIN1024_504:45983,SKEIN1024_512:45984,SKEIN1024_520:45985,SKEIN1024_528:45986,SKEIN1024_536:45987,SKEIN1024_544:45988,SKEIN1024_552:45989,SKEIN1024_560:45990,SKEIN1024_568:45991,SKEIN1024_576:45992,SKEIN1024_584:45993,SKEIN1024_592:45994,SKEIN1024_600:45995,SKEIN1024_608:45996,SKEIN1024_616:45997,SKEIN1024_624:45998,SKEIN1024_632:45999,SKEIN1024_640:46e3,SKEIN1024_648:46001,SKEIN1024_656:46002,SKEIN1024_664:46003,SKEIN1024_672:46004,SKEIN1024_680:46005,SKEIN1024_688:46006,SKEIN1024_696:46007,SKEIN1024_704:46008,SKEIN1024_712:46009,SKEIN1024_720:46010,SKEIN1024_728:46011,SKEIN1024_736:46012,SKEIN1024_744:46013,SKEIN1024_752:46014,SKEIN1024_760:46015,SKEIN1024_768:46016,SKEIN1024_776:46017,SKEIN1024_784:46018,SKEIN1024_792:46019,SKEIN1024_800:46020,SKEIN1024_808:46021,SKEIN1024_816:46022,SKEIN1024_824:46023,SKEIN1024_832:46024,SKEIN1024_840:46025,SKEIN1024_848:46026,SKEIN1024_856:46027,SKEIN1024_864:46028,SKEIN1024_872:46029,SKEIN1024_880:46030,SKEIN1024_888:46031,SKEIN1024_896:46032,SKEIN1024_904:46033,SKEIN1024_912:46034,SKEIN1024_920:46035,SKEIN1024_928:46036,SKEIN1024_936:46037,SKEIN1024_944:46038,SKEIN1024_952:46039,SKEIN1024_960:46040,SKEIN1024_968:46041,SKEIN1024_976:46042,SKEIN1024_984:46043,SKEIN1024_992:46044,SKEIN1024_1000:46045,SKEIN1024_1008:46046,SKEIN1024_1016:46047,SKEIN1024_1024:46048,IP4:4,IP6:41,IP6ZONE:42,TCP:6,UDP:273,DCCP:33,SCTP:132,UDT:301,UTP:302,P2P:421,IPFS:421,HTTP:480,HTTPS:443,QUIC:460,WS:477,WSS:478,ONION:444,ONION3:445,GARLIC64:446,P2P_CIRCUIT:290,DNS:53,DNS4:54,DNS6:55,DNSADDR:56,P2P_WEBSOCKET_STAR:479,P2P_STARDUST:277,P2P_WEBRTC_STAR:275,P2P_WEBRTC_DIRECT:276,UNIX:400,DAG_PB:112,DAG_CBOR:113,DAG_JSON:297,GIT_RAW:120,ETH_BLOCK:144,ETH_BLOCK_LIST:145,ETH_TX_TRIE:146,ETH_TX:147,ETH_TX_RECEIPT_TRIE:148,ETH_TX_RECEIPT:149,ETH_STATE_TRIE:150,ETH_ACCOUNT_SNAPSHOT:151,ETH_STORAGE_TRIE:152,BITCOIN_BLOCK:176,BITCOIN_TX:177,ZCASH_BLOCK:192,ZCASH_TX:193,STELLAR_BLOCK:208,STELLAR_TX:209,DECRED_BLOCK:224,DECRED_TX:225,DASH_BLOCK:240,DASH_TX:241,LEOFCOIN_BLOCK:129,LEOFCOIN_TX:130,LEOFCOIN_PR:131,TORRENT_INFO:123,TORRENT_FILE:124,ED25519_PUB:237,IPLD_NS:226,IPFS_NS:227,SWARM_NS:228})},function(e,n,i){"use strict";e.exports=Object.freeze({85:"raw",81:"cbor",80:"protobuf",96:"rlp",99:"bencode",48:"multicodec",49:"multihash",50:"multiaddr",51:"multibase",0:"identity",212:"md4",213:"md5",17:"sha1",18:"sha2-256",19:"sha2-512",86:"dbl-sha2-256",23:"sha3-224",22:"sha3-256",21:"sha3-384",20:"sha3-512",24:"shake-128",25:"shake-256",26:"keccak-224",27:"keccak-256",28:"keccak-384",29:"keccak-512",34:"murmur3-128",35:"murmur3-32",4352:"x11",45569:"blake2b-8",45570:"blake2b-16",45571:"blake2b-24",45572:"blake2b-32",45573:"blake2b-40",45574:"blake2b-48",45575:"blake2b-56",45576:"blake2b-64",45577:"blake2b-72",45578:"blake2b-80",45579:"blake2b-88",45580:"blake2b-96",45581:"blake2b-104",45582:"blake2b-112",45583:"blake2b-120",45584:"blake2b-128",45585:"blake2b-136",45586:"blake2b-144",45587:"blake2b-152",45588:"blake2b-160",45589:"blake2b-168",45590:"blake2b-176",45591:"blake2b-184",45592:"blake2b-192",45593:"blake2b-200",45594:"blake2b-208",45595:"blake2b-216",45596:"blake2b-224",45597:"blake2b-232",45598:"blake2b-240",45599:"blake2b-248",45600:"blake2b-256",45601:"blake2b-264",45602:"blake2b-272",45603:"blake2b-280",45604:"blake2b-288",45605:"blake2b-296",45606:"blake2b-304",45607:"blake2b-312",45608:"blake2b-320",45609:"blake2b-328",45610:"blake2b-336",45611:"blake2b-344",45612:"blake2b-352",45613:"blake2b-360",45614:"blake2b-368",45615:"blake2b-376",45616:"blake2b-384",45617:"blake2b-392",45618:"blake2b-400",45619:"blake2b-408",45620:"blake2b-416",45621:"blake2b-424",45622:"blake2b-432",45623:"blake2b-440",45624:"blake2b-448",45625:"blake2b-456",45626:"blake2b-464",45627:"blake2b-472",45628:"blake2b-480",45629:"blake2b-488",45630:"blake2b-496",45631:"blake2b-504",45632:"blake2b-512",45633:"blake2s-8",45634:"blake2s-16",45635:"blake2s-24",45636:"blake2s-32",45637:"blake2s-40",45638:"blake2s-48",45639:"blake2s-56",45640:"blake2s-64",45641:"blake2s-72",45642:"blake2s-80",45643:"blake2s-88",45644:"blake2s-96",45645:"blake2s-104",45646:"blake2s-112",45647:"blake2s-120",45648:"blake2s-128",45649:"blake2s-136",45650:"blake2s-144",45651:"blake2s-152",45652:"blake2s-160",45653:"blake2s-168",45654:"blake2s-176",45655:"blake2s-184",45656:"blake2s-192",45657:"blake2s-200",45658:"blake2s-208",45659:"blake2s-216",45660:"blake2s-224",45661:"blake2s-232",45662:"blake2s-240",45663:"blake2s-248",45664:"blake2s-256",45825:"skein256-8",45826:"skein256-16",45827:"skein256-24",45828:"skein256-32",45829:"skein256-40",45830:"skein256-48",45831:"skein256-56",45832:"skein256-64",45833:"skein256-72",45834:"skein256-80",45835:"skein256-88",45836:"skein256-96",45837:"skein256-104",45838:"skein256-112",45839:"skein256-120",45840:"skein256-128",45841:"skein256-136",45842:"skein256-144",45843:"skein256-152",45844:"skein256-160",45845:"skein256-168",45846:"skein256-176",45847:"skein256-184",45848:"skein256-192",45849:"skein256-200",45850:"skein256-208",45851:"skein256-216",45852:"skein256-224",45853:"skein256-232",45854:"skein256-240",45855:"skein256-248",45856:"skein256-256",45857:"skein512-8",45858:"skein512-16",45859:"skein512-24",45860:"skein512-32",45861:"skein512-40",45862:"skein512-48",45863:"skein512-56",45864:"skein512-64",45865:"skein512-72",45866:"skein512-80",45867:"skein512-88",45868:"skein512-96",45869:"skein512-104",45870:"skein512-112",45871:"skein512-120",45872:"skein512-128",45873:"skein512-136",45874:"skein512-144",45875:"skein512-152",45876:"skein512-160",45877:"skein512-168",45878:"skein512-176",45879:"skein512-184",45880:"skein512-192",45881:"skein512-200",45882:"skein512-208",45883:"skein512-216",45884:"skein512-224",45885:"skein512-232",45886:"skein512-240",45887:"skein512-248",45888:"skein512-256",45889:"skein512-264",45890:"skein512-272",45891:"skein512-280",45892:"skein512-288",45893:"skein512-296",45894:"skein512-304",45895:"skein512-312",45896:"skein512-320",45897:"skein512-328",45898:"skein512-336",45899:"skein512-344",45900:"skein512-352",45901:"skein512-360",45902:"skein512-368",45903:"skein512-376",45904:"skein512-384",45905:"skein512-392",45906:"skein512-400",45907:"skein512-408",45908:"skein512-416",45909:"skein512-424",45910:"skein512-432",45911:"skein512-440",45912:"skein512-448",45913:"skein512-456",45914:"skein512-464",45915:"skein512-472",45916:"skein512-480",45917:"skein512-488",45918:"skein512-496",45919:"skein512-504",45920:"skein512-512",45921:"skein1024-8",45922:"skein1024-16",45923:"skein1024-24",45924:"skein1024-32",45925:"skein1024-40",45926:"skein1024-48",45927:"skein1024-56",45928:"skein1024-64",45929:"skein1024-72",45930:"skein1024-80",45931:"skein1024-88",45932:"skein1024-96",45933:"skein1024-104",45934:"skein1024-112",45935:"skein1024-120",45936:"skein1024-128",45937:"skein1024-136",45938:"skein1024-144",45939:"skein1024-152",45940:"skein1024-160",45941:"skein1024-168",45942:"skein1024-176",45943:"skein1024-184",45944:"skein1024-192",45945:"skein1024-200",45946:"skein1024-208",45947:"skein1024-216",45948:"skein1024-224",45949:"skein1024-232",45950:"skein1024-240",45951:"skein1024-248",45952:"skein1024-256",45953:"skein1024-264",45954:"skein1024-272",45955:"skein1024-280",45956:"skein1024-288",45957:"skein1024-296",45958:"skein1024-304",45959:"skein1024-312",45960:"skein1024-320",45961:"skein1024-328",45962:"skein1024-336",45963:"skein1024-344",45964:"skein1024-352",45965:"skein1024-360",45966:"skein1024-368",45967:"skein1024-376",45968:"skein1024-384",45969:"skein1024-392",45970:"skein1024-400",45971:"skein1024-408",45972:"skein1024-416",45973:"skein1024-424",45974:"skein1024-432",45975:"skein1024-440",45976:"skein1024-448",45977:"skein1024-456",45978:"skein1024-464",45979:"skein1024-472",45980:"skein1024-480",45981:"skein1024-488",45982:"skein1024-496",45983:"skein1024-504",45984:"skein1024-512",45985:"skein1024-520",45986:"skein1024-528",45987:"skein1024-536",45988:"skein1024-544",45989:"skein1024-552",45990:"skein1024-560",45991:"skein1024-568",45992:"skein1024-576",45993:"skein1024-584",45994:"skein1024-592",45995:"skein1024-600",45996:"skein1024-608",45997:"skein1024-616",45998:"skein1024-624",45999:"skein1024-632",46000:"skein1024-640",46001:"skein1024-648",46002:"skein1024-656",46003:"skein1024-664",46004:"skein1024-672",46005:"skein1024-680",46006:"skein1024-688",46007:"skein1024-696",46008:"skein1024-704",46009:"skein1024-712",46010:"skein1024-720",46011:"skein1024-728",46012:"skein1024-736",46013:"skein1024-744",46014:"skein1024-752",46015:"skein1024-760",46016:"skein1024-768",46017:"skein1024-776",46018:"skein1024-784",46019:"skein1024-792",46020:"skein1024-800",46021:"skein1024-808",46022:"skein1024-816",46023:"skein1024-824",46024:"skein1024-832",46025:"skein1024-840",46026:"skein1024-848",46027:"skein1024-856",46028:"skein1024-864",46029:"skein1024-872",46030:"skein1024-880",46031:"skein1024-888",46032:"skein1024-896",46033:"skein1024-904",46034:"skein1024-912",46035:"skein1024-920",46036:"skein1024-928",46037:"skein1024-936",46038:"skein1024-944",46039:"skein1024-952",46040:"skein1024-960",46041:"skein1024-968",46042:"skein1024-976",46043:"skein1024-984",46044:"skein1024-992",46045:"skein1024-1000",46046:"skein1024-1008",46047:"skein1024-1016",46048:"skein1024-1024",4:"ip4",41:"ip6",42:"ip6zone",6:"tcp",273:"udp",33:"dccp",132:"sctp",301:"udt",302:"utp",421:"p2p",480:"http",443:"https",460:"quic",477:"ws",478:"wss",444:"onion",445:"onion3",446:"garlic64",290:"p2p-circuit",53:"dns",54:"dns4",55:"dns6",56:"dnsaddr",479:"p2p-websocket-star",277:"p2p-stardust",275:"p2p-webrtc-star",276:"p2p-webrtc-direct",400:"unix",112:"dag-pb",113:"dag-cbor",297:"dag-json",120:"git-raw",144:"eth-block",145:"eth-block-list",146:"eth-tx-trie",147:"eth-tx",148:"eth-tx-receipt-trie",149:"eth-tx-receipt",150:"eth-state-trie",151:"eth-account-snapshot",152:"eth-storage-trie",176:"bitcoin-block",177:"bitcoin-tx",192:"zcash-block",193:"zcash-tx",208:"stellar-block",209:"stellar-tx",224:"decred-block",225:"decred-tx",240:"dash-block",241:"dash-tx",129:"leofcoin-block",130:"leofcoin-tx",131:"leofcoin-pr",123:"torrent-info",124:"torrent-file",237:"ed25519-pub",226:"ipld-ns",227:"ipfs-ns",228:"swarm-ns"})},function(e,n,i){"use strict";const t=i(104);var a={checkCIDComponents:function(e){if(null==e)return"null values are not valid CIDs";if(0!==e.version&&1!==e.version)return"Invalid version, must be a number equal to 1 or 0";if("string"!=typeof e.codec)return"codec must be string";if(!Buffer.isBuffer(e.multihash))return"multihash must be a Buffer";try{t.validate(e.multihash)}catch(e){let n=e.message;return n||(n="Multihash validation failed"),n}}};e.exports=a},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,i,c){return(0,s.validateApiKeys)(e,n),new Promise(function(p,u){var l=new o.default;l.append("file",i);var f="".concat(a.baseUrl,"/pinning/pinFileToIPFS");i instanceof r.default.Readable||u(new Error("readStream is not a readable stream")),c&&(c.pinataMetadata&&((0,s.validateMetadata)(c.pinataMetadata),l.append("pinataMetadata",JSON.stringify(c.pinataMetadata))),c.pinataOptions&&((0,s.validatePinataOptions)(c.pinataOptions),l.append("pinataOptions",JSON.stringify(c.pinataOptions)))),t.default.post(f,l,{withCredentials:!0,headers:{"Content-type":"multipart/form-data; boundary= ".concat(l._boundary),pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&u(new Error("unknown server response while pinning File to IPFS: ".concat(e))),p(e.data)}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?u(new Error(e.response.data.error)):u(e)})})};var t=c(i(30)),a=i(31),o=c(i(419)),r=c(i(70)),s=i(32);function c(e){return e&&e.__esModule?e:{default:e}}e.exports=n.default},function(e,n,i){var t=i(420),a=i(71),o=i(156),r=i(101),s=i(102),c=i(103).parse,p=i(423),u=i(424),l=i(427),f=i(431);function d(e){if(!(this instanceof d))return new d;for(var n in this._overheadLength=0,this._valueLength=0,this._valuesToMeasure=[],t.call(this),e=e||{})this[n]=e[n]}e.exports=d,a.inherits(d,t),d.LINE_BREAK="\r\n",d.DEFAULT_CONTENT_TYPE="application/octet-stream",d.prototype.append=function(e,n,i){"string"==typeof(i=i||{})&&(i={filename:i});var o=t.prototype.append.bind(this);if("number"==typeof n&&(n=""+n),a.isArray(n))this._error(new Error("Arrays are not supported."));else{var r=this._multiPartHeader(e,n,i),s=this._multiPartFooter();o(r),o(n),o(s),this._trackLength(r,n,i)}},d.prototype._trackLength=function(e,n,i){var t=0;null!=i.knownLength?t+=+i.knownLength:Buffer.isBuffer(n)?t=n.length:"string"==typeof n&&(t=Buffer.byteLength(n)),this._valueLength+=t,this._overheadLength+=Buffer.byteLength(e)+d.LINE_BREAK.length,n&&(n.path||n.readable&&n.hasOwnProperty("httpVersion"))&&(i.knownLength||this._valuesToMeasure.push(n))},d.prototype._lengthRetriever=function(e,n){e.hasOwnProperty("fd")?null!=e.end&&e.end!=1/0&&null!=e.start?n(null,e.end+1-(e.start?e.start:0)):p.stat(e.path,function(i,t){var a;i?n(i):(a=t.size-(e.start?e.start:0),n(null,a))}):e.hasOwnProperty("httpVersion")?n(null,+e.headers["content-length"]):e.hasOwnProperty("httpModule")?(e.on("response",function(i){e.pause(),n(null,+i.headers["content-length"])}),e.resume()):n("Unknown stream")},d.prototype._multiPartHeader=function(e,n,i){if("string"==typeof i.header)return i.header;var t,a=this._getContentDisposition(n,i),o=this._getContentType(n,i),r="",s={"Content-Disposition":["form-data",'name="'+e+'"'].concat(a||[]),"Content-Type":[].concat(o||[])};for(var c in"object"==typeof i.header&&f(s,i.header),s)s.hasOwnProperty(c)&&null!=(t=s[c])&&(Array.isArray(t)||(t=[t]),t.length&&(r+=c+": "+t.join("; ")+d.LINE_BREAK));return"--"+this.getBoundary()+d.LINE_BREAK+r+d.LINE_BREAK},d.prototype._getContentDisposition=function(e,n){var i,t;return"string"==typeof n.filepath?i=o.normalize(n.filepath).replace(/\\/g,"/"):n.filename||e.name||e.path?i=o.basename(n.filename||e.name||e.path):e.readable&&e.hasOwnProperty("httpVersion")&&(i=o.basename(e.client._httpMessage.path)),i&&(t='filename="'+i+'"'),t},d.prototype._getContentType=function(e,n){var i=n.contentType;return!i&&e.name&&(i=u.lookup(e.name)),!i&&e.path&&(i=u.lookup(e.path)),!i&&e.readable&&e.hasOwnProperty("httpVersion")&&(i=e.headers["content-type"]),i||!n.filepath&&!n.filename||(i=u.lookup(n.filepath||n.filename)),i||"object"!=typeof e||(i=d.DEFAULT_CONTENT_TYPE),i},d.prototype._multiPartFooter=function(){return function(e){var n=d.LINE_BREAK;0===this._streams.length&&(n+=this._lastBoundary()),e(n)}.bind(this)},d.prototype._lastBoundary=function(){return"--"+this.getBoundary()+"--"+d.LINE_BREAK},d.prototype.getHeaders=function(e){var n,i={"content-type":"multipart/form-data; boundary="+this.getBoundary()};for(n in e)e.hasOwnProperty(n)&&(i[n.toLowerCase()]=e[n]);return i},d.prototype.getBoundary=function(){return this._boundary||this._generateBoundary(),this._boundary},d.prototype._generateBoundary=function(){for(var e="--------------------------",n=0;n<24;n++)e+=Math.floor(10*Math.random()).toString(16);this._boundary=e},d.prototype.getLengthSync=function(){var e=this._overheadLength+this._valueLength;return this._streams.length&&(e+=this._lastBoundary().length),this.hasKnownLength()||this._error(new Error("Cannot calculate proper length in synchronous way.")),e},d.prototype.hasKnownLength=function(){var e=!0;return this._valuesToMeasure.length&&(e=!1),e},d.prototype.getLength=function(e){var n=this._overheadLength+this._valueLength;this._streams.length&&(n+=this._lastBoundary().length),this._valuesToMeasure.length?l.parallel(this._valuesToMeasure,this._lengthRetriever,function(i,t){i?e(i):(t.forEach(function(e){n+=e}),e(null,n))}):process.nextTick(e.bind(this,null,n))},d.prototype.submit=function(e,n){var i,t,a={method:"post"};return"string"==typeof e?(e=c(e),t=f({port:e.port,path:e.pathname,host:e.hostname,protocol:e.protocol},a)):(t=f(e,a)).port||(t.port="https:"==t.protocol?443:80),t.headers=this.getHeaders(e.headers),i="https:"==t.protocol?s.request(t):r.request(t),this.getLength(function(e,t){e?this._error(e):(i.setHeader("Content-Length",t),this.pipe(i),n&&(i.on("error",n),i.on("response",n.bind(this,null))))}.bind(this)),i},d.prototype._error=function(e){this.error||(this.error=e,this.pause(),this.emit("error",e))},d.prototype.toString=function(){return"[object FormData]"}},function(e,n,i){var t=i(71),a=i(70).Stream,o=i(421),r=i(422);function s(){this.writable=!1,this.readable=!0,this.dataSize=0,this.maxDataSize=2097152,this.pauseStreams=!0,this._released=!1,this._streams=[],this._currentStream=null}e.exports=s,t.inherits(s,a),s.create=function(e){var n=new this;for(var i in e=e||{})n[i]=e[i];return n},s.isStreamLike=function(e){return"function"!=typeof e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e&&!Buffer.isBuffer(e)},s.prototype.append=function(e){if(s.isStreamLike(e)){if(!(e instanceof o)){var n=o.create(e,{maxDataSize:1/0,pauseStream:this.pauseStreams});e.on("data",this._checkDataSize.bind(this)),e=n}this._handleErrors(e),this.pauseStreams&&e.pause()}return this._streams.push(e),this},s.prototype.pipe=function(e,n){return a.prototype.pipe.call(this,e,n),this.resume(),e},s.prototype._getNext=function(){this._currentStream=null;var e=this._streams.shift();void 0!==e?"function"==typeof e?e(function(e){s.isStreamLike(e)&&(e.on("data",this._checkDataSize.bind(this)),this._handleErrors(e)),r(this._pipeNext.bind(this,e))}.bind(this)):this._pipeNext(e):this.end()},s.prototype._pipeNext=function(e){if(this._currentStream=e,s.isStreamLike(e))return e.on("end",this._getNext.bind(this)),void e.pipe(this,{end:!1});var n=e;this.write(n),this._getNext()},s.prototype._handleErrors=function(e){var n=this;e.on("error",function(e){n._emitError(e)})},s.prototype.write=function(e){this.emit("data",e)},s.prototype.pause=function(){this.pauseStreams&&(this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.pause&&this._currentStream.pause(),this.emit("pause"))},s.prototype.resume=function(){this._released||(this._released=!0,this.writable=!0,this._getNext()),this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.resume&&this._currentStream.resume(),this.emit("resume")},s.prototype.end=function(){this._reset(),this.emit("end")},s.prototype.destroy=function(){this._reset(),this.emit("close")},s.prototype._reset=function(){this.writable=!1,this._streams=[],this._currentStream=null},s.prototype._checkDataSize=function(){if(this._updateDataSize(),!(this.dataSize<=this.maxDataSize)){var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(e))}},s.prototype._updateDataSize=function(){this.dataSize=0;var e=this;this._streams.forEach(function(n){n.dataSize&&(e.dataSize+=n.dataSize)}),this._currentStream&&this._currentStream.dataSize&&(this.dataSize+=this._currentStream.dataSize)},s.prototype._emitError=function(e){this._reset(),this.emit("error",e)}},function(e,n,i){var t=i(70).Stream,a=i(71);function o(){this.source=null,this.dataSize=0,this.maxDataSize=1048576,this.pauseStream=!0,this._maxDataSizeExceeded=!1,this._released=!1,this._bufferedEvents=[]}e.exports=o,a.inherits(o,t),o.create=function(e,n){var i=new this;for(var t in n=n||{})i[t]=n[t];i.source=e;var a=e.emit;return e.emit=function(){return i._handleEmit(arguments),a.apply(e,arguments)},e.on("error",function(){}),i.pauseStream&&e.pause(),i},Object.defineProperty(o.prototype,"readable",{configurable:!0,enumerable:!0,get:function(){return this.source.readable}}),o.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)},o.prototype.resume=function(){this._released||this.release(),this.source.resume()},o.prototype.pause=function(){this.source.pause()},o.prototype.release=function(){this._released=!0,this._bufferedEvents.forEach(function(e){this.emit.apply(this,e)}.bind(this)),this._bufferedEvents=[]},o.prototype.pipe=function(){var e=t.prototype.pipe.apply(this,arguments);return this.resume(),e},o.prototype._handleEmit=function(e){this._released?this.emit.apply(this,e):("data"===e[0]&&(this.dataSize+=e[1].length,this._checkIfMaxDataSizeExceeded()),this._bufferedEvents.push(e))},o.prototype._checkIfMaxDataSizeExceeded=function(){if(!(this._maxDataSizeExceeded||this.dataSize<=this.maxDataSize)){this._maxDataSizeExceeded=!0;var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(e))}}},function(e,n){e.exports=function(e){var n="function"==typeof setImmediate?setImmediate:"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:null;n?n(e):setTimeout(e,0)}},function(e,n){e.exports=require("fs")},function(e,n,i){"use strict";
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var t,a,o,r=i(425),s=i(156).extname,c=/^\s*([^;\s]*)(?:;|\s|$)/,p=/^text\//i;function u(e){if(!e||"string"!=typeof e)return!1;var n=c.exec(e),i=n&&r[n[1].toLowerCase()];return i&&i.charset?i.charset:!(!n||!p.test(n[1]))&&"UTF-8"}n.charset=u,n.charsets={lookup:u},n.contentType=function(e){if(!e||"string"!=typeof e)return!1;var i=-1===e.indexOf("/")?n.lookup(e):e;if(!i)return!1;if(-1===i.indexOf("charset")){var t=n.charset(i);t&&(i+="; charset="+t.toLowerCase())}return i},n.extension=function(e){if(!e||"string"!=typeof e)return!1;var i=c.exec(e),t=i&&n.extensions[i[1].toLowerCase()];if(!t||!t.length)return!1;return t[0]},n.extensions=Object.create(null),n.lookup=function(e){if(!e||"string"!=typeof e)return!1;var i=s("x."+e).toLowerCase().substr(1);if(!i)return!1;return n.types[i]||!1},n.types=Object.create(null),t=n.extensions,a=n.types,o=["nginx","apache",void 0,"iana"],Object.keys(r).forEach(function(e){var n=r[e],i=n.extensions;if(i&&i.length){t[e]=i;for(var s=0;s<i.length;s++){var c=i[s];if(a[c]){var p=o.indexOf(r[a[c]].source),u=o.indexOf(n.source);if("application/octet-stream"!==a[c]&&(p>u||p===u&&"application/"===a[c].substr(0,12)))continue}a[c]=e}}})},function(e,n,i){
/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */
e.exports=i(426)},function(e){e.exports={"application/1d-interleaved-parityfec":{source:"iana"},"application/3gpdash-qoe-report+xml":{source:"iana",compressible:!0},"application/3gpp-ims+xml":{source:"iana",compressible:!0},"application/a2l":{source:"iana"},"application/activemessage":{source:"iana"},"application/activity+json":{source:"iana",compressible:!0},"application/alto-costmap+json":{source:"iana",compressible:!0},"application/alto-costmapfilter+json":{source:"iana",compressible:!0},"application/alto-directory+json":{source:"iana",compressible:!0},"application/alto-endpointcost+json":{source:"iana",compressible:!0},"application/alto-endpointcostparams+json":{source:"iana",compressible:!0},"application/alto-endpointprop+json":{source:"iana",compressible:!0},"application/alto-endpointpropparams+json":{source:"iana",compressible:!0},"application/alto-error+json":{source:"iana",compressible:!0},"application/alto-networkmap+json":{source:"iana",compressible:!0},"application/alto-networkmapfilter+json":{source:"iana",compressible:!0},"application/aml":{source:"iana"},"application/andrew-inset":{source:"iana",extensions:["ez"]},"application/applefile":{source:"iana"},"application/applixware":{source:"apache",extensions:["aw"]},"application/atf":{source:"iana"},"application/atfx":{source:"iana"},"application/atom+xml":{source:"iana",compressible:!0,extensions:["atom"]},"application/atomcat+xml":{source:"iana",compressible:!0,extensions:["atomcat"]},"application/atomdeleted+xml":{source:"iana",compressible:!0},"application/atomicmail":{source:"iana"},"application/atomsvc+xml":{source:"iana",compressible:!0,extensions:["atomsvc"]},"application/atxml":{source:"iana"},"application/auth-policy+xml":{source:"iana",compressible:!0},"application/bacnet-xdd+zip":{source:"iana",compressible:!1},"application/batch-smtp":{source:"iana"},"application/bdoc":{compressible:!1,extensions:["bdoc"]},"application/beep+xml":{source:"iana",compressible:!0},"application/calendar+json":{source:"iana",compressible:!0},"application/calendar+xml":{source:"iana",compressible:!0},"application/call-completion":{source:"iana"},"application/cals-1840":{source:"iana"},"application/cbor":{source:"iana"},"application/cccex":{source:"iana"},"application/ccmp+xml":{source:"iana",compressible:!0},"application/ccxml+xml":{source:"iana",compressible:!0,extensions:["ccxml"]},"application/cdfx+xml":{source:"iana",compressible:!0},"application/cdmi-capability":{source:"iana",extensions:["cdmia"]},"application/cdmi-container":{source:"iana",extensions:["cdmic"]},"application/cdmi-domain":{source:"iana",extensions:["cdmid"]},"application/cdmi-object":{source:"iana",extensions:["cdmio"]},"application/cdmi-queue":{source:"iana",extensions:["cdmiq"]},"application/cdni":{source:"iana"},"application/cea":{source:"iana"},"application/cea-2018+xml":{source:"iana",compressible:!0},"application/cellml+xml":{source:"iana",compressible:!0},"application/cfw":{source:"iana"},"application/clue_info+xml":{source:"iana",compressible:!0},"application/cms":{source:"iana"},"application/cnrp+xml":{source:"iana",compressible:!0},"application/coap-group+json":{source:"iana",compressible:!0},"application/coap-payload":{source:"iana"},"application/commonground":{source:"iana"},"application/conference-info+xml":{source:"iana",compressible:!0},"application/cose":{source:"iana"},"application/cose-key":{source:"iana"},"application/cose-key-set":{source:"iana"},"application/cpl+xml":{source:"iana",compressible:!0},"application/csrattrs":{source:"iana"},"application/csta+xml":{source:"iana",compressible:!0},"application/cstadata+xml":{source:"iana",compressible:!0},"application/csvm+json":{source:"iana",compressible:!0},"application/cu-seeme":{source:"apache",extensions:["cu"]},"application/cwt":{source:"iana"},"application/cybercash":{source:"iana"},"application/dart":{compressible:!0},"application/dash+xml":{source:"iana",compressible:!0,extensions:["mpd"]},"application/dashdelta":{source:"iana"},"application/davmount+xml":{source:"iana",compressible:!0,extensions:["davmount"]},"application/dca-rft":{source:"iana"},"application/dcd":{source:"iana"},"application/dec-dx":{source:"iana"},"application/dialog-info+xml":{source:"iana",compressible:!0},"application/dicom":{source:"iana"},"application/dicom+json":{source:"iana",compressible:!0},"application/dicom+xml":{source:"iana",compressible:!0},"application/dii":{source:"iana"},"application/dit":{source:"iana"},"application/dns":{source:"iana"},"application/dns+json":{source:"iana",compressible:!0},"application/dns-message":{source:"iana"},"application/docbook+xml":{source:"apache",compressible:!0,extensions:["dbk"]},"application/dskpp+xml":{source:"iana",compressible:!0},"application/dssc+der":{source:"iana",extensions:["dssc"]},"application/dssc+xml":{source:"iana",compressible:!0,extensions:["xdssc"]},"application/dvcs":{source:"iana"},"application/ecmascript":{source:"iana",compressible:!0,extensions:["ecma","es"]},"application/edi-consent":{source:"iana"},"application/edi-x12":{source:"iana",compressible:!1},"application/edifact":{source:"iana",compressible:!1},"application/efi":{source:"iana"},"application/emergencycalldata.comment+xml":{source:"iana",compressible:!0},"application/emergencycalldata.control+xml":{source:"iana",compressible:!0},"application/emergencycalldata.deviceinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.ecall.msd":{source:"iana"},"application/emergencycalldata.providerinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.serviceinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.subscriberinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.veds+xml":{source:"iana",compressible:!0},"application/emma+xml":{source:"iana",compressible:!0,extensions:["emma"]},"application/emotionml+xml":{source:"iana",compressible:!0},"application/encaprtp":{source:"iana"},"application/epp+xml":{source:"iana",compressible:!0},"application/epub+zip":{source:"iana",compressible:!1,extensions:["epub"]},"application/eshop":{source:"iana"},"application/exi":{source:"iana",extensions:["exi"]},"application/fastinfoset":{source:"iana"},"application/fastsoap":{source:"iana"},"application/fdt+xml":{source:"iana",compressible:!0},"application/fhir+json":{source:"iana",compressible:!0},"application/fhir+xml":{source:"iana",compressible:!0},"application/fido.trusted-apps+json":{compressible:!0},"application/fits":{source:"iana"},"application/font-sfnt":{source:"iana"},"application/font-tdpfr":{source:"iana",extensions:["pfr"]},"application/font-woff":{source:"iana",compressible:!1},"application/framework-attributes+xml":{source:"iana",compressible:!0},"application/geo+json":{source:"iana",compressible:!0,extensions:["geojson"]},"application/geo+json-seq":{source:"iana"},"application/geopackage+sqlite3":{source:"iana"},"application/geoxacml+xml":{source:"iana",compressible:!0},"application/gltf-buffer":{source:"iana"},"application/gml+xml":{source:"iana",compressible:!0,extensions:["gml"]},"application/gpx+xml":{source:"apache",compressible:!0,extensions:["gpx"]},"application/gxf":{source:"apache",extensions:["gxf"]},"application/gzip":{source:"iana",compressible:!1,extensions:["gz"]},"application/h224":{source:"iana"},"application/held+xml":{source:"iana",compressible:!0},"application/hjson":{extensions:["hjson"]},"application/http":{source:"iana"},"application/hyperstudio":{source:"iana",extensions:["stk"]},"application/ibe-key-request+xml":{source:"iana",compressible:!0},"application/ibe-pkg-reply+xml":{source:"iana",compressible:!0},"application/ibe-pp-data":{source:"iana"},"application/iges":{source:"iana"},"application/im-iscomposing+xml":{source:"iana",compressible:!0},"application/index":{source:"iana"},"application/index.cmd":{source:"iana"},"application/index.obj":{source:"iana"},"application/index.response":{source:"iana"},"application/index.vnd":{source:"iana"},"application/inkml+xml":{source:"iana",compressible:!0,extensions:["ink","inkml"]},"application/iotp":{source:"iana"},"application/ipfix":{source:"iana",extensions:["ipfix"]},"application/ipp":{source:"iana"},"application/isup":{source:"iana"},"application/its+xml":{source:"iana",compressible:!0},"application/java-archive":{source:"apache",compressible:!1,extensions:["jar","war","ear"]},"application/java-serialized-object":{source:"apache",compressible:!1,extensions:["ser"]},"application/java-vm":{source:"apache",compressible:!1,extensions:["class"]},"application/javascript":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["js","mjs"]},"application/jf2feed+json":{source:"iana",compressible:!0},"application/jose":{source:"iana"},"application/jose+json":{source:"iana",compressible:!0},"application/jrd+json":{source:"iana",compressible:!0},"application/json":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["json","map"]},"application/json-patch+json":{source:"iana",compressible:!0},"application/json-seq":{source:"iana"},"application/json5":{extensions:["json5"]},"application/jsonml+json":{source:"apache",compressible:!0,extensions:["jsonml"]},"application/jwk+json":{source:"iana",compressible:!0},"application/jwk-set+json":{source:"iana",compressible:!0},"application/jwt":{source:"iana"},"application/kpml-request+xml":{source:"iana",compressible:!0},"application/kpml-response+xml":{source:"iana",compressible:!0},"application/ld+json":{source:"iana",compressible:!0,extensions:["jsonld"]},"application/lgr+xml":{source:"iana",compressible:!0},"application/link-format":{source:"iana"},"application/load-control+xml":{source:"iana",compressible:!0},"application/lost+xml":{source:"iana",compressible:!0,extensions:["lostxml"]},"application/lostsync+xml":{source:"iana",compressible:!0},"application/lxf":{source:"iana"},"application/mac-binhex40":{source:"iana",extensions:["hqx"]},"application/mac-compactpro":{source:"apache",extensions:["cpt"]},"application/macwriteii":{source:"iana"},"application/mads+xml":{source:"iana",compressible:!0,extensions:["mads"]},"application/manifest+json":{charset:"UTF-8",compressible:!0,extensions:["webmanifest"]},"application/marc":{source:"iana",extensions:["mrc"]},"application/marcxml+xml":{source:"iana",compressible:!0,extensions:["mrcx"]},"application/mathematica":{source:"iana",extensions:["ma","nb","mb"]},"application/mathml+xml":{source:"iana",compressible:!0,extensions:["mathml"]},"application/mathml-content+xml":{source:"iana",compressible:!0},"application/mathml-presentation+xml":{source:"iana",compressible:!0},"application/mbms-associated-procedure-description+xml":{source:"iana",compressible:!0},"application/mbms-deregister+xml":{source:"iana",compressible:!0},"application/mbms-envelope+xml":{source:"iana",compressible:!0},"application/mbms-msk+xml":{source:"iana",compressible:!0},"application/mbms-msk-response+xml":{source:"iana",compressible:!0},"application/mbms-protection-description+xml":{source:"iana",compressible:!0},"application/mbms-reception-report+xml":{source:"iana",compressible:!0},"application/mbms-register+xml":{source:"iana",compressible:!0},"application/mbms-register-response+xml":{source:"iana",compressible:!0},"application/mbms-schedule+xml":{source:"iana",compressible:!0},"application/mbms-user-service-description+xml":{source:"iana",compressible:!0},"application/mbox":{source:"iana",extensions:["mbox"]},"application/media-policy-dataset+xml":{source:"iana",compressible:!0},"application/media_control+xml":{source:"iana",compressible:!0},"application/mediaservercontrol+xml":{source:"iana",compressible:!0,extensions:["mscml"]},"application/merge-patch+json":{source:"iana",compressible:!0},"application/metalink+xml":{source:"apache",compressible:!0,extensions:["metalink"]},"application/metalink4+xml":{source:"iana",compressible:!0,extensions:["meta4"]},"application/mets+xml":{source:"iana",compressible:!0,extensions:["mets"]},"application/mf4":{source:"iana"},"application/mikey":{source:"iana"},"application/mmt-usd+xml":{source:"iana",compressible:!0},"application/mods+xml":{source:"iana",compressible:!0,extensions:["mods"]},"application/moss-keys":{source:"iana"},"application/moss-signature":{source:"iana"},"application/mosskey-data":{source:"iana"},"application/mosskey-request":{source:"iana"},"application/mp21":{source:"iana",extensions:["m21","mp21"]},"application/mp4":{source:"iana",extensions:["mp4s","m4p"]},"application/mpeg4-generic":{source:"iana"},"application/mpeg4-iod":{source:"iana"},"application/mpeg4-iod-xmt":{source:"iana"},"application/mrb-consumer+xml":{source:"iana",compressible:!0},"application/mrb-publish+xml":{source:"iana",compressible:!0},"application/msc-ivr+xml":{source:"iana",compressible:!0},"application/msc-mixer+xml":{source:"iana",compressible:!0},"application/msword":{source:"iana",compressible:!1,extensions:["doc","dot"]},"application/mud+json":{source:"iana",compressible:!0},"application/mxf":{source:"iana",extensions:["mxf"]},"application/n-quads":{source:"iana"},"application/n-triples":{source:"iana"},"application/nasdata":{source:"iana"},"application/news-checkgroups":{source:"iana"},"application/news-groupinfo":{source:"iana"},"application/news-transmission":{source:"iana"},"application/nlsml+xml":{source:"iana",compressible:!0},"application/node":{source:"iana"},"application/nss":{source:"iana"},"application/ocsp-request":{source:"iana"},"application/ocsp-response":{source:"iana"},"application/octet-stream":{source:"iana",compressible:!1,extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{source:"iana",extensions:["oda"]},"application/odx":{source:"iana"},"application/oebps-package+xml":{source:"iana",compressible:!0,extensions:["opf"]},"application/ogg":{source:"iana",compressible:!1,extensions:["ogx"]},"application/omdoc+xml":{source:"apache",compressible:!0,extensions:["omdoc"]},"application/onenote":{source:"apache",extensions:["onetoc","onetoc2","onetmp","onepkg"]},"application/oxps":{source:"iana",extensions:["oxps"]},"application/p2p-overlay+xml":{source:"iana",compressible:!0},"application/parityfec":{source:"iana"},"application/passport":{source:"iana"},"application/patch-ops-error+xml":{source:"iana",compressible:!0,extensions:["xer"]},"application/pdf":{source:"iana",compressible:!1,extensions:["pdf"]},"application/pdx":{source:"iana"},"application/pgp-encrypted":{source:"iana",compressible:!1,extensions:["pgp"]},"application/pgp-keys":{source:"iana"},"application/pgp-signature":{source:"iana",extensions:["asc","sig"]},"application/pics-rules":{source:"apache",extensions:["prf"]},"application/pidf+xml":{source:"iana",compressible:!0},"application/pidf-diff+xml":{source:"iana",compressible:!0},"application/pkcs10":{source:"iana",extensions:["p10"]},"application/pkcs12":{source:"iana"},"application/pkcs7-mime":{source:"iana",extensions:["p7m","p7c"]},"application/pkcs7-signature":{source:"iana",extensions:["p7s"]},"application/pkcs8":{source:"iana",extensions:["p8"]},"application/pkcs8-encrypted":{source:"iana"},"application/pkix-attr-cert":{source:"iana",extensions:["ac"]},"application/pkix-cert":{source:"iana",extensions:["cer"]},"application/pkix-crl":{source:"iana",extensions:["crl"]},"application/pkix-pkipath":{source:"iana",extensions:["pkipath"]},"application/pkixcmp":{source:"iana",extensions:["pki"]},"application/pls+xml":{source:"iana",compressible:!0,extensions:["pls"]},"application/poc-settings+xml":{source:"iana",compressible:!0},"application/postscript":{source:"iana",compressible:!0,extensions:["ai","eps","ps"]},"application/ppsp-tracker+json":{source:"iana",compressible:!0},"application/problem+json":{source:"iana",compressible:!0},"application/problem+xml":{source:"iana",compressible:!0},"application/provenance+xml":{source:"iana",compressible:!0},"application/prs.alvestrand.titrax-sheet":{source:"iana"},"application/prs.cww":{source:"iana",extensions:["cww"]},"application/prs.hpub+zip":{source:"iana",compressible:!1},"application/prs.nprend":{source:"iana"},"application/prs.plucker":{source:"iana"},"application/prs.rdf-xml-crypt":{source:"iana"},"application/prs.xsf+xml":{source:"iana",compressible:!0},"application/pskc+xml":{source:"iana",compressible:!0,extensions:["pskcxml"]},"application/qsig":{source:"iana"},"application/raml+yaml":{compressible:!0,extensions:["raml"]},"application/raptorfec":{source:"iana"},"application/rdap+json":{source:"iana",compressible:!0},"application/rdf+xml":{source:"iana",compressible:!0,extensions:["rdf","owl"]},"application/reginfo+xml":{source:"iana",compressible:!0,extensions:["rif"]},"application/relax-ng-compact-syntax":{source:"iana",extensions:["rnc"]},"application/remote-printing":{source:"iana"},"application/reputon+json":{source:"iana",compressible:!0},"application/resource-lists+xml":{source:"iana",compressible:!0,extensions:["rl"]},"application/resource-lists-diff+xml":{source:"iana",compressible:!0,extensions:["rld"]},"application/rfc+xml":{source:"iana",compressible:!0},"application/riscos":{source:"iana"},"application/rlmi+xml":{source:"iana",compressible:!0},"application/rls-services+xml":{source:"iana",compressible:!0,extensions:["rs"]},"application/route-apd+xml":{source:"iana",compressible:!0},"application/route-s-tsid+xml":{source:"iana",compressible:!0},"application/route-usd+xml":{source:"iana",compressible:!0},"application/rpki-ghostbusters":{source:"iana",extensions:["gbr"]},"application/rpki-manifest":{source:"iana",extensions:["mft"]},"application/rpki-publication":{source:"iana"},"application/rpki-roa":{source:"iana",extensions:["roa"]},"application/rpki-updown":{source:"iana"},"application/rsd+xml":{source:"apache",compressible:!0,extensions:["rsd"]},"application/rss+xml":{source:"apache",compressible:!0,extensions:["rss"]},"application/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"application/rtploopback":{source:"iana"},"application/rtx":{source:"iana"},"application/samlassertion+xml":{source:"iana",compressible:!0},"application/samlmetadata+xml":{source:"iana",compressible:!0},"application/sbml+xml":{source:"iana",compressible:!0,extensions:["sbml"]},"application/scaip+xml":{source:"iana",compressible:!0},"application/scim+json":{source:"iana",compressible:!0},"application/scvp-cv-request":{source:"iana",extensions:["scq"]},"application/scvp-cv-response":{source:"iana",extensions:["scs"]},"application/scvp-vp-request":{source:"iana",extensions:["spq"]},"application/scvp-vp-response":{source:"iana",extensions:["spp"]},"application/sdp":{source:"iana",extensions:["sdp"]},"application/secevent+jwt":{source:"iana"},"application/senml+cbor":{source:"iana"},"application/senml+json":{source:"iana",compressible:!0},"application/senml+xml":{source:"iana",compressible:!0},"application/senml-exi":{source:"iana"},"application/sensml+cbor":{source:"iana"},"application/sensml+json":{source:"iana",compressible:!0},"application/sensml+xml":{source:"iana",compressible:!0},"application/sensml-exi":{source:"iana"},"application/sep+xml":{source:"iana",compressible:!0},"application/sep-exi":{source:"iana"},"application/session-info":{source:"iana"},"application/set-payment":{source:"iana"},"application/set-payment-initiation":{source:"iana",extensions:["setpay"]},"application/set-registration":{source:"iana"},"application/set-registration-initiation":{source:"iana",extensions:["setreg"]},"application/sgml":{source:"iana"},"application/sgml-open-catalog":{source:"iana"},"application/shf+xml":{source:"iana",compressible:!0,extensions:["shf"]},"application/sieve":{source:"iana"},"application/simple-filter+xml":{source:"iana",compressible:!0},"application/simple-message-summary":{source:"iana"},"application/simplesymbolcontainer":{source:"iana"},"application/slate":{source:"iana"},"application/smil":{source:"iana"},"application/smil+xml":{source:"iana",compressible:!0,extensions:["smi","smil"]},"application/smpte336m":{source:"iana"},"application/soap+fastinfoset":{source:"iana"},"application/soap+xml":{source:"iana",compressible:!0},"application/sparql-query":{source:"iana",extensions:["rq"]},"application/sparql-results+xml":{source:"iana",compressible:!0,extensions:["srx"]},"application/spirits-event+xml":{source:"iana",compressible:!0},"application/sql":{source:"iana"},"application/srgs":{source:"iana",extensions:["gram"]},"application/srgs+xml":{source:"iana",compressible:!0,extensions:["grxml"]},"application/sru+xml":{source:"iana",compressible:!0,extensions:["sru"]},"application/ssdl+xml":{source:"apache",compressible:!0,extensions:["ssdl"]},"application/ssml+xml":{source:"iana",compressible:!0,extensions:["ssml"]},"application/stix+json":{source:"iana",compressible:!0},"application/tamp-apex-update":{source:"iana"},"application/tamp-apex-update-confirm":{source:"iana"},"application/tamp-community-update":{source:"iana"},"application/tamp-community-update-confirm":{source:"iana"},"application/tamp-error":{source:"iana"},"application/tamp-sequence-adjust":{source:"iana"},"application/tamp-sequence-adjust-confirm":{source:"iana"},"application/tamp-status-query":{source:"iana"},"application/tamp-status-response":{source:"iana"},"application/tamp-update":{source:"iana"},"application/tamp-update-confirm":{source:"iana"},"application/tar":{compressible:!0},"application/taxii+json":{source:"iana",compressible:!0},"application/tei+xml":{source:"iana",compressible:!0,extensions:["tei","teicorpus"]},"application/thraud+xml":{source:"iana",compressible:!0,extensions:["tfi"]},"application/timestamp-query":{source:"iana"},"application/timestamp-reply":{source:"iana"},"application/timestamped-data":{source:"iana",extensions:["tsd"]},"application/tlsrpt+gzip":{source:"iana"},"application/tlsrpt+json":{source:"iana",compressible:!0},"application/tnauthlist":{source:"iana"},"application/trickle-ice-sdpfrag":{source:"iana"},"application/trig":{source:"iana"},"application/ttml+xml":{source:"iana",compressible:!0},"application/tve-trigger":{source:"iana"},"application/ulpfec":{source:"iana"},"application/urc-grpsheet+xml":{source:"iana",compressible:!0},"application/urc-ressheet+xml":{source:"iana",compressible:!0},"application/urc-targetdesc+xml":{source:"iana",compressible:!0},"application/urc-uisocketdesc+xml":{source:"iana",compressible:!0},"application/vcard+json":{source:"iana",compressible:!0},"application/vcard+xml":{source:"iana",compressible:!0},"application/vemmi":{source:"iana"},"application/vividence.scriptfile":{source:"apache"},"application/vnd.1000minds.decision-model+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-prose+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-prose-pc3ch+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-v2x-local-service-information":{source:"iana"},"application/vnd.3gpp.access-transfer-events+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.bsf+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.gmop+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mc-signalling-ear":{source:"iana"},"application/vnd.3gpp.mcdata-payload":{source:"iana"},"application/vnd.3gpp.mcdata-signalling":{source:"iana"},"application/vnd.3gpp.mcptt-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-floor-request+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-location-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-signed+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mid-call+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.pic-bw-large":{source:"iana",extensions:["plb"]},"application/vnd.3gpp.pic-bw-small":{source:"iana",extensions:["psb"]},"application/vnd.3gpp.pic-bw-var":{source:"iana",extensions:["pvb"]},"application/vnd.3gpp.sms":{source:"iana"},"application/vnd.3gpp.sms+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.srvcc-ext+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.srvcc-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.state-and-event-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.ussd+xml":{source:"iana",compressible:!0},"application/vnd.3gpp2.bcmcsinfo+xml":{source:"iana",compressible:!0},"application/vnd.3gpp2.sms":{source:"iana"},"application/vnd.3gpp2.tcap":{source:"iana",extensions:["tcap"]},"application/vnd.3lightssoftware.imagescal":{source:"iana"},"application/vnd.3m.post-it-notes":{source:"iana",extensions:["pwn"]},"application/vnd.accpac.simply.aso":{source:"iana",extensions:["aso"]},"application/vnd.accpac.simply.imp":{source:"iana",extensions:["imp"]},"application/vnd.acucobol":{source:"iana",extensions:["acu"]},"application/vnd.acucorp":{source:"iana",extensions:["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{source:"apache",compressible:!1,extensions:["air"]},"application/vnd.adobe.flash.movie":{source:"iana"},"application/vnd.adobe.formscentral.fcdt":{source:"iana",extensions:["fcdt"]},"application/vnd.adobe.fxp":{source:"iana",extensions:["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{source:"iana"},"application/vnd.adobe.xdp+xml":{source:"iana",compressible:!0,extensions:["xdp"]},"application/vnd.adobe.xfdf":{source:"iana",extensions:["xfdf"]},"application/vnd.aether.imp":{source:"iana"},"application/vnd.afpc.afplinedata":{source:"iana"},"application/vnd.afpc.modca":{source:"iana"},"application/vnd.ah-barcode":{source:"iana"},"application/vnd.ahead.space":{source:"iana",extensions:["ahead"]},"application/vnd.airzip.filesecure.azf":{source:"iana",extensions:["azf"]},"application/vnd.airzip.filesecure.azs":{source:"iana",extensions:["azs"]},"application/vnd.amadeus+json":{source:"iana",compressible:!0},"application/vnd.amazon.ebook":{source:"apache",extensions:["azw"]},"application/vnd.amazon.mobi8-ebook":{source:"iana"},"application/vnd.americandynamics.acc":{source:"iana",extensions:["acc"]},"application/vnd.amiga.ami":{source:"iana",extensions:["ami"]},"application/vnd.amundsen.maze+xml":{source:"iana",compressible:!0},"application/vnd.android.package-archive":{source:"apache",compressible:!1,extensions:["apk"]},"application/vnd.anki":{source:"iana"},"application/vnd.anser-web-certificate-issue-initiation":{source:"iana",extensions:["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{source:"apache",extensions:["fti"]},"application/vnd.antix.game-component":{source:"iana",extensions:["atx"]},"application/vnd.apache.thrift.binary":{source:"iana"},"application/vnd.apache.thrift.compact":{source:"iana"},"application/vnd.apache.thrift.json":{source:"iana"},"application/vnd.api+json":{source:"iana",compressible:!0},"application/vnd.apothekende.reservation+json":{source:"iana",compressible:!0},"application/vnd.apple.installer+xml":{source:"iana",compressible:!0,extensions:["mpkg"]},"application/vnd.apple.keynote":{source:"iana",extensions:["keynote"]},"application/vnd.apple.mpegurl":{source:"iana",extensions:["m3u8"]},"application/vnd.apple.numbers":{source:"iana",extensions:["numbers"]},"application/vnd.apple.pages":{source:"iana",extensions:["pages"]},"application/vnd.apple.pkpass":{compressible:!1,extensions:["pkpass"]},"application/vnd.arastra.swi":{source:"iana"},"application/vnd.aristanetworks.swi":{source:"iana",extensions:["swi"]},"application/vnd.artisan+json":{source:"iana",compressible:!0},"application/vnd.artsquare":{source:"iana"},"application/vnd.astraea-software.iota":{source:"iana",extensions:["iota"]},"application/vnd.audiograph":{source:"iana",extensions:["aep"]},"application/vnd.autopackage":{source:"iana"},"application/vnd.avalon+json":{source:"iana",compressible:!0},"application/vnd.avistar+xml":{source:"iana",compressible:!0},"application/vnd.balsamiq.bmml+xml":{source:"iana",compressible:!0},"application/vnd.balsamiq.bmpr":{source:"iana"},"application/vnd.banana-accounting":{source:"iana"},"application/vnd.bbf.usp.msg":{source:"iana"},"application/vnd.bbf.usp.msg+json":{source:"iana",compressible:!0},"application/vnd.bekitzur-stech+json":{source:"iana",compressible:!0},"application/vnd.bint.med-content":{source:"iana"},"application/vnd.biopax.rdf+xml":{source:"iana",compressible:!0},"application/vnd.blink-idb-value-wrapper":{source:"iana"},"application/vnd.blueice.multipass":{source:"iana",extensions:["mpm"]},"application/vnd.bluetooth.ep.oob":{source:"iana"},"application/vnd.bluetooth.le.oob":{source:"iana"},"application/vnd.bmi":{source:"iana",extensions:["bmi"]},"application/vnd.businessobjects":{source:"iana",extensions:["rep"]},"application/vnd.byu.uapi+json":{source:"iana",compressible:!0},"application/vnd.cab-jscript":{source:"iana"},"application/vnd.canon-cpdl":{source:"iana"},"application/vnd.canon-lips":{source:"iana"},"application/vnd.capasystems-pg+json":{source:"iana",compressible:!0},"application/vnd.cendio.thinlinc.clientconf":{source:"iana"},"application/vnd.century-systems.tcp_stream":{source:"iana"},"application/vnd.chemdraw+xml":{source:"iana",compressible:!0,extensions:["cdxml"]},"application/vnd.chess-pgn":{source:"iana"},"application/vnd.chipnuts.karaoke-mmd":{source:"iana",extensions:["mmd"]},"application/vnd.cinderella":{source:"iana",extensions:["cdy"]},"application/vnd.cirpack.isdn-ext":{source:"iana"},"application/vnd.citationstyles.style+xml":{source:"iana",compressible:!0,extensions:["csl"]},"application/vnd.claymore":{source:"iana",extensions:["cla"]},"application/vnd.cloanto.rp9":{source:"iana",extensions:["rp9"]},"application/vnd.clonk.c4group":{source:"iana",extensions:["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{source:"iana",extensions:["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{source:"iana",extensions:["c11amz"]},"application/vnd.coffeescript":{source:"iana"},"application/vnd.collabio.xodocuments.document":{source:"iana"},"application/vnd.collabio.xodocuments.document-template":{source:"iana"},"application/vnd.collabio.xodocuments.presentation":{source:"iana"},"application/vnd.collabio.xodocuments.presentation-template":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{source:"iana"},"application/vnd.collection+json":{source:"iana",compressible:!0},"application/vnd.collection.doc+json":{source:"iana",compressible:!0},"application/vnd.collection.next+json":{source:"iana",compressible:!0},"application/vnd.comicbook+zip":{source:"iana",compressible:!1},"application/vnd.comicbook-rar":{source:"iana"},"application/vnd.commerce-battelle":{source:"iana"},"application/vnd.commonspace":{source:"iana",extensions:["csp"]},"application/vnd.contact.cmsg":{source:"iana",extensions:["cdbcmsg"]},"application/vnd.coreos.ignition+json":{source:"iana",compressible:!0},"application/vnd.cosmocaller":{source:"iana",extensions:["cmc"]},"application/vnd.crick.clicker":{source:"iana",extensions:["clkx"]},"application/vnd.crick.clicker.keyboard":{source:"iana",extensions:["clkk"]},"application/vnd.crick.clicker.palette":{source:"iana",extensions:["clkp"]},"application/vnd.crick.clicker.template":{source:"iana",extensions:["clkt"]},"application/vnd.crick.clicker.wordbank":{source:"iana",extensions:["clkw"]},"application/vnd.criticaltools.wbs+xml":{source:"iana",compressible:!0,extensions:["wbs"]},"application/vnd.ctc-posml":{source:"iana",extensions:["pml"]},"application/vnd.ctct.ws+xml":{source:"iana",compressible:!0},"application/vnd.cups-pdf":{source:"iana"},"application/vnd.cups-postscript":{source:"iana"},"application/vnd.cups-ppd":{source:"iana",extensions:["ppd"]},"application/vnd.cups-raster":{source:"iana"},"application/vnd.cups-raw":{source:"iana"},"application/vnd.curl":{source:"iana"},"application/vnd.curl.car":{source:"apache",extensions:["car"]},"application/vnd.curl.pcurl":{source:"apache",extensions:["pcurl"]},"application/vnd.cyan.dean.root+xml":{source:"iana",compressible:!0},"application/vnd.cybank":{source:"iana"},"application/vnd.d2l.coursepackage1p0+zip":{source:"iana",compressible:!1},"application/vnd.dart":{source:"iana",compressible:!0,extensions:["dart"]},"application/vnd.data-vision.rdz":{source:"iana",extensions:["rdz"]},"application/vnd.datapackage+json":{source:"iana",compressible:!0},"application/vnd.dataresource+json":{source:"iana",compressible:!0},"application/vnd.debian.binary-package":{source:"iana"},"application/vnd.dece.data":{source:"iana",extensions:["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{source:"iana",compressible:!0,extensions:["uvt","uvvt"]},"application/vnd.dece.unspecified":{source:"iana",extensions:["uvx","uvvx"]},"application/vnd.dece.zip":{source:"iana",extensions:["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{source:"iana",extensions:["fe_launch"]},"application/vnd.desmume.movie":{source:"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{source:"iana"},"application/vnd.dm.delegation+xml":{source:"iana",compressible:!0},"application/vnd.dna":{source:"iana",extensions:["dna"]},"application/vnd.document+json":{source:"iana",compressible:!0},"application/vnd.dolby.mlp":{source:"apache",extensions:["mlp"]},"application/vnd.dolby.mobile.1":{source:"iana"},"application/vnd.dolby.mobile.2":{source:"iana"},"application/vnd.doremir.scorecloud-binary-document":{source:"iana"},"application/vnd.dpgraph":{source:"iana",extensions:["dpg"]},"application/vnd.dreamfactory":{source:"iana",extensions:["dfac"]},"application/vnd.drive+json":{source:"iana",compressible:!0},"application/vnd.ds-keypoint":{source:"apache",extensions:["kpxx"]},"application/vnd.dtg.local":{source:"iana"},"application/vnd.dtg.local.flash":{source:"iana"},"application/vnd.dtg.local.html":{source:"iana"},"application/vnd.dvb.ait":{source:"iana",extensions:["ait"]},"application/vnd.dvb.dvbj":{source:"iana"},"application/vnd.dvb.esgcontainer":{source:"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess2":{source:"iana"},"application/vnd.dvb.ipdcesgpdd":{source:"iana"},"application/vnd.dvb.ipdcroaming":{source:"iana"},"application/vnd.dvb.iptv.alfec-base":{source:"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{source:"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-container+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-generic+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-msglist+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-registration-request+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-registration-response+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-init+xml":{source:"iana",compressible:!0},"application/vnd.dvb.pfr":{source:"iana"},"application/vnd.dvb.service":{source:"iana",extensions:["svc"]},"application/vnd.dxr":{source:"iana"},"application/vnd.dynageo":{source:"iana",extensions:["geo"]},"application/vnd.dzr":{source:"iana"},"application/vnd.easykaraoke.cdgdownload":{source:"iana"},"application/vnd.ecdis-update":{source:"iana"},"application/vnd.ecip.rlp":{source:"iana"},"application/vnd.ecowin.chart":{source:"iana",extensions:["mag"]},"application/vnd.ecowin.filerequest":{source:"iana"},"application/vnd.ecowin.fileupdate":{source:"iana"},"application/vnd.ecowin.series":{source:"iana"},"application/vnd.ecowin.seriesrequest":{source:"iana"},"application/vnd.ecowin.seriesupdate":{source:"iana"},"application/vnd.efi.img":{source:"iana"},"application/vnd.efi.iso":{source:"iana"},"application/vnd.emclient.accessrequest+xml":{source:"iana",compressible:!0},"application/vnd.enliven":{source:"iana",extensions:["nml"]},"application/vnd.enphase.envoy":{source:"iana"},"application/vnd.eprints.data+xml":{source:"iana",compressible:!0},"application/vnd.epson.esf":{source:"iana",extensions:["esf"]},"application/vnd.epson.msf":{source:"iana",extensions:["msf"]},"application/vnd.epson.quickanime":{source:"iana",extensions:["qam"]},"application/vnd.epson.salt":{source:"iana",extensions:["slt"]},"application/vnd.epson.ssf":{source:"iana",extensions:["ssf"]},"application/vnd.ericsson.quickcall":{source:"iana"},"application/vnd.espass-espass+zip":{source:"iana",compressible:!1},"application/vnd.eszigno3+xml":{source:"iana",compressible:!0,extensions:["es3","et3"]},"application/vnd.etsi.aoc+xml":{source:"iana",compressible:!0},"application/vnd.etsi.asic-e+zip":{source:"iana",compressible:!1},"application/vnd.etsi.asic-s+zip":{source:"iana",compressible:!1},"application/vnd.etsi.cug+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvcommand+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvdiscovery+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvprofile+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-bc+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-cod+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-npvr+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvservice+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsync+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvueprofile+xml":{source:"iana",compressible:!0},"application/vnd.etsi.mcid+xml":{source:"iana",compressible:!0},"application/vnd.etsi.mheg5":{source:"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{source:"iana",compressible:!0},"application/vnd.etsi.pstn+xml":{source:"iana",compressible:!0},"application/vnd.etsi.sci+xml":{source:"iana",compressible:!0},"application/vnd.etsi.simservs+xml":{source:"iana",compressible:!0},"application/vnd.etsi.timestamp-token":{source:"iana"},"application/vnd.etsi.tsl+xml":{source:"iana",compressible:!0},"application/vnd.etsi.tsl.der":{source:"iana"},"application/vnd.eudora.data":{source:"iana"},"application/vnd.evolv.ecig.profile":{source:"iana"},"application/vnd.evolv.ecig.settings":{source:"iana"},"application/vnd.evolv.ecig.theme":{source:"iana"},"application/vnd.exstream-empower+zip":{source:"iana",compressible:!1},"application/vnd.ezpix-album":{source:"iana",extensions:["ez2"]},"application/vnd.ezpix-package":{source:"iana",extensions:["ez3"]},"application/vnd.f-secure.mobile":{source:"iana"},"application/vnd.fastcopy-disk-image":{source:"iana"},"application/vnd.fdf":{source:"iana",extensions:["fdf"]},"application/vnd.fdsn.mseed":{source:"iana",extensions:["mseed"]},"application/vnd.fdsn.seed":{source:"iana",extensions:["seed","dataless"]},"application/vnd.ffsns":{source:"iana"},"application/vnd.filmit.zfc":{source:"iana"},"application/vnd.fints":{source:"iana"},"application/vnd.firemonkeys.cloudcell":{source:"iana"},"application/vnd.flographit":{source:"iana",extensions:["gph"]},"application/vnd.fluxtime.clip":{source:"iana",extensions:["ftc"]},"application/vnd.font-fontforge-sfd":{source:"iana"},"application/vnd.framemaker":{source:"iana",extensions:["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{source:"iana",extensions:["fnc"]},"application/vnd.frogans.ltf":{source:"iana",extensions:["ltf"]},"application/vnd.fsc.weblaunch":{source:"iana",extensions:["fsc"]},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oas"]},"application/vnd.fujitsu.oasys2":{source:"iana",extensions:["oa2"]},"application/vnd.fujitsu.oasys3":{source:"iana",extensions:["oa3"]},"application/vnd.fujitsu.oasysgp":{source:"iana",extensions:["fg5"]},"application/vnd.fujitsu.oasysprs":{source:"iana",extensions:["bh2"]},"application/vnd.fujixerox.art-ex":{source:"iana"},"application/vnd.fujixerox.art4":{source:"iana"},"application/vnd.fujixerox.ddd":{source:"iana",extensions:["ddd"]},"application/vnd.fujixerox.docuworks":{source:"iana",extensions:["xdw"]},"application/vnd.fujixerox.docuworks.binder":{source:"iana",extensions:["xbd"]},"application/vnd.fujixerox.docuworks.container":{source:"iana"},"application/vnd.fujixerox.hbpl":{source:"iana"},"application/vnd.fut-misnet":{source:"iana"},"application/vnd.futoin+cbor":{source:"iana"},"application/vnd.futoin+json":{source:"iana",compressible:!0},"application/vnd.fuzzysheet":{source:"iana",extensions:["fzs"]},"application/vnd.genomatix.tuxedo":{source:"iana",extensions:["txd"]},"application/vnd.geo+json":{source:"iana",compressible:!0},"application/vnd.geocube+xml":{source:"iana",compressible:!0},"application/vnd.geogebra.file":{source:"iana",extensions:["ggb"]},"application/vnd.geogebra.tool":{source:"iana",extensions:["ggt"]},"application/vnd.geometry-explorer":{source:"iana",extensions:["gex","gre"]},"application/vnd.geonext":{source:"iana",extensions:["gxt"]},"application/vnd.geoplan":{source:"iana",extensions:["g2w"]},"application/vnd.geospace":{source:"iana",extensions:["g3w"]},"application/vnd.gerber":{source:"iana"},"application/vnd.globalplatform.card-content-mgt":{source:"iana"},"application/vnd.globalplatform.card-content-mgt-response":{source:"iana"},"application/vnd.gmx":{source:"iana",extensions:["gmx"]},"application/vnd.google-apps.document":{compressible:!1,extensions:["gdoc"]},"application/vnd.google-apps.presentation":{compressible:!1,extensions:["gslides"]},"application/vnd.google-apps.spreadsheet":{compressible:!1,extensions:["gsheet"]},"application/vnd.google-earth.kml+xml":{source:"iana",compressible:!0,extensions:["kml"]},"application/vnd.google-earth.kmz":{source:"iana",compressible:!1,extensions:["kmz"]},"application/vnd.gov.sk.e-form+xml":{source:"iana",compressible:!0},"application/vnd.gov.sk.e-form+zip":{source:"iana",compressible:!1},"application/vnd.gov.sk.xmldatacontainer+xml":{source:"iana",compressible:!0},"application/vnd.grafeq":{source:"iana",extensions:["gqf","gqs"]},"application/vnd.gridmp":{source:"iana"},"application/vnd.groove-account":{source:"iana",extensions:["gac"]},"application/vnd.groove-help":{source:"iana",extensions:["ghf"]},"application/vnd.groove-identity-message":{source:"iana",extensions:["gim"]},"application/vnd.groove-injector":{source:"iana",extensions:["grv"]},"application/vnd.groove-tool-message":{source:"iana",extensions:["gtm"]},"application/vnd.groove-tool-template":{source:"iana",extensions:["tpl"]},"application/vnd.groove-vcard":{source:"iana",extensions:["vcg"]},"application/vnd.hal+json":{source:"iana",compressible:!0},"application/vnd.hal+xml":{source:"iana",compressible:!0,extensions:["hal"]},"application/vnd.handheld-entertainment+xml":{source:"iana",compressible:!0,extensions:["zmm"]},"application/vnd.hbci":{source:"iana",extensions:["hbci"]},"application/vnd.hc+json":{source:"iana",compressible:!0},"application/vnd.hcl-bireports":{source:"iana"},"application/vnd.hdt":{source:"iana"},"application/vnd.heroku+json":{source:"iana",compressible:!0},"application/vnd.hhe.lesson-player":{source:"iana",extensions:["les"]},"application/vnd.hp-hpgl":{source:"iana",extensions:["hpgl"]},"application/vnd.hp-hpid":{source:"iana",extensions:["hpid"]},"application/vnd.hp-hps":{source:"iana",extensions:["hps"]},"application/vnd.hp-jlyt":{source:"iana",extensions:["jlt"]},"application/vnd.hp-pcl":{source:"iana",extensions:["pcl"]},"application/vnd.hp-pclxl":{source:"iana",extensions:["pclxl"]},"application/vnd.httphone":{source:"iana"},"application/vnd.hydrostatix.sof-data":{source:"iana",extensions:["sfd-hdstx"]},"application/vnd.hyper+json":{source:"iana",compressible:!0},"application/vnd.hyper-item+json":{source:"iana",compressible:!0},"application/vnd.hyperdrive+json":{source:"iana",compressible:!0},"application/vnd.hzn-3d-crossword":{source:"iana"},"application/vnd.ibm.afplinedata":{source:"iana"},"application/vnd.ibm.electronic-media":{source:"iana"},"application/vnd.ibm.minipay":{source:"iana",extensions:["mpy"]},"application/vnd.ibm.modcap":{source:"iana",extensions:["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{source:"iana",extensions:["irm"]},"application/vnd.ibm.secure-container":{source:"iana",extensions:["sc"]},"application/vnd.iccprofile":{source:"iana",extensions:["icc","icm"]},"application/vnd.ieee.1905":{source:"iana"},"application/vnd.igloader":{source:"iana",extensions:["igl"]},"application/vnd.imagemeter.folder+zip":{source:"iana",compressible:!1},"application/vnd.imagemeter.image+zip":{source:"iana",compressible:!1},"application/vnd.immervision-ivp":{source:"iana",extensions:["ivp"]},"application/vnd.immervision-ivu":{source:"iana",extensions:["ivu"]},"application/vnd.ims.imsccv1p1":{source:"iana"},"application/vnd.ims.imsccv1p2":{source:"iana"},"application/vnd.ims.imsccv1p3":{source:"iana"},"application/vnd.ims.lis.v2.result+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy.id+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings.simple+json":{source:"iana",compressible:!0},"application/vnd.informedcontrol.rms+xml":{source:"iana",compressible:!0},"application/vnd.informix-visionary":{source:"iana"},"application/vnd.infotech.project":{source:"iana"},"application/vnd.infotech.project+xml":{source:"iana",compressible:!0},"application/vnd.innopath.wamp.notification":{source:"iana"},"application/vnd.insors.igm":{source:"iana",extensions:["igm"]},"application/vnd.intercon.formnet":{source:"iana",extensions:["xpw","xpx"]},"application/vnd.intergeo":{source:"iana",extensions:["i2g"]},"application/vnd.intertrust.digibox":{source:"iana"},"application/vnd.intertrust.nncp":{source:"iana"},"application/vnd.intu.qbo":{source:"iana",extensions:["qbo"]},"application/vnd.intu.qfx":{source:"iana",extensions:["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.conceptitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.knowledgeitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.newsitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.newsmessage+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.packageitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.planningitem+xml":{source:"iana",compressible:!0},"application/vnd.ipunplugged.rcprofile":{source:"iana",extensions:["rcprofile"]},"application/vnd.irepository.package+xml":{source:"iana",compressible:!0,extensions:["irp"]},"application/vnd.is-xpr":{source:"iana",extensions:["xpr"]},"application/vnd.isac.fcs":{source:"iana",extensions:["fcs"]},"application/vnd.jam":{source:"iana",extensions:["jam"]},"application/vnd.japannet-directory-service":{source:"iana"},"application/vnd.japannet-jpnstore-wakeup":{source:"iana"},"application/vnd.japannet-payment-wakeup":{source:"iana"},"application/vnd.japannet-registration":{source:"iana"},"application/vnd.japannet-registration-wakeup":{source:"iana"},"application/vnd.japannet-setstore-wakeup":{source:"iana"},"application/vnd.japannet-verification":{source:"iana"},"application/vnd.japannet-verification-wakeup":{source:"iana"},"application/vnd.jcp.javame.midlet-rms":{source:"iana",extensions:["rms"]},"application/vnd.jisp":{source:"iana",extensions:["jisp"]},"application/vnd.joost.joda-archive":{source:"iana",extensions:["joda"]},"application/vnd.jsk.isdn-ngn":{source:"iana"},"application/vnd.kahootz":{source:"iana",extensions:["ktz","ktr"]},"application/vnd.kde.karbon":{source:"iana",extensions:["karbon"]},"application/vnd.kde.kchart":{source:"iana",extensions:["chrt"]},"application/vnd.kde.kformula":{source:"iana",extensions:["kfo"]},"application/vnd.kde.kivio":{source:"iana",extensions:["flw"]},"application/vnd.kde.kontour":{source:"iana",extensions:["kon"]},"application/vnd.kde.kpresenter":{source:"iana",extensions:["kpr","kpt"]},"application/vnd.kde.kspread":{source:"iana",extensions:["ksp"]},"application/vnd.kde.kword":{source:"iana",extensions:["kwd","kwt"]},"application/vnd.kenameaapp":{source:"iana",extensions:["htke"]},"application/vnd.kidspiration":{source:"iana",extensions:["kia"]},"application/vnd.kinar":{source:"iana",extensions:["kne","knp"]},"application/vnd.koan":{source:"iana",extensions:["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{source:"iana",extensions:["sse"]},"application/vnd.las.las+json":{source:"iana",compressible:!0},"application/vnd.las.las+xml":{source:"iana",compressible:!0,extensions:["lasxml"]},"application/vnd.leap+json":{source:"iana",compressible:!0},"application/vnd.liberty-request+xml":{source:"iana",compressible:!0},"application/vnd.llamagraphics.life-balance.desktop":{source:"iana",extensions:["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{source:"iana",compressible:!0,extensions:["lbe"]},"application/vnd.lotus-1-2-3":{source:"iana",extensions:["123"]},"application/vnd.lotus-approach":{source:"iana",extensions:["apr"]},"application/vnd.lotus-freelance":{source:"iana",extensions:["pre"]},"application/vnd.lotus-notes":{source:"iana",extensions:["nsf"]},"application/vnd.lotus-organizer":{source:"iana",extensions:["org"]},"application/vnd.lotus-screencam":{source:"iana",extensions:["scm"]},"application/vnd.lotus-wordpro":{source:"iana",extensions:["lwp"]},"application/vnd.macports.portpkg":{source:"iana",extensions:["portpkg"]},"application/vnd.mapbox-vector-tile":{source:"iana"},"application/vnd.marlin.drm.actiontoken+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.conftoken+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.license+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.mdcf":{source:"iana"},"application/vnd.mason+json":{source:"iana",compressible:!0},"application/vnd.maxmind.maxmind-db":{source:"iana"},"application/vnd.mcd":{source:"iana",extensions:["mcd"]},"application/vnd.medcalcdata":{source:"iana",extensions:["mc1"]},"application/vnd.mediastation.cdkey":{source:"iana",extensions:["cdkey"]},"application/vnd.meridian-slingshot":{source:"iana"},"application/vnd.mfer":{source:"iana",extensions:["mwf"]},"application/vnd.mfmp":{source:"iana",extensions:["mfm"]},"application/vnd.micro+json":{source:"iana",compressible:!0},"application/vnd.micrografx.flo":{source:"iana",extensions:["flo"]},"application/vnd.micrografx.igx":{source:"iana",extensions:["igx"]},"application/vnd.microsoft.portable-executable":{source:"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{source:"iana"},"application/vnd.miele+json":{source:"iana",compressible:!0},"application/vnd.mif":{source:"iana",extensions:["mif"]},"application/vnd.minisoft-hp3000-save":{source:"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{source:"iana"},"application/vnd.mobius.daf":{source:"iana",extensions:["daf"]},"application/vnd.mobius.dis":{source:"iana",extensions:["dis"]},"application/vnd.mobius.mbk":{source:"iana",extensions:["mbk"]},"application/vnd.mobius.mqy":{source:"iana",extensions:["mqy"]},"application/vnd.mobius.msl":{source:"iana",extensions:["msl"]},"application/vnd.mobius.plc":{source:"iana",extensions:["plc"]},"application/vnd.mobius.txf":{source:"iana",extensions:["txf"]},"application/vnd.mophun.application":{source:"iana",extensions:["mpn"]},"application/vnd.mophun.certificate":{source:"iana",extensions:["mpc"]},"application/vnd.motorola.flexsuite":{source:"iana"},"application/vnd.motorola.flexsuite.adsi":{source:"iana"},"application/vnd.motorola.flexsuite.fis":{source:"iana"},"application/vnd.motorola.flexsuite.gotap":{source:"iana"},"application/vnd.motorola.flexsuite.kmr":{source:"iana"},"application/vnd.motorola.flexsuite.ttc":{source:"iana"},"application/vnd.motorola.flexsuite.wem":{source:"iana"},"application/vnd.motorola.iprm":{source:"iana"},"application/vnd.mozilla.xul+xml":{source:"iana",compressible:!0,extensions:["xul"]},"application/vnd.ms-3mfdocument":{source:"iana"},"application/vnd.ms-artgalry":{source:"iana",extensions:["cil"]},"application/vnd.ms-asf":{source:"iana"},"application/vnd.ms-cab-compressed":{source:"iana",extensions:["cab"]},"application/vnd.ms-color.iccprofile":{source:"apache"},"application/vnd.ms-excel":{source:"iana",compressible:!1,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{source:"iana",extensions:["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{source:"iana",extensions:["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{source:"iana",extensions:["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{source:"iana",extensions:["xltm"]},"application/vnd.ms-fontobject":{source:"iana",compressible:!0,extensions:["eot"]},"application/vnd.ms-htmlhelp":{source:"iana",extensions:["chm"]},"application/vnd.ms-ims":{source:"iana",extensions:["ims"]},"application/vnd.ms-lrm":{source:"iana",extensions:["lrm"]},"application/vnd.ms-office.activex+xml":{source:"iana",compressible:!0},"application/vnd.ms-officetheme":{source:"iana",extensions:["thmx"]},"application/vnd.ms-opentype":{source:"apache",compressible:!0},"application/vnd.ms-outlook":{compressible:!1,extensions:["msg"]},"application/vnd.ms-package.obfuscated-opentype":{source:"apache"},"application/vnd.ms-pki.seccat":{source:"apache",extensions:["cat"]},"application/vnd.ms-pki.stl":{source:"apache",extensions:["stl"]},"application/vnd.ms-playready.initiator+xml":{source:"iana",compressible:!0},"application/vnd.ms-powerpoint":{source:"iana",compressible:!1,extensions:["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{source:"iana",extensions:["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{source:"iana",extensions:["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{source:"iana",extensions:["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{source:"iana",extensions:["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{source:"iana",extensions:["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{source:"iana",compressible:!0},"application/vnd.ms-printing.printticket+xml":{source:"apache",compressible:!0},"application/vnd.ms-printschematicket+xml":{source:"iana",compressible:!0},"application/vnd.ms-project":{source:"iana",extensions:["mpp","mpt"]},"application/vnd.ms-tnef":{source:"iana"},"application/vnd.ms-windows.devicepairing":{source:"iana"},"application/vnd.ms-windows.nwprinting.oob":{source:"iana"},"application/vnd.ms-windows.printerpairing":{source:"iana"},"application/vnd.ms-windows.wsd.oob":{source:"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.lic-resp":{source:"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.meter-resp":{source:"iana"},"application/vnd.ms-word.document.macroenabled.12":{source:"iana",extensions:["docm"]},"application/vnd.ms-word.template.macroenabled.12":{source:"iana",extensions:["dotm"]},"application/vnd.ms-works":{source:"iana",extensions:["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{source:"iana",extensions:["wpl"]},"application/vnd.ms-xpsdocument":{source:"iana",compressible:!1,extensions:["xps"]},"application/vnd.msa-disk-image":{source:"iana"},"application/vnd.mseq":{source:"iana",extensions:["mseq"]},"application/vnd.msign":{source:"iana"},"application/vnd.multiad.creator":{source:"iana"},"application/vnd.multiad.creator.cif":{source:"iana"},"application/vnd.music-niff":{source:"iana"},"application/vnd.musician":{source:"iana",extensions:["mus"]},"application/vnd.muvee.style":{source:"iana",extensions:["msty"]},"application/vnd.mynfc":{source:"iana",extensions:["taglet"]},"application/vnd.ncd.control":{source:"iana"},"application/vnd.ncd.reference":{source:"iana"},"application/vnd.nearst.inv+json":{source:"iana",compressible:!0},"application/vnd.nervana":{source:"iana"},"application/vnd.netfpx":{source:"iana"},"application/vnd.neurolanguage.nlu":{source:"iana",extensions:["nlu"]},"application/vnd.nimn":{source:"iana"},"application/vnd.nintendo.nitro.rom":{source:"iana"},"application/vnd.nintendo.snes.rom":{source:"iana"},"application/vnd.nitf":{source:"iana",extensions:["ntf","nitf"]},"application/vnd.noblenet-directory":{source:"iana",extensions:["nnd"]},"application/vnd.noblenet-sealer":{source:"iana",extensions:["nns"]},"application/vnd.noblenet-web":{source:"iana",extensions:["nnw"]},"application/vnd.nokia.catalogs":{source:"iana"},"application/vnd.nokia.conml+wbxml":{source:"iana"},"application/vnd.nokia.conml+xml":{source:"iana",compressible:!0},"application/vnd.nokia.iptv.config+xml":{source:"iana",compressible:!0},"application/vnd.nokia.isds-radio-presets":{source:"iana"},"application/vnd.nokia.landmark+wbxml":{source:"iana"},"application/vnd.nokia.landmark+xml":{source:"iana",compressible:!0},"application/vnd.nokia.landmarkcollection+xml":{source:"iana",compressible:!0},"application/vnd.nokia.n-gage.ac+xml":{source:"iana",compressible:!0},"application/vnd.nokia.n-gage.data":{source:"iana",extensions:["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{source:"iana",extensions:["n-gage"]},"application/vnd.nokia.ncd":{source:"iana"},"application/vnd.nokia.pcd+wbxml":{source:"iana"},"application/vnd.nokia.pcd+xml":{source:"iana",compressible:!0},"application/vnd.nokia.radio-preset":{source:"iana",extensions:["rpst"]},"application/vnd.nokia.radio-presets":{source:"iana",extensions:["rpss"]},"application/vnd.novadigm.edm":{source:"iana",extensions:["edm"]},"application/vnd.novadigm.edx":{source:"iana",extensions:["edx"]},"application/vnd.novadigm.ext":{source:"iana",extensions:["ext"]},"application/vnd.ntt-local.content-share":{source:"iana"},"application/vnd.ntt-local.file-transfer":{source:"iana"},"application/vnd.ntt-local.ogw_remote-access":{source:"iana"},"application/vnd.ntt-local.sip-ta_remote":{source:"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{source:"iana"},"application/vnd.oasis.opendocument.chart":{source:"iana",extensions:["odc"]},"application/vnd.oasis.opendocument.chart-template":{source:"iana",extensions:["otc"]},"application/vnd.oasis.opendocument.database":{source:"iana",extensions:["odb"]},"application/vnd.oasis.opendocument.formula":{source:"iana",extensions:["odf"]},"application/vnd.oasis.opendocument.formula-template":{source:"iana",extensions:["odft"]},"application/vnd.oasis.opendocument.graphics":{source:"iana",compressible:!1,extensions:["odg"]},"application/vnd.oasis.opendocument.graphics-template":{source:"iana",extensions:["otg"]},"application/vnd.oasis.opendocument.image":{source:"iana",extensions:["odi"]},"application/vnd.oasis.opendocument.image-template":{source:"iana",extensions:["oti"]},"application/vnd.oasis.opendocument.presentation":{source:"iana",compressible:!1,extensions:["odp"]},"application/vnd.oasis.opendocument.presentation-template":{source:"iana",extensions:["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{source:"iana",compressible:!1,extensions:["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{source:"iana",extensions:["ots"]},"application/vnd.oasis.opendocument.text":{source:"iana",compressible:!1,extensions:["odt"]},"application/vnd.oasis.opendocument.text-master":{source:"iana",extensions:["odm"]},"application/vnd.oasis.opendocument.text-template":{source:"iana",extensions:["ott"]},"application/vnd.oasis.opendocument.text-web":{source:"iana",extensions:["oth"]},"application/vnd.obn":{source:"iana"},"application/vnd.ocf+cbor":{source:"iana"},"application/vnd.oftn.l10n+json":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessdownload+xml":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessstreaming+xml":{source:"iana",compressible:!0},"application/vnd.oipf.cspg-hexbinary":{source:"iana"},"application/vnd.oipf.dae.svg+xml":{source:"iana",compressible:!0},"application/vnd.oipf.dae.xhtml+xml":{source:"iana",compressible:!0},"application/vnd.oipf.mippvcontrolmessage+xml":{source:"iana",compressible:!0},"application/vnd.oipf.pae.gem":{source:"iana"},"application/vnd.oipf.spdiscovery+xml":{source:"iana",compressible:!0},"application/vnd.oipf.spdlist+xml":{source:"iana",compressible:!0},"application/vnd.oipf.ueprofile+xml":{source:"iana",compressible:!0},"application/vnd.oipf.userprofile+xml":{source:"iana",compressible:!0},"application/vnd.olpc-sugar":{source:"iana",extensions:["xo"]},"application/vnd.oma-scws-config":{source:"iana"},"application/vnd.oma-scws-http-request":{source:"iana"},"application/vnd.oma-scws-http-response":{source:"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.drm-trigger+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.imd+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.ltkm":{source:"iana"},"application/vnd.oma.bcast.notification+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.provisioningtrigger":{source:"iana"},"application/vnd.oma.bcast.sgboot":{source:"iana"},"application/vnd.oma.bcast.sgdd+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.sgdu":{source:"iana"},"application/vnd.oma.bcast.simple-symbol-container":{source:"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.sprov+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.stkm":{source:"iana"},"application/vnd.oma.cab-address-book+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-feature-handler+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-pcc+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-subs-invite+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-user-prefs+xml":{source:"iana",compressible:!0},"application/vnd.oma.dcd":{source:"iana"},"application/vnd.oma.dcdc":{source:"iana"},"application/vnd.oma.dd2+xml":{source:"iana",compressible:!0,extensions:["dd2"]},"application/vnd.oma.drm.risd+xml":{source:"iana",compressible:!0},"application/vnd.oma.group-usage-list+xml":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+json":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+tlv":{source:"iana"},"application/vnd.oma.pal+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.detailed-progress-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.final-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.groups+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.invocation-descriptor+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.optimized-progress-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.push":{source:"iana"},"application/vnd.oma.scidm.messages+xml":{source:"iana",compressible:!0},"application/vnd.oma.xcap-directory+xml":{source:"iana",compressible:!0},"application/vnd.omads-email+xml":{source:"iana",compressible:!0},"application/vnd.omads-file+xml":{source:"iana",compressible:!0},"application/vnd.omads-folder+xml":{source:"iana",compressible:!0},"application/vnd.omaloc-supl-init":{source:"iana"},"application/vnd.onepager":{source:"iana"},"application/vnd.onepagertamp":{source:"iana"},"application/vnd.onepagertamx":{source:"iana"},"application/vnd.onepagertat":{source:"iana"},"application/vnd.onepagertatp":{source:"iana"},"application/vnd.onepagertatx":{source:"iana"},"application/vnd.openblox.game+xml":{source:"iana",compressible:!0},"application/vnd.openblox.game-binary":{source:"iana"},"application/vnd.openeye.oeb":{source:"iana"},"application/vnd.openofficeorg.extension":{source:"apache",extensions:["oxt"]},"application/vnd.openstreetmap.data+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawing+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{source:"iana",compressible:!1,extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slide":{source:"iana",extensions:["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{source:"iana",extensions:["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.template":{source:"iana",extensions:["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{source:"iana",compressible:!1,extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{source:"iana",extensions:["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.theme+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.vmldrawing":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{source:"iana",compressible:!1,extensions:["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{source:"iana",extensions:["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.core-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.relationships+xml":{source:"iana",compressible:!0},"application/vnd.oracle.resource+json":{source:"iana",compressible:!0},"application/vnd.orange.indata":{source:"iana"},"application/vnd.osa.netdeploy":{source:"iana"},"application/vnd.osgeo.mapguide.package":{source:"iana",extensions:["mgp"]},"application/vnd.osgi.bundle":{source:"iana"},"application/vnd.osgi.dp":{source:"iana",extensions:["dp"]},"application/vnd.osgi.subsystem":{source:"iana",extensions:["esa"]},"application/vnd.otps.ct-kip+xml":{source:"iana",compressible:!0},"application/vnd.oxli.countgraph":{source:"iana"},"application/vnd.pagerduty+json":{source:"iana",compressible:!0},"application/vnd.palm":{source:"iana",extensions:["pdb","pqa","oprc"]},"application/vnd.panoply":{source:"iana"},"application/vnd.paos.xml":{source:"iana"},"application/vnd.patentdive":{source:"iana"},"application/vnd.pawaafile":{source:"iana",extensions:["paw"]},"application/vnd.pcos":{source:"iana"},"application/vnd.pg.format":{source:"iana",extensions:["str"]},"application/vnd.pg.osasli":{source:"iana",extensions:["ei6"]},"application/vnd.piaccess.application-licence":{source:"iana"},"application/vnd.picsel":{source:"iana",extensions:["efif"]},"application/vnd.pmi.widget":{source:"iana",extensions:["wg"]},"application/vnd.poc.group-advertisement+xml":{source:"iana",compressible:!0},"application/vnd.pocketlearn":{source:"iana",extensions:["plf"]},"application/vnd.powerbuilder6":{source:"iana",extensions:["pbd"]},"application/vnd.powerbuilder6-s":{source:"iana"},"application/vnd.powerbuilder7":{source:"iana"},"application/vnd.powerbuilder7-s":{source:"iana"},"application/vnd.powerbuilder75":{source:"iana"},"application/vnd.powerbuilder75-s":{source:"iana"},"application/vnd.preminet":{source:"iana"},"application/vnd.previewsystems.box":{source:"iana",extensions:["box"]},"application/vnd.proteus.magazine":{source:"iana",extensions:["mgz"]},"application/vnd.psfs":{source:"iana"},"application/vnd.publishare-delta-tree":{source:"iana",extensions:["qps"]},"application/vnd.pvi.ptid1":{source:"iana",extensions:["ptid"]},"application/vnd.pwg-multiplexed":{source:"iana"},"application/vnd.pwg-xhtml-print+xml":{source:"iana",compressible:!0},"application/vnd.qualcomm.brew-app-res":{source:"iana"},"application/vnd.quarantainenet":{source:"iana"},"application/vnd.quark.quarkxpress":{source:"iana",extensions:["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{source:"iana"},"application/vnd.radisys.moml+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-conf+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-conn+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-dialog+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-stream+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-conf+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-base+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-fax-detect+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-group+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-speech+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-transform+xml":{source:"iana",compressible:!0},"application/vnd.rainstor.data":{source:"iana"},"application/vnd.rapid":{source:"iana"},"application/vnd.rar":{source:"iana"},"application/vnd.realvnc.bed":{source:"iana",extensions:["bed"]},"application/vnd.recordare.musicxml":{source:"iana",extensions:["mxl"]},"application/vnd.recordare.musicxml+xml":{source:"iana",compressible:!0,extensions:["musicxml"]},"application/vnd.renlearn.rlprint":{source:"iana"},"application/vnd.restful+json":{source:"iana",compressible:!0},"application/vnd.rig.cryptonote":{source:"iana",extensions:["cryptonote"]},"application/vnd.rim.cod":{source:"apache",extensions:["cod"]},"application/vnd.rn-realmedia":{source:"apache",extensions:["rm"]},"application/vnd.rn-realmedia-vbr":{source:"apache",extensions:["rmvb"]},"application/vnd.route66.link66+xml":{source:"iana",compressible:!0,extensions:["link66"]},"application/vnd.rs-274x":{source:"iana"},"application/vnd.ruckus.download":{source:"iana"},"application/vnd.s3sms":{source:"iana"},"application/vnd.sailingtracker.track":{source:"iana",extensions:["st"]},"application/vnd.sbm.cid":{source:"iana"},"application/vnd.sbm.mid2":{source:"iana"},"application/vnd.scribus":{source:"iana"},"application/vnd.sealed.3df":{source:"iana"},"application/vnd.sealed.csf":{source:"iana"},"application/vnd.sealed.doc":{source:"iana"},"application/vnd.sealed.eml":{source:"iana"},"application/vnd.sealed.mht":{source:"iana"},"application/vnd.sealed.net":{source:"iana"},"application/vnd.sealed.ppt":{source:"iana"},"application/vnd.sealed.tiff":{source:"iana"},"application/vnd.sealed.xls":{source:"iana"},"application/vnd.sealedmedia.softseal.html":{source:"iana"},"application/vnd.sealedmedia.softseal.pdf":{source:"iana"},"application/vnd.seemail":{source:"iana",extensions:["see"]},"application/vnd.sema":{source:"iana",extensions:["sema"]},"application/vnd.semd":{source:"iana",extensions:["semd"]},"application/vnd.semf":{source:"iana",extensions:["semf"]},"application/vnd.shana.informed.formdata":{source:"iana",extensions:["ifm"]},"application/vnd.shana.informed.formtemplate":{source:"iana",extensions:["itp"]},"application/vnd.shana.informed.interchange":{source:"iana",extensions:["iif"]},"application/vnd.shana.informed.package":{source:"iana",extensions:["ipk"]},"application/vnd.shootproof+json":{source:"iana",compressible:!0},"application/vnd.sigrok.session":{source:"iana"},"application/vnd.simtech-mindmapper":{source:"iana",extensions:["twd","twds"]},"application/vnd.siren+json":{source:"iana",compressible:!0},"application/vnd.smaf":{source:"iana",extensions:["mmf"]},"application/vnd.smart.notebook":{source:"iana"},"application/vnd.smart.teacher":{source:"iana",extensions:["teacher"]},"application/vnd.software602.filler.form+xml":{source:"iana",compressible:!0},"application/vnd.software602.filler.form-xml-zip":{source:"iana"},"application/vnd.solent.sdkm+xml":{source:"iana",compressible:!0,extensions:["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{source:"iana",extensions:["dxp"]},"application/vnd.spotfire.sfs":{source:"iana",extensions:["sfs"]},"application/vnd.sqlite3":{source:"iana"},"application/vnd.sss-cod":{source:"iana"},"application/vnd.sss-dtf":{source:"iana"},"application/vnd.sss-ntf":{source:"iana"},"application/vnd.stardivision.calc":{source:"apache",extensions:["sdc"]},"application/vnd.stardivision.draw":{source:"apache",extensions:["sda"]},"application/vnd.stardivision.impress":{source:"apache",extensions:["sdd"]},"application/vnd.stardivision.math":{source:"apache",extensions:["smf"]},"application/vnd.stardivision.writer":{source:"apache",extensions:["sdw","vor"]},"application/vnd.stardivision.writer-global":{source:"apache",extensions:["sgl"]},"application/vnd.stepmania.package":{source:"iana",extensions:["smzip"]},"application/vnd.stepmania.stepchart":{source:"iana",extensions:["sm"]},"application/vnd.street-stream":{source:"iana"},"application/vnd.sun.wadl+xml":{source:"iana",compressible:!0,extensions:["wadl"]},"application/vnd.sun.xml.calc":{source:"apache",extensions:["sxc"]},"application/vnd.sun.xml.calc.template":{source:"apache",extensions:["stc"]},"application/vnd.sun.xml.draw":{source:"apache",extensions:["sxd"]},"application/vnd.sun.xml.draw.template":{source:"apache",extensions:["std"]},"application/vnd.sun.xml.impress":{source:"apache",extensions:["sxi"]},"application/vnd.sun.xml.impress.template":{source:"apache",extensions:["sti"]},"application/vnd.sun.xml.math":{source:"apache",extensions:["sxm"]},"application/vnd.sun.xml.writer":{source:"apache",extensions:["sxw"]},"application/vnd.sun.xml.writer.global":{source:"apache",extensions:["sxg"]},"application/vnd.sun.xml.writer.template":{source:"apache",extensions:["stw"]},"application/vnd.sus-calendar":{source:"iana",extensions:["sus","susp"]},"application/vnd.svd":{source:"iana",extensions:["svd"]},"application/vnd.swiftview-ics":{source:"iana"},"application/vnd.symbian.install":{source:"apache",extensions:["sis","sisx"]},"application/vnd.syncml+xml":{source:"iana",compressible:!0,extensions:["xsm"]},"application/vnd.syncml.dm+wbxml":{source:"iana",extensions:["bdm"]},"application/vnd.syncml.dm+xml":{source:"iana",compressible:!0,extensions:["xdm"]},"application/vnd.syncml.dm.notification":{source:"iana"},"application/vnd.syncml.dmddf+wbxml":{source:"iana"},"application/vnd.syncml.dmddf+xml":{source:"iana",compressible:!0},"application/vnd.syncml.dmtnds+wbxml":{source:"iana"},"application/vnd.syncml.dmtnds+xml":{source:"iana",compressible:!0},"application/vnd.syncml.ds.notification":{source:"iana"},"application/vnd.tableschema+json":{source:"iana",compressible:!0},"application/vnd.tao.intent-module-archive":{source:"iana",extensions:["tao"]},"application/vnd.tcpdump.pcap":{source:"iana",extensions:["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{source:"iana",compressible:!0},"application/vnd.tmd.mediaflex.api+xml":{source:"iana",compressible:!0},"application/vnd.tml":{source:"iana"},"application/vnd.tmobile-livetv":{source:"iana",extensions:["tmo"]},"application/vnd.tri.onesource":{source:"iana"},"application/vnd.trid.tpt":{source:"iana",extensions:["tpt"]},"application/vnd.triscape.mxs":{source:"iana",extensions:["mxs"]},"application/vnd.trueapp":{source:"iana",extensions:["tra"]},"application/vnd.truedoc":{source:"iana"},"application/vnd.ubisoft.webplayer":{source:"iana"},"application/vnd.ufdl":{source:"iana",extensions:["ufd","ufdl"]},"application/vnd.uiq.theme":{source:"iana",extensions:["utz"]},"application/vnd.umajin":{source:"iana",extensions:["umj"]},"application/vnd.unity":{source:"iana",extensions:["unityweb"]},"application/vnd.uoml+xml":{source:"iana",compressible:!0,extensions:["uoml"]},"application/vnd.uplanet.alert":{source:"iana"},"application/vnd.uplanet.alert-wbxml":{source:"iana"},"application/vnd.uplanet.bearer-choice":{source:"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{source:"iana"},"application/vnd.uplanet.cacheop":{source:"iana"},"application/vnd.uplanet.cacheop-wbxml":{source:"iana"},"application/vnd.uplanet.channel":{source:"iana"},"application/vnd.uplanet.channel-wbxml":{source:"iana"},"application/vnd.uplanet.list":{source:"iana"},"application/vnd.uplanet.list-wbxml":{source:"iana"},"application/vnd.uplanet.listcmd":{source:"iana"},"application/vnd.uplanet.listcmd-wbxml":{source:"iana"},"application/vnd.uplanet.signal":{source:"iana"},"application/vnd.uri-map":{source:"iana"},"application/vnd.valve.source.material":{source:"iana"},"application/vnd.vcx":{source:"iana",extensions:["vcx"]},"application/vnd.vd-study":{source:"iana"},"application/vnd.vectorworks":{source:"iana"},"application/vnd.vel+json":{source:"iana",compressible:!0},"application/vnd.verimatrix.vcas":{source:"iana"},"application/vnd.vidsoft.vidconference":{source:"iana"},"application/vnd.visio":{source:"iana",extensions:["vsd","vst","vss","vsw"]},"application/vnd.visionary":{source:"iana",extensions:["vis"]},"application/vnd.vividence.scriptfile":{source:"iana"},"application/vnd.vsf":{source:"iana",extensions:["vsf"]},"application/vnd.wap.sic":{source:"iana"},"application/vnd.wap.slc":{source:"iana"},"application/vnd.wap.wbxml":{source:"iana",extensions:["wbxml"]},"application/vnd.wap.wmlc":{source:"iana",extensions:["wmlc"]},"application/vnd.wap.wmlscriptc":{source:"iana",extensions:["wmlsc"]},"application/vnd.webturbo":{source:"iana",extensions:["wtb"]},"application/vnd.wfa.p2p":{source:"iana"},"application/vnd.wfa.wsc":{source:"iana"},"application/vnd.windows.devicepairing":{source:"iana"},"application/vnd.wmc":{source:"iana"},"application/vnd.wmf.bootstrap":{source:"iana"},"application/vnd.wolfram.mathematica":{source:"iana"},"application/vnd.wolfram.mathematica.package":{source:"iana"},"application/vnd.wolfram.player":{source:"iana",extensions:["nbp"]},"application/vnd.wordperfect":{source:"iana",extensions:["wpd"]},"application/vnd.wqd":{source:"iana",extensions:["wqd"]},"application/vnd.wrq-hp3000-labelled":{source:"iana"},"application/vnd.wt.stf":{source:"iana",extensions:["stf"]},"application/vnd.wv.csp+wbxml":{source:"iana"},"application/vnd.wv.csp+xml":{source:"iana",compressible:!0},"application/vnd.wv.ssp+xml":{source:"iana",compressible:!0},"application/vnd.xacml+json":{source:"iana",compressible:!0},"application/vnd.xara":{source:"iana",extensions:["xar"]},"application/vnd.xfdl":{source:"iana",extensions:["xfdl"]},"application/vnd.xfdl.webform":{source:"iana"},"application/vnd.xmi+xml":{source:"iana",compressible:!0},"application/vnd.xmpie.cpkg":{source:"iana"},"application/vnd.xmpie.dpkg":{source:"iana"},"application/vnd.xmpie.plan":{source:"iana"},"application/vnd.xmpie.ppkg":{source:"iana"},"application/vnd.xmpie.xlim":{source:"iana"},"application/vnd.yamaha.hv-dic":{source:"iana",extensions:["hvd"]},"application/vnd.yamaha.hv-script":{source:"iana",extensions:["hvs"]},"application/vnd.yamaha.hv-voice":{source:"iana",extensions:["hvp"]},"application/vnd.yamaha.openscoreformat":{source:"iana",extensions:["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{source:"iana",compressible:!0,extensions:["osfpvg"]},"application/vnd.yamaha.remote-setup":{source:"iana"},"application/vnd.yamaha.smaf-audio":{source:"iana",extensions:["saf"]},"application/vnd.yamaha.smaf-phrase":{source:"iana",extensions:["spf"]},"application/vnd.yamaha.through-ngn":{source:"iana"},"application/vnd.yamaha.tunnel-udpencap":{source:"iana"},"application/vnd.yaoweme":{source:"iana"},"application/vnd.yellowriver-custom-menu":{source:"iana",extensions:["cmp"]},"application/vnd.youtube.yt":{source:"iana"},"application/vnd.zul":{source:"iana",extensions:["zir","zirz"]},"application/vnd.zzazz.deck+xml":{source:"iana",compressible:!0,extensions:["zaz"]},"application/voicexml+xml":{source:"iana",compressible:!0,extensions:["vxml"]},"application/voucher-cms+json":{source:"iana",compressible:!0},"application/vq-rtcpxr":{source:"iana"},"application/wasm":{compressible:!0,extensions:["wasm"]},"application/watcherinfo+xml":{source:"iana",compressible:!0},"application/webpush-options+json":{source:"iana",compressible:!0},"application/whoispp-query":{source:"iana"},"application/whoispp-response":{source:"iana"},"application/widget":{source:"iana",extensions:["wgt"]},"application/winhlp":{source:"apache",extensions:["hlp"]},"application/wita":{source:"iana"},"application/wordperfect5.1":{source:"iana"},"application/wsdl+xml":{source:"iana",compressible:!0,extensions:["wsdl"]},"application/wspolicy+xml":{source:"iana",compressible:!0,extensions:["wspolicy"]},"application/x-7z-compressed":{source:"apache",compressible:!1,extensions:["7z"]},"application/x-abiword":{source:"apache",extensions:["abw"]},"application/x-ace-compressed":{source:"apache",extensions:["ace"]},"application/x-amf":{source:"apache"},"application/x-apple-diskimage":{source:"apache",extensions:["dmg"]},"application/x-arj":{compressible:!1,extensions:["arj"]},"application/x-authorware-bin":{source:"apache",extensions:["aab","x32","u32","vox"]},"application/x-authorware-map":{source:"apache",extensions:["aam"]},"application/x-authorware-seg":{source:"apache",extensions:["aas"]},"application/x-bcpio":{source:"apache",extensions:["bcpio"]},"application/x-bdoc":{compressible:!1,extensions:["bdoc"]},"application/x-bittorrent":{source:"apache",extensions:["torrent"]},"application/x-blorb":{source:"apache",extensions:["blb","blorb"]},"application/x-bzip":{source:"apache",compressible:!1,extensions:["bz"]},"application/x-bzip2":{source:"apache",compressible:!1,extensions:["bz2","boz"]},"application/x-cbr":{source:"apache",extensions:["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{source:"apache",extensions:["vcd"]},"application/x-cfs-compressed":{source:"apache",extensions:["cfs"]},"application/x-chat":{source:"apache",extensions:["chat"]},"application/x-chess-pgn":{source:"apache",extensions:["pgn"]},"application/x-chrome-extension":{extensions:["crx"]},"application/x-cocoa":{source:"nginx",extensions:["cco"]},"application/x-compress":{source:"apache"},"application/x-conference":{source:"apache",extensions:["nsc"]},"application/x-cpio":{source:"apache",extensions:["cpio"]},"application/x-csh":{source:"apache",extensions:["csh"]},"application/x-deb":{compressible:!1},"application/x-debian-package":{source:"apache",extensions:["deb","udeb"]},"application/x-dgc-compressed":{source:"apache",extensions:["dgc"]},"application/x-director":{source:"apache",extensions:["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{source:"apache",extensions:["wad"]},"application/x-dtbncx+xml":{source:"apache",compressible:!0,extensions:["ncx"]},"application/x-dtbook+xml":{source:"apache",compressible:!0,extensions:["dtb"]},"application/x-dtbresource+xml":{source:"apache",compressible:!0,extensions:["res"]},"application/x-dvi":{source:"apache",compressible:!1,extensions:["dvi"]},"application/x-envoy":{source:"apache",extensions:["evy"]},"application/x-eva":{source:"apache",extensions:["eva"]},"application/x-font-bdf":{source:"apache",extensions:["bdf"]},"application/x-font-dos":{source:"apache"},"application/x-font-framemaker":{source:"apache"},"application/x-font-ghostscript":{source:"apache",extensions:["gsf"]},"application/x-font-libgrx":{source:"apache"},"application/x-font-linux-psf":{source:"apache",extensions:["psf"]},"application/x-font-pcf":{source:"apache",extensions:["pcf"]},"application/x-font-snf":{source:"apache",extensions:["snf"]},"application/x-font-speedo":{source:"apache"},"application/x-font-sunos-news":{source:"apache"},"application/x-font-type1":{source:"apache",extensions:["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{source:"apache"},"application/x-freearc":{source:"apache",extensions:["arc"]},"application/x-futuresplash":{source:"apache",extensions:["spl"]},"application/x-gca-compressed":{source:"apache",extensions:["gca"]},"application/x-glulx":{source:"apache",extensions:["ulx"]},"application/x-gnumeric":{source:"apache",extensions:["gnumeric"]},"application/x-gramps-xml":{source:"apache",extensions:["gramps"]},"application/x-gtar":{source:"apache",extensions:["gtar"]},"application/x-gzip":{source:"apache"},"application/x-hdf":{source:"apache",extensions:["hdf"]},"application/x-httpd-php":{compressible:!0,extensions:["php"]},"application/x-install-instructions":{source:"apache",extensions:["install"]},"application/x-iso9660-image":{source:"apache",extensions:["iso"]},"application/x-java-archive-diff":{source:"nginx",extensions:["jardiff"]},"application/x-java-jnlp-file":{source:"apache",compressible:!1,extensions:["jnlp"]},"application/x-javascript":{compressible:!0},"application/x-latex":{source:"apache",compressible:!1,extensions:["latex"]},"application/x-lua-bytecode":{extensions:["luac"]},"application/x-lzh-compressed":{source:"apache",extensions:["lzh","lha"]},"application/x-makeself":{source:"nginx",extensions:["run"]},"application/x-mie":{source:"apache",extensions:["mie"]},"application/x-mobipocket-ebook":{source:"apache",extensions:["prc","mobi"]},"application/x-mpegurl":{compressible:!1},"application/x-ms-application":{source:"apache",extensions:["application"]},"application/x-ms-shortcut":{source:"apache",extensions:["lnk"]},"application/x-ms-wmd":{source:"apache",extensions:["wmd"]},"application/x-ms-wmz":{source:"apache",extensions:["wmz"]},"application/x-ms-xbap":{source:"apache",extensions:["xbap"]},"application/x-msaccess":{source:"apache",extensions:["mdb"]},"application/x-msbinder":{source:"apache",extensions:["obd"]},"application/x-mscardfile":{source:"apache",extensions:["crd"]},"application/x-msclip":{source:"apache",extensions:["clp"]},"application/x-msdos-program":{extensions:["exe"]},"application/x-msdownload":{source:"apache",extensions:["exe","dll","com","bat","msi"]},"application/x-msmediaview":{source:"apache",extensions:["mvb","m13","m14"]},"application/x-msmetafile":{source:"apache",extensions:["wmf","wmz","emf","emz"]},"application/x-msmoney":{source:"apache",extensions:["mny"]},"application/x-mspublisher":{source:"apache",extensions:["pub"]},"application/x-msschedule":{source:"apache",extensions:["scd"]},"application/x-msterminal":{source:"apache",extensions:["trm"]},"application/x-mswrite":{source:"apache",extensions:["wri"]},"application/x-netcdf":{source:"apache",extensions:["nc","cdf"]},"application/x-ns-proxy-autoconfig":{compressible:!0,extensions:["pac"]},"application/x-nzb":{source:"apache",extensions:["nzb"]},"application/x-perl":{source:"nginx",extensions:["pl","pm"]},"application/x-pilot":{source:"nginx",extensions:["prc","pdb"]},"application/x-pkcs12":{source:"apache",compressible:!1,extensions:["p12","pfx"]},"application/x-pkcs7-certificates":{source:"apache",extensions:["p7b","spc"]},"application/x-pkcs7-certreqresp":{source:"apache",extensions:["p7r"]},"application/x-rar-compressed":{source:"apache",compressible:!1,extensions:["rar"]},"application/x-redhat-package-manager":{source:"nginx",extensions:["rpm"]},"application/x-research-info-systems":{source:"apache",extensions:["ris"]},"application/x-sea":{source:"nginx",extensions:["sea"]},"application/x-sh":{source:"apache",compressible:!0,extensions:["sh"]},"application/x-shar":{source:"apache",extensions:["shar"]},"application/x-shockwave-flash":{source:"apache",compressible:!1,extensions:["swf"]},"application/x-silverlight-app":{source:"apache",extensions:["xap"]},"application/x-sql":{source:"apache",extensions:["sql"]},"application/x-stuffit":{source:"apache",compressible:!1,extensions:["sit"]},"application/x-stuffitx":{source:"apache",extensions:["sitx"]},"application/x-subrip":{source:"apache",extensions:["srt"]},"application/x-sv4cpio":{source:"apache",extensions:["sv4cpio"]},"application/x-sv4crc":{source:"apache",extensions:["sv4crc"]},"application/x-t3vm-image":{source:"apache",extensions:["t3"]},"application/x-tads":{source:"apache",extensions:["gam"]},"application/x-tar":{source:"apache",compressible:!0,extensions:["tar"]},"application/x-tcl":{source:"apache",extensions:["tcl","tk"]},"application/x-tex":{source:"apache",extensions:["tex"]},"application/x-tex-tfm":{source:"apache",extensions:["tfm"]},"application/x-texinfo":{source:"apache",extensions:["texinfo","texi"]},"application/x-tgif":{source:"apache",extensions:["obj"]},"application/x-ustar":{source:"apache",extensions:["ustar"]},"application/x-virtualbox-hdd":{compressible:!0,extensions:["hdd"]},"application/x-virtualbox-ova":{compressible:!0,extensions:["ova"]},"application/x-virtualbox-ovf":{compressible:!0,extensions:["ovf"]},"application/x-virtualbox-vbox":{compressible:!0,extensions:["vbox"]},"application/x-virtualbox-vbox-extpack":{compressible:!1,extensions:["vbox-extpack"]},"application/x-virtualbox-vdi":{compressible:!0,extensions:["vdi"]},"application/x-virtualbox-vhd":{compressible:!0,extensions:["vhd"]},"application/x-virtualbox-vmdk":{compressible:!0,extensions:["vmdk"]},"application/x-wais-source":{source:"apache",extensions:["src"]},"application/x-web-app-manifest+json":{compressible:!0,extensions:["webapp"]},"application/x-www-form-urlencoded":{source:"iana",compressible:!0},"application/x-x509-ca-cert":{source:"apache",extensions:["der","crt","pem"]},"application/x-xfig":{source:"apache",extensions:["fig"]},"application/x-xliff+xml":{source:"apache",compressible:!0,extensions:["xlf"]},"application/x-xpinstall":{source:"apache",compressible:!1,extensions:["xpi"]},"application/x-xz":{source:"apache",extensions:["xz"]},"application/x-zmachine":{source:"apache",extensions:["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{source:"iana"},"application/xacml+xml":{source:"iana",compressible:!0},"application/xaml+xml":{source:"apache",compressible:!0,extensions:["xaml"]},"application/xcap-att+xml":{source:"iana",compressible:!0},"application/xcap-caps+xml":{source:"iana",compressible:!0},"application/xcap-diff+xml":{source:"iana",compressible:!0,extensions:["xdf"]},"application/xcap-el+xml":{source:"iana",compressible:!0},"application/xcap-error+xml":{source:"iana",compressible:!0},"application/xcap-ns+xml":{source:"iana",compressible:!0},"application/xcon-conference-info+xml":{source:"iana",compressible:!0},"application/xcon-conference-info-diff+xml":{source:"iana",compressible:!0},"application/xenc+xml":{source:"iana",compressible:!0,extensions:["xenc"]},"application/xhtml+xml":{source:"iana",compressible:!0,extensions:["xhtml","xht"]},"application/xhtml-voice+xml":{source:"apache",compressible:!0},"application/xliff+xml":{source:"iana",compressible:!0},"application/xml":{source:"iana",compressible:!0,extensions:["xml","xsl","xsd","rng"]},"application/xml-dtd":{source:"iana",compressible:!0,extensions:["dtd"]},"application/xml-external-parsed-entity":{source:"iana"},"application/xml-patch+xml":{source:"iana",compressible:!0},"application/xmpp+xml":{source:"iana",compressible:!0},"application/xop+xml":{source:"iana",compressible:!0,extensions:["xop"]},"application/xproc+xml":{source:"apache",compressible:!0,extensions:["xpl"]},"application/xslt+xml":{source:"iana",compressible:!0,extensions:["xslt"]},"application/xspf+xml":{source:"apache",compressible:!0,extensions:["xspf"]},"application/xv+xml":{source:"iana",compressible:!0,extensions:["mxml","xhvml","xvml","xvm"]},"application/yang":{source:"iana",extensions:["yang"]},"application/yang-data+json":{source:"iana",compressible:!0},"application/yang-data+xml":{source:"iana",compressible:!0},"application/yang-patch+json":{source:"iana",compressible:!0},"application/yang-patch+xml":{source:"iana",compressible:!0},"application/yin+xml":{source:"iana",compressible:!0,extensions:["yin"]},"application/zip":{source:"iana",compressible:!1,extensions:["zip"]},"application/zlib":{source:"iana"},"application/zstd":{source:"iana"},"audio/1d-interleaved-parityfec":{source:"iana"},"audio/32kadpcm":{source:"iana"},"audio/3gpp":{source:"iana",compressible:!1,extensions:["3gpp"]},"audio/3gpp2":{source:"iana"},"audio/aac":{source:"iana"},"audio/ac3":{source:"iana"},"audio/adpcm":{source:"apache",extensions:["adp"]},"audio/amr":{source:"iana"},"audio/amr-wb":{source:"iana"},"audio/amr-wb+":{source:"iana"},"audio/aptx":{source:"iana"},"audio/asc":{source:"iana"},"audio/atrac-advanced-lossless":{source:"iana"},"audio/atrac-x":{source:"iana"},"audio/atrac3":{source:"iana"},"audio/basic":{source:"iana",compressible:!1,extensions:["au","snd"]},"audio/bv16":{source:"iana"},"audio/bv32":{source:"iana"},"audio/clearmode":{source:"iana"},"audio/cn":{source:"iana"},"audio/dat12":{source:"iana"},"audio/dls":{source:"iana"},"audio/dsr-es201108":{source:"iana"},"audio/dsr-es202050":{source:"iana"},"audio/dsr-es202211":{source:"iana"},"audio/dsr-es202212":{source:"iana"},"audio/dv":{source:"iana"},"audio/dvi4":{source:"iana"},"audio/eac3":{source:"iana"},"audio/encaprtp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc-qcp":{source:"iana"},"audio/evrc0":{source:"iana"},"audio/evrc1":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb0":{source:"iana"},"audio/evrcb1":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw0":{source:"iana"},"audio/evrcnw1":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb0":{source:"iana"},"audio/evrcwb1":{source:"iana"},"audio/evs":{source:"iana"},"audio/fwdred":{source:"iana"},"audio/g711-0":{source:"iana"},"audio/g719":{source:"iana"},"audio/g722":{source:"iana"},"audio/g7221":{source:"iana"},"audio/g723":{source:"iana"},"audio/g726-16":{source:"iana"},"audio/g726-24":{source:"iana"},"audio/g726-32":{source:"iana"},"audio/g726-40":{source:"iana"},"audio/g728":{source:"iana"},"audio/g729":{source:"iana"},"audio/g7291":{source:"iana"},"audio/g729d":{source:"iana"},"audio/g729e":{source:"iana"},"audio/gsm":{source:"iana"},"audio/gsm-efr":{source:"iana"},"audio/gsm-hr-08":{source:"iana"},"audio/ilbc":{source:"iana"},"audio/ip-mr_v2.5":{source:"iana"},"audio/isac":{source:"apache"},"audio/l16":{source:"iana"},"audio/l20":{source:"iana"},"audio/l24":{source:"iana",compressible:!1},"audio/l8":{source:"iana"},"audio/lpc":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp1200":{source:"iana"},"audio/melp2400":{source:"iana"},"audio/melp600":{source:"iana"},"audio/midi":{source:"apache",extensions:["mid","midi","kar","rmi"]},"audio/mobile-xmf":{source:"iana"},"audio/mp3":{compressible:!1,extensions:["mp3"]},"audio/mp4":{source:"iana",compressible:!1,extensions:["m4a","mp4a"]},"audio/mp4a-latm":{source:"iana"},"audio/mpa":{source:"iana"},"audio/mpa-robust":{source:"iana"},"audio/mpeg":{source:"iana",compressible:!1,extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{source:"iana"},"audio/musepack":{source:"apache"},"audio/ogg":{source:"iana",compressible:!1,extensions:["oga","ogg","spx"]},"audio/opus":{source:"iana"},"audio/parityfec":{source:"iana"},"audio/pcma":{source:"iana"},"audio/pcma-wb":{source:"iana"},"audio/pcmu":{source:"iana"},"audio/pcmu-wb":{source:"iana"},"audio/prs.sid":{source:"iana"},"audio/qcelp":{source:"iana"},"audio/raptorfec":{source:"iana"},"audio/red":{source:"iana"},"audio/rtp-enc-aescm128":{source:"iana"},"audio/rtp-midi":{source:"iana"},"audio/rtploopback":{source:"iana"},"audio/rtx":{source:"iana"},"audio/s3m":{source:"apache",extensions:["s3m"]},"audio/silk":{source:"apache",extensions:["sil"]},"audio/smv":{source:"iana"},"audio/smv-qcp":{source:"iana"},"audio/smv0":{source:"iana"},"audio/sp-midi":{source:"iana"},"audio/speex":{source:"iana"},"audio/t140c":{source:"iana"},"audio/t38":{source:"iana"},"audio/telephone-event":{source:"iana"},"audio/tone":{source:"iana"},"audio/uemclip":{source:"iana"},"audio/ulpfec":{source:"iana"},"audio/usac":{source:"iana"},"audio/vdvi":{source:"iana"},"audio/vmr-wb":{source:"iana"},"audio/vnd.3gpp.iufp":{source:"iana"},"audio/vnd.4sb":{source:"iana"},"audio/vnd.audiokoz":{source:"iana"},"audio/vnd.celp":{source:"iana"},"audio/vnd.cisco.nse":{source:"iana"},"audio/vnd.cmles.radio-events":{source:"iana"},"audio/vnd.cns.anp1":{source:"iana"},"audio/vnd.cns.inf1":{source:"iana"},"audio/vnd.dece.audio":{source:"iana",extensions:["uva","uvva"]},"audio/vnd.digital-winds":{source:"iana",extensions:["eol"]},"audio/vnd.dlna.adts":{source:"iana"},"audio/vnd.dolby.heaac.1":{source:"iana"},"audio/vnd.dolby.heaac.2":{source:"iana"},"audio/vnd.dolby.mlp":{source:"iana"},"audio/vnd.dolby.mps":{source:"iana"},"audio/vnd.dolby.pl2":{source:"iana"},"audio/vnd.dolby.pl2x":{source:"iana"},"audio/vnd.dolby.pl2z":{source:"iana"},"audio/vnd.dolby.pulse.1":{source:"iana"},"audio/vnd.dra":{source:"iana",extensions:["dra"]},"audio/vnd.dts":{source:"iana",extensions:["dts"]},"audio/vnd.dts.hd":{source:"iana",extensions:["dtshd"]},"audio/vnd.dvb.file":{source:"iana"},"audio/vnd.everad.plj":{source:"iana"},"audio/vnd.hns.audio":{source:"iana"},"audio/vnd.lucent.voice":{source:"iana",extensions:["lvp"]},"audio/vnd.ms-playready.media.pya":{source:"iana",extensions:["pya"]},"audio/vnd.nokia.mobile-xmf":{source:"iana"},"audio/vnd.nortel.vbk":{source:"iana"},"audio/vnd.nuera.ecelp4800":{source:"iana",extensions:["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{source:"iana",extensions:["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{source:"iana",extensions:["ecelp9600"]},"audio/vnd.octel.sbc":{source:"iana"},"audio/vnd.presonus.multitrack":{source:"iana"},"audio/vnd.qcelp":{source:"iana"},"audio/vnd.rhetorex.32kadpcm":{source:"iana"},"audio/vnd.rip":{source:"iana",extensions:["rip"]},"audio/vnd.rn-realaudio":{compressible:!1},"audio/vnd.sealedmedia.softseal.mpeg":{source:"iana"},"audio/vnd.vmx.cvsd":{source:"iana"},"audio/vnd.wave":{compressible:!1},"audio/vorbis":{source:"iana",compressible:!1},"audio/vorbis-config":{source:"iana"},"audio/wav":{compressible:!1,extensions:["wav"]},"audio/wave":{compressible:!1,extensions:["wav"]},"audio/webm":{source:"apache",compressible:!1,extensions:["weba"]},"audio/x-aac":{source:"apache",compressible:!1,extensions:["aac"]},"audio/x-aiff":{source:"apache",extensions:["aif","aiff","aifc"]},"audio/x-caf":{source:"apache",compressible:!1,extensions:["caf"]},"audio/x-flac":{source:"apache",extensions:["flac"]},"audio/x-m4a":{source:"nginx",extensions:["m4a"]},"audio/x-matroska":{source:"apache",extensions:["mka"]},"audio/x-mpegurl":{source:"apache",extensions:["m3u"]},"audio/x-ms-wax":{source:"apache",extensions:["wax"]},"audio/x-ms-wma":{source:"apache",extensions:["wma"]},"audio/x-pn-realaudio":{source:"apache",extensions:["ram","ra"]},"audio/x-pn-realaudio-plugin":{source:"apache",extensions:["rmp"]},"audio/x-realaudio":{source:"nginx",extensions:["ra"]},"audio/x-tta":{source:"apache"},"audio/x-wav":{source:"apache",extensions:["wav"]},"audio/xm":{source:"apache",extensions:["xm"]},"chemical/x-cdx":{source:"apache",extensions:["cdx"]},"chemical/x-cif":{source:"apache",extensions:["cif"]},"chemical/x-cmdf":{source:"apache",extensions:["cmdf"]},"chemical/x-cml":{source:"apache",extensions:["cml"]},"chemical/x-csml":{source:"apache",extensions:["csml"]},"chemical/x-pdb":{source:"apache"},"chemical/x-xyz":{source:"apache",extensions:["xyz"]},"font/collection":{source:"iana",extensions:["ttc"]},"font/otf":{source:"iana",compressible:!0,extensions:["otf"]},"font/sfnt":{source:"iana"},"font/ttf":{source:"iana",extensions:["ttf"]},"font/woff":{source:"iana",extensions:["woff"]},"font/woff2":{source:"iana",extensions:["woff2"]},"image/aces":{source:"iana",extensions:["exr"]},"image/apng":{compressible:!1,extensions:["apng"]},"image/avci":{source:"iana"},"image/avcs":{source:"iana"},"image/bmp":{source:"iana",compressible:!0,extensions:["bmp"]},"image/cgm":{source:"iana",extensions:["cgm"]},"image/dicom-rle":{source:"iana",extensions:["drle"]},"image/emf":{source:"iana",extensions:["emf"]},"image/fits":{source:"iana",extensions:["fits"]},"image/g3fax":{source:"iana",extensions:["g3"]},"image/gif":{source:"iana",compressible:!1,extensions:["gif"]},"image/heic":{source:"iana",extensions:["heic"]},"image/heic-sequence":{source:"iana",extensions:["heics"]},"image/heif":{source:"iana",extensions:["heif"]},"image/heif-sequence":{source:"iana",extensions:["heifs"]},"image/ief":{source:"iana",extensions:["ief"]},"image/jls":{source:"iana",extensions:["jls"]},"image/jp2":{source:"iana",compressible:!1,extensions:["jp2","jpg2"]},"image/jpeg":{source:"iana",compressible:!1,extensions:["jpeg","jpg","jpe"]},"image/jpm":{source:"iana",compressible:!1,extensions:["jpm"]},"image/jpx":{source:"iana",compressible:!1,extensions:["jpx","jpf"]},"image/ktx":{source:"iana",extensions:["ktx"]},"image/naplps":{source:"iana"},"image/pjpeg":{compressible:!1},"image/png":{source:"iana",compressible:!1,extensions:["png"]},"image/prs.btif":{source:"iana",extensions:["btif"]},"image/prs.pti":{source:"iana",extensions:["pti"]},"image/pwg-raster":{source:"iana"},"image/sgi":{source:"apache",extensions:["sgi"]},"image/svg+xml":{source:"iana",compressible:!0,extensions:["svg","svgz"]},"image/t38":{source:"iana",extensions:["t38"]},"image/tiff":{source:"iana",compressible:!1,extensions:["tif","tiff"]},"image/tiff-fx":{source:"iana",extensions:["tfx"]},"image/vnd.adobe.photoshop":{source:"iana",compressible:!0,extensions:["psd"]},"image/vnd.airzip.accelerator.azv":{source:"iana",extensions:["azv"]},"image/vnd.cns.inf2":{source:"iana"},"image/vnd.dece.graphic":{source:"iana",extensions:["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{source:"iana",extensions:["djvu","djv"]},"image/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"image/vnd.dwg":{source:"iana",extensions:["dwg"]},"image/vnd.dxf":{source:"iana",extensions:["dxf"]},"image/vnd.fastbidsheet":{source:"iana",extensions:["fbs"]},"image/vnd.fpx":{source:"iana",extensions:["fpx"]},"image/vnd.fst":{source:"iana",extensions:["fst"]},"image/vnd.fujixerox.edmics-mmr":{source:"iana",extensions:["mmr"]},"image/vnd.fujixerox.edmics-rlc":{source:"iana",extensions:["rlc"]},"image/vnd.globalgraphics.pgb":{source:"iana"},"image/vnd.microsoft.icon":{source:"iana",extensions:["ico"]},"image/vnd.mix":{source:"iana"},"image/vnd.mozilla.apng":{source:"iana"},"image/vnd.ms-modi":{source:"iana",extensions:["mdi"]},"image/vnd.ms-photo":{source:"apache",extensions:["wdp"]},"image/vnd.net-fpx":{source:"iana",extensions:["npx"]},"image/vnd.radiance":{source:"iana"},"image/vnd.sealed.png":{source:"iana"},"image/vnd.sealedmedia.softseal.gif":{source:"iana"},"image/vnd.sealedmedia.softseal.jpg":{source:"iana"},"image/vnd.svf":{source:"iana"},"image/vnd.tencent.tap":{source:"iana",extensions:["tap"]},"image/vnd.valve.source.texture":{source:"iana",extensions:["vtf"]},"image/vnd.wap.wbmp":{source:"iana",extensions:["wbmp"]},"image/vnd.xiff":{source:"iana",extensions:["xif"]},"image/vnd.zbrush.pcx":{source:"iana",extensions:["pcx"]},"image/webp":{source:"apache",extensions:["webp"]},"image/wmf":{source:"iana",extensions:["wmf"]},"image/x-3ds":{source:"apache",extensions:["3ds"]},"image/x-cmu-raster":{source:"apache",extensions:["ras"]},"image/x-cmx":{source:"apache",extensions:["cmx"]},"image/x-freehand":{source:"apache",extensions:["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{source:"apache",compressible:!0,extensions:["ico"]},"image/x-jng":{source:"nginx",extensions:["jng"]},"image/x-mrsid-image":{source:"apache",extensions:["sid"]},"image/x-ms-bmp":{source:"nginx",compressible:!0,extensions:["bmp"]},"image/x-pcx":{source:"apache",extensions:["pcx"]},"image/x-pict":{source:"apache",extensions:["pic","pct"]},"image/x-portable-anymap":{source:"apache",extensions:["pnm"]},"image/x-portable-bitmap":{source:"apache",extensions:["pbm"]},"image/x-portable-graymap":{source:"apache",extensions:["pgm"]},"image/x-portable-pixmap":{source:"apache",extensions:["ppm"]},"image/x-rgb":{source:"apache",extensions:["rgb"]},"image/x-tga":{source:"apache",extensions:["tga"]},"image/x-xbitmap":{source:"apache",extensions:["xbm"]},"image/x-xcf":{compressible:!1},"image/x-xpixmap":{source:"apache",extensions:["xpm"]},"image/x-xwindowdump":{source:"apache",extensions:["xwd"]},"message/cpim":{source:"iana"},"message/delivery-status":{source:"iana"},"message/disposition-notification":{source:"iana",extensions:["disposition-notification"]},"message/external-body":{source:"iana"},"message/feedback-report":{source:"iana"},"message/global":{source:"iana",extensions:["u8msg"]},"message/global-delivery-status":{source:"iana",extensions:["u8dsn"]},"message/global-disposition-notification":{source:"iana",extensions:["u8mdn"]},"message/global-headers":{source:"iana",extensions:["u8hdr"]},"message/http":{source:"iana",compressible:!1},"message/imdn+xml":{source:"iana",compressible:!0},"message/news":{source:"iana"},"message/partial":{source:"iana",compressible:!1},"message/rfc822":{source:"iana",compressible:!0,extensions:["eml","mime"]},"message/s-http":{source:"iana"},"message/sip":{source:"iana"},"message/sipfrag":{source:"iana"},"message/tracking-status":{source:"iana"},"message/vnd.si.simp":{source:"iana"},"message/vnd.wfa.wsc":{source:"iana",extensions:["wsc"]},"model/3mf":{source:"iana"},"model/gltf+json":{source:"iana",compressible:!0,extensions:["gltf"]},"model/gltf-binary":{source:"iana",compressible:!0,extensions:["glb"]},"model/iges":{source:"iana",compressible:!1,extensions:["igs","iges"]},"model/mesh":{source:"iana",compressible:!1,extensions:["msh","mesh","silo"]},"model/stl":{source:"iana"},"model/vnd.collada+xml":{source:"iana",compressible:!0,extensions:["dae"]},"model/vnd.dwf":{source:"iana",extensions:["dwf"]},"model/vnd.flatland.3dml":{source:"iana"},"model/vnd.gdl":{source:"iana",extensions:["gdl"]},"model/vnd.gs-gdl":{source:"apache"},"model/vnd.gs.gdl":{source:"iana"},"model/vnd.gtw":{source:"iana",extensions:["gtw"]},"model/vnd.moml+xml":{source:"iana",compressible:!0},"model/vnd.mts":{source:"iana",extensions:["mts"]},"model/vnd.opengex":{source:"iana"},"model/vnd.parasolid.transmit.binary":{source:"iana"},"model/vnd.parasolid.transmit.text":{source:"iana"},"model/vnd.rosette.annotated-data-model":{source:"iana"},"model/vnd.usdz+zip":{source:"iana",compressible:!1},"model/vnd.valve.source.compiled-map":{source:"iana"},"model/vnd.vtu":{source:"iana",extensions:["vtu"]},"model/vrml":{source:"iana",compressible:!1,extensions:["wrl","vrml"]},"model/x3d+binary":{source:"apache",compressible:!1,extensions:["x3db","x3dbz"]},"model/x3d+fastinfoset":{source:"iana"},"model/x3d+vrml":{source:"apache",compressible:!1,extensions:["x3dv","x3dvz"]},"model/x3d+xml":{source:"iana",compressible:!0,extensions:["x3d","x3dz"]},"model/x3d-vrml":{source:"iana"},"multipart/alternative":{source:"iana",compressible:!1},"multipart/appledouble":{source:"iana"},"multipart/byteranges":{source:"iana"},"multipart/digest":{source:"iana"},"multipart/encrypted":{source:"iana",compressible:!1},"multipart/form-data":{source:"iana",compressible:!1},"multipart/header-set":{source:"iana"},"multipart/mixed":{source:"iana",compressible:!1},"multipart/multilingual":{source:"iana"},"multipart/parallel":{source:"iana"},"multipart/related":{source:"iana",compressible:!1},"multipart/report":{source:"iana"},"multipart/signed":{source:"iana",compressible:!1},"multipart/vnd.bint.med-plus":{source:"iana"},"multipart/voice-message":{source:"iana"},"multipart/x-mixed-replace":{source:"iana"},"text/1d-interleaved-parityfec":{source:"iana"},"text/cache-manifest":{source:"iana",compressible:!0,extensions:["appcache","manifest"]},"text/calendar":{source:"iana",extensions:["ics","ifb"]},"text/calender":{compressible:!0},"text/cmd":{compressible:!0},"text/coffeescript":{extensions:["coffee","litcoffee"]},"text/css":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["css"]},"text/csv":{source:"iana",compressible:!0,extensions:["csv"]},"text/csv-schema":{source:"iana"},"text/directory":{source:"iana"},"text/dns":{source:"iana"},"text/ecmascript":{source:"iana"},"text/encaprtp":{source:"iana"},"text/enriched":{source:"iana"},"text/fwdred":{source:"iana"},"text/grammar-ref-list":{source:"iana"},"text/html":{source:"iana",compressible:!0,extensions:["html","htm","shtml"]},"text/jade":{extensions:["jade"]},"text/javascript":{source:"iana",compressible:!0},"text/jcr-cnd":{source:"iana"},"text/jsx":{compressible:!0,extensions:["jsx"]},"text/less":{extensions:["less"]},"text/markdown":{source:"iana",compressible:!0,extensions:["markdown","md"]},"text/mathml":{source:"nginx",extensions:["mml"]},"text/mizar":{source:"iana"},"text/n3":{source:"iana",compressible:!0,extensions:["n3"]},"text/parameters":{source:"iana"},"text/parityfec":{source:"iana"},"text/plain":{source:"iana",compressible:!0,extensions:["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{source:"iana"},"text/prs.fallenstein.rst":{source:"iana"},"text/prs.lines.tag":{source:"iana",extensions:["dsc"]},"text/prs.prop.logic":{source:"iana"},"text/raptorfec":{source:"iana"},"text/red":{source:"iana"},"text/rfc822-headers":{source:"iana"},"text/richtext":{source:"iana",compressible:!0,extensions:["rtx"]},"text/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"text/rtp-enc-aescm128":{source:"iana"},"text/rtploopback":{source:"iana"},"text/rtx":{source:"iana"},"text/sgml":{source:"iana",extensions:["sgml","sgm"]},"text/shex":{extensions:["shex"]},"text/slim":{extensions:["slim","slm"]},"text/strings":{source:"iana"},"text/stylus":{extensions:["stylus","styl"]},"text/t140":{source:"iana"},"text/tab-separated-values":{source:"iana",compressible:!0,extensions:["tsv"]},"text/troff":{source:"iana",extensions:["t","tr","roff","man","me","ms"]},"text/turtle":{source:"iana",charset:"UTF-8",extensions:["ttl"]},"text/ulpfec":{source:"iana"},"text/uri-list":{source:"iana",compressible:!0,extensions:["uri","uris","urls"]},"text/vcard":{source:"iana",compressible:!0,extensions:["vcard"]},"text/vnd.a":{source:"iana"},"text/vnd.abc":{source:"iana"},"text/vnd.ascii-art":{source:"iana"},"text/vnd.curl":{source:"iana",extensions:["curl"]},"text/vnd.curl.dcurl":{source:"apache",extensions:["dcurl"]},"text/vnd.curl.mcurl":{source:"apache",extensions:["mcurl"]},"text/vnd.curl.scurl":{source:"apache",extensions:["scurl"]},"text/vnd.debian.copyright":{source:"iana"},"text/vnd.dmclientscript":{source:"iana"},"text/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"text/vnd.esmertec.theme-descriptor":{source:"iana"},"text/vnd.fly":{source:"iana",extensions:["fly"]},"text/vnd.fmi.flexstor":{source:"iana",extensions:["flx"]},"text/vnd.gml":{source:"iana"},"text/vnd.graphviz":{source:"iana",extensions:["gv"]},"text/vnd.hgl":{source:"iana"},"text/vnd.in3d.3dml":{source:"iana",extensions:["3dml"]},"text/vnd.in3d.spot":{source:"iana",extensions:["spot"]},"text/vnd.iptc.newsml":{source:"iana"},"text/vnd.iptc.nitf":{source:"iana"},"text/vnd.latex-z":{source:"iana"},"text/vnd.motorola.reflex":{source:"iana"},"text/vnd.ms-mediapackage":{source:"iana"},"text/vnd.net2phone.commcenter.command":{source:"iana"},"text/vnd.radisys.msml-basic-layout":{source:"iana"},"text/vnd.si.uricatalogue":{source:"iana"},"text/vnd.sun.j2me.app-descriptor":{source:"iana",extensions:["jad"]},"text/vnd.trolltech.linguist":{source:"iana"},"text/vnd.wap.si":{source:"iana"},"text/vnd.wap.sl":{source:"iana"},"text/vnd.wap.wml":{source:"iana",extensions:["wml"]},"text/vnd.wap.wmlscript":{source:"iana",extensions:["wmls"]},"text/vtt":{charset:"UTF-8",compressible:!0,extensions:["vtt"]},"text/x-asm":{source:"apache",extensions:["s","asm"]},"text/x-c":{source:"apache",extensions:["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{source:"nginx",extensions:["htc"]},"text/x-fortran":{source:"apache",extensions:["f","for","f77","f90"]},"text/x-gwt-rpc":{compressible:!0},"text/x-handlebars-template":{extensions:["hbs"]},"text/x-java-source":{source:"apache",extensions:["java"]},"text/x-jquery-tmpl":{compressible:!0},"text/x-lua":{extensions:["lua"]},"text/x-markdown":{compressible:!0,extensions:["mkd"]},"text/x-nfo":{source:"apache",extensions:["nfo"]},"text/x-opml":{source:"apache",extensions:["opml"]},"text/x-org":{compressible:!0,extensions:["org"]},"text/x-pascal":{source:"apache",extensions:["p","pas"]},"text/x-processing":{compressible:!0,extensions:["pde"]},"text/x-sass":{extensions:["sass"]},"text/x-scss":{extensions:["scss"]},"text/x-setext":{source:"apache",extensions:["etx"]},"text/x-sfv":{source:"apache",extensions:["sfv"]},"text/x-suse-ymp":{compressible:!0,extensions:["ymp"]},"text/x-uuencode":{source:"apache",extensions:["uu"]},"text/x-vcalendar":{source:"apache",extensions:["vcs"]},"text/x-vcard":{source:"apache",extensions:["vcf"]},"text/xml":{source:"iana",compressible:!0,extensions:["xml"]},"text/xml-external-parsed-entity":{source:"iana"},"text/yaml":{extensions:["yaml","yml"]},"video/1d-interleaved-parityfec":{source:"iana"},"video/3gpp":{source:"iana",extensions:["3gp","3gpp"]},"video/3gpp-tt":{source:"iana"},"video/3gpp2":{source:"iana",extensions:["3g2"]},"video/bmpeg":{source:"iana"},"video/bt656":{source:"iana"},"video/celb":{source:"iana"},"video/dv":{source:"iana"},"video/encaprtp":{source:"iana"},"video/h261":{source:"iana",extensions:["h261"]},"video/h263":{source:"iana",extensions:["h263"]},"video/h263-1998":{source:"iana"},"video/h263-2000":{source:"iana"},"video/h264":{source:"iana",extensions:["h264"]},"video/h264-rcdo":{source:"iana"},"video/h264-svc":{source:"iana"},"video/h265":{source:"iana"},"video/iso.segment":{source:"iana"},"video/jpeg":{source:"iana",extensions:["jpgv"]},"video/jpeg2000":{source:"iana"},"video/jpm":{source:"apache",extensions:["jpm","jpgm"]},"video/mj2":{source:"iana",extensions:["mj2","mjp2"]},"video/mp1s":{source:"iana"},"video/mp2p":{source:"iana"},"video/mp2t":{source:"iana",extensions:["ts"]},"video/mp4":{source:"iana",compressible:!1,extensions:["mp4","mp4v","mpg4"]},"video/mp4v-es":{source:"iana"},"video/mpeg":{source:"iana",compressible:!1,extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{source:"iana"},"video/mpv":{source:"iana"},"video/nv":{source:"iana"},"video/ogg":{source:"iana",compressible:!1,extensions:["ogv"]},"video/parityfec":{source:"iana"},"video/pointer":{source:"iana"},"video/quicktime":{source:"iana",compressible:!1,extensions:["qt","mov"]},"video/raptorfec":{source:"iana"},"video/raw":{source:"iana"},"video/rtp-enc-aescm128":{source:"iana"},"video/rtploopback":{source:"iana"},"video/rtx":{source:"iana"},"video/smpte291":{source:"iana"},"video/smpte292m":{source:"iana"},"video/ulpfec":{source:"iana"},"video/vc1":{source:"iana"},"video/vc2":{source:"iana"},"video/vnd.cctv":{source:"iana"},"video/vnd.dece.hd":{source:"iana",extensions:["uvh","uvvh"]},"video/vnd.dece.mobile":{source:"iana",extensions:["uvm","uvvm"]},"video/vnd.dece.mp4":{source:"iana"},"video/vnd.dece.pd":{source:"iana",extensions:["uvp","uvvp"]},"video/vnd.dece.sd":{source:"iana",extensions:["uvs","uvvs"]},"video/vnd.dece.video":{source:"iana",extensions:["uvv","uvvv"]},"video/vnd.directv.mpeg":{source:"iana"},"video/vnd.directv.mpeg-tts":{source:"iana"},"video/vnd.dlna.mpeg-tts":{source:"iana"},"video/vnd.dvb.file":{source:"iana",extensions:["dvb"]},"video/vnd.fvt":{source:"iana",extensions:["fvt"]},"video/vnd.hns.video":{source:"iana"},"video/vnd.iptvforum.1dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.1dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.2dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.2dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.ttsavc":{source:"iana"},"video/vnd.iptvforum.ttsmpeg2":{source:"iana"},"video/vnd.motorola.video":{source:"iana"},"video/vnd.motorola.videop":{source:"iana"},"video/vnd.mpegurl":{source:"iana",extensions:["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{source:"iana",extensions:["pyv"]},"video/vnd.nokia.interleaved-multimedia":{source:"iana"},"video/vnd.nokia.mp4vr":{source:"iana"},"video/vnd.nokia.videovoip":{source:"iana"},"video/vnd.objectvideo":{source:"iana"},"video/vnd.radgamettools.bink":{source:"iana"},"video/vnd.radgamettools.smacker":{source:"iana"},"video/vnd.sealed.mpeg1":{source:"iana"},"video/vnd.sealed.mpeg4":{source:"iana"},"video/vnd.sealed.swf":{source:"iana"},"video/vnd.sealedmedia.softseal.mov":{source:"iana"},"video/vnd.uvvu.mp4":{source:"iana",extensions:["uvu","uvvu"]},"video/vnd.vivo":{source:"iana",extensions:["viv"]},"video/vp8":{source:"iana"},"video/webm":{source:"apache",compressible:!1,extensions:["webm"]},"video/x-f4v":{source:"apache",extensions:["f4v"]},"video/x-fli":{source:"apache",extensions:["fli"]},"video/x-flv":{source:"apache",compressible:!1,extensions:["flv"]},"video/x-m4v":{source:"apache",extensions:["m4v"]},"video/x-matroska":{source:"apache",compressible:!1,extensions:["mkv","mk3d","mks"]},"video/x-mng":{source:"apache",extensions:["mng"]},"video/x-ms-asf":{source:"apache",extensions:["asf","asx"]},"video/x-ms-vob":{source:"apache",extensions:["vob"]},"video/x-ms-wm":{source:"apache",extensions:["wm"]},"video/x-ms-wmv":{source:"apache",compressible:!1,extensions:["wmv"]},"video/x-ms-wmx":{source:"apache",extensions:["wmx"]},"video/x-ms-wvx":{source:"apache",extensions:["wvx"]},"video/x-msvideo":{source:"apache",extensions:["avi"]},"video/x-sgi-movie":{source:"apache",extensions:["movie"]},"video/x-smv":{source:"apache",extensions:["smv"]},"x-conference/x-cooltalk":{source:"apache",extensions:["ice"]},"x-shader/x-fragment":{compressible:!0},"x-shader/x-vertex":{compressible:!0}}},function(e,n,i){e.exports={parallel:i(428),serial:i(430),serialOrdered:i(162)}},function(e,n,i){var t=i(157),a=i(160),o=i(161);e.exports=function(e,n,i){var r=a(e);for(;r.index<(r.keyedList||e).length;)t(e,n,r,function(e,n){e?i(e,n):0!==Object.keys(r.jobs).length||i(null,r.results)}),r.index++;return o.bind(r,i)}},function(e,n){e.exports=function(e){var n="function"==typeof setImmediate?setImmediate:"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:null;n?n(e):setTimeout(e,0)}},function(e,n,i){var t=i(162);e.exports=function(e,n,i){return t(e,n,null,i)}},function(e,n){e.exports=function(e,n){return Object.keys(n).forEach(function(i){e[i]=e[i]||n[i]}),e}},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,i,t){(0,r.validateApiKeys)(e,n);var c=i;if("object"!==s(i))throw new Error("body must be a valid JSON object");t&&(c={pinataContent:i},t.pinataMetadata&&((0,r.validateMetadata)(t.pinataMetadata),c.pinataMetadata=t.pinataMetadata),t.pinataOptions&&((0,r.validatePinataOptions)(t.pinataOptions),c.pinataOptions=t.pinataOptions));var p="".concat(o.baseUrl,"/pinning/pinJSONToIPFS");return new Promise(function(i,t){a.default.post(p,c,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&t(new Error("unknown server response while pinning JSON to IPFS: ".concat(e))),i(e.data)}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?t(new Error(e.response.data.error)):t(e)})})};var t,a=(t=i(30))&&t.__esModule?t:{default:t},o=i(31),r=i(32);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=n.default},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,i,s){if((0,o.validateApiKeys)(e,n),!i)throw new Error("hashToPin value is required for adding a hash to the pin queue");if(!r.default.cid(i))throw new Error("hashToPin value is an invalid IPFS CID");var c="".concat(a.baseUrl,"/pinning/pinHashToIPFS"),p={hashToPin:i};s&&(s.host_nodes&&((0,o.validateHostNodes)(s.host_nodes),p.host_nodes=s.host_nodes),s.pinataMetadata&&((0,o.validateMetadata)(s.pinataMetadata),p.pinataMetadata=s.pinataMetadata));return new Promise(function(i,a){t.default.post(c,p,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&a(new Error("unknown server response while pinning hash to IPFS: ".concat(e))),i(e.data)}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?a(new Error(e.response.data.error)):a(e)})})};var t=s(i(30)),a=i(31),o=i(32),r=s(i(54));function s(e){return e&&e.__esModule?e:{default:e}}e.exports=n.default},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,i){(0,o.validateApiKeys)(e,n);var s="".concat(a.baseUrl,"/pinning/pinJobs");i&&(s=(0,r.default)(s,i));return new Promise(function(i,a){t.default.get(s,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&a(new Error("unknown server response while attempting to retrieve pin jobs: ".concat(e))),i(e.data)}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?a(new Error(e.response.data.error)):a(e)})})};var t=s(i(30)),a=i(31),o=i(32),r=s(i(435));function s(e){return e&&e.__esModule?e:{default:e}}e.exports=n.default},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){if(!e)throw new Error("no baseUrl provided");if(!n)return e;var i=e,t=!1;function o(e){t?i="".concat(i,"&").concat(e):(t=!0,i="".concat(i,"?").concat(e))}if(n){if(n.sort){if("ASC"!==n.sort&&"DESC"!==n.sort)throw new Error("Unknown sort value: ".concat(n.sort," provided"));o("sort=".concat(n.sort))}if(n.status){if("searching"!==n.status&&"expired"!==n.status&&"over_free_limit"!==n.status&&"over_max_size"!==n.status&&"invalid_object"!==n.status&&"bad_host_node"!==n.status)throw new Error("Unknown status value: ".concat(n.status," provided"));o("status=".concat(n.status))}if(n.ipfs_pin_hash){if(!a.default.cid(n.ipfs_pin_hash))throw new Error("Invalid IPFS hash: ".concat(n.ipfs_pin_hash));o("ipfs_pin_hash=".concat(n.ipfs_pin_hash))}if(n.limit){if(!(Number.isInteger(n.limit)&&n.limit>0&&n.limit<100))throw new Error("Invalid limit: ".concat(n.limit,". Valid limits are 1-100"));o("limit=".concat(n.limit))}if(n.offset){if(!(Number.isInteger(n.offset)&&n.offset>0))throw new Error("Invalid offset: ".concat(n.offset,". Please provide a positive integer for the offset"));o("offset=".concat(n.offset))}}return i};var t,a=(t=i(54))&&t.__esModule?t:{default:t};e.exports=n.default},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,i){if((0,o.validateApiKeys)(e,n),!i)throw new Error("ipfsPinHash value is required for removing a pin from Pinata");if(!r.default.cid(i))throw new Error("".concat(i," is an invalid IPFS CID"));var s="".concat(a.baseUrl,"/pinning/removePinFromIPFS"),c={ipfs_pin_hash:i};return new Promise(function(i,a){t.default.post(s,c,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&a(new Error("unknown server response while removing pin from IPFS: ".concat(e))),i(e.data)}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?a(new Error(e.response.data.error)):a(e)})})};var t=s(i(30)),a=i(31),o=i(32),r=s(i(54));function s(e){return e&&e.__esModule?e:{default:e}}e.exports=n.default},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){(0,r.validateApiKeys)(e,n);var i="".concat(o.baseUrl,"/data/testAuthentication");return new Promise(function(t,o){a.default.get(i,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&o(new Error("unknown server response while authenticating: ".concat(e))),t({authenticated:!0})}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?o(new Error(e.response.data.error)):o(e)})})};var t,a=(t=i(30))&&t.__esModule?t:{default:t},o=i(31),r=i(32);e.exports=n.default},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,i){(0,o.validateApiKeys)(e,n);var s="".concat(a.baseUrl,"/data/userPinList"),c=(0,r.default)(s,i);return new Promise(function(i,a){t.default.get(c,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&a(new Error("unknown server response while attempting to retrieve user pin list: ".concat(e))),i(e.data)}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?a(new Error(e.response.data.error)):a(e)})})};var t=s(i(30)),a=i(31),o=i(32),r=s(i(439));function s(e){return e&&e.__esModule?e:{default:e}}e.exports=n.default},function(e,n,i){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e){var n=new Date(Date.parse(e));try{if(n.toISOString()===e)return e;throw new Error("dates must be in valid ISO_8601 format")}catch(e){throw new Error("dates must be in valid ISO_8601 format")}}Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){if(!e)throw new Error("no baseUrl provided");var i="*",o="*",r="*",s="*",c="*",p="*",u="*",l="*",f=10,d=0,m="";if(n){if(n.hashContains){if("string"!=typeof n.hashContains)throw new Error("hashContains value is not a string");i=n.hashContains}if(n.pinStart&&(o=a(n.pinStart)),n.pinEnd&&(r=a(n.pinEnd)),n.unpinStart&&(s=a(n.unpinStart)),n.unpinEnd&&(c=a(n.unpinEnd)),n.pinSizeMin){if(isNaN(n.pinSizeMin)||n.pinSizeMin<0)throw new Error("Please make sure the pinSizeMin is a valid positive integer");p=n.pinSizeMin}if(n.pinSizeMax){if(isNaN(n.pinSizeMax)||n.pinSizeMax<0)throw new Error("Please make sure the pinSizeMax is a valid positive integer");u=n.pinSizeMax}if(n.pinFilter){if("all"!==n.pinFilter&&"pinned"!==n.pinFilter&&"unpinned"!==n.pinFilter)throw new Error("pinFilter value must be either: all, pinned, or unpinned");l=n.pinFilter}if(n.pageLimit){if(isNaN(n.pageLimit)||n.pageLimit<=0||n.pageLimit>1e3)throw new Error("Please make sure the pageLimit is a valid integer between 1-1000");f=parseInt(n.pageLimit)}if(n.pageOffset){if(isNaN(n.pageOffset)||n.pageOffset<=0)throw new Error("Please make sure the pageOffset is a positive integer");d=parseInt(n.pageOffset)}if(n.metadata){if("object"!==t(n.metadata))throw new Error("metadata value must be an object");if(n.metadata.name&&(m="?metadata[name]=".concat(n.metadata.name)),n.metadata.keyvalues){if("object"!==t(n.metadata.keyvalues))throw new Error("metadata keyvalues must be an object");var h={};Object.entries(n.metadata.keyvalues).forEach(function(e){var i=e[0],a=e[1];if("object"!==t(a))throw new Error("keyValue: ".concat(i," is not an object"));if(!a||!a.value||!a.op)throw new Error("keyValue: ".concat(i," must have both value and op attributes"));if("string"!=typeof a.value&&"boolean"!=typeof a.value&&"number"!=typeof a.value)throw new Error("Metadata keyvalue values must be strings, booleans, or numbers");switch(a.op){case"gt":case"gte":case"lt":case"lte":case"ne":case"eq":h[i]={value:a.value,op:a.op};break;case"between":if(!a.secondValue)throw new Error("Because between op code was passed in, keyValue: ".concat(e[0]," must have both also include a secondValue"));if("string"!=typeof a.secondValue&&"boolean"!=typeof a.secondValue&&"number"!=typeof a.secondValue)throw new Error("Metadata keyvalue secondValue must be a string, boolean, or number");h[i]={value:a.value,op:a.op,secondValue:a.secondValue};break;case"notBetween":if(!a.secondValue)throw new Error("Because notBetween op code was passed in, keyValue: ".concat(e[0]," must have both also include a secondValue"));if("string"!=typeof a.secondValue&&"boolean"!=typeof a.secondValue&&"number"!=typeof a.secondValue)throw new Error("Metadata keyvalue secondValue must be a string, boolean, or number");h[i]={value:a.value,op:a.op,secondValue:a.secondValue};break;case"like":case"notLike":case"iLike":case"notILike":case"regexp":case"iRegexp":h[i]={value:a.value,op:a.op};break;default:throw new Error("keyValue op: ".concat(a.op," is not a valid op code"))}m="".concat(m).concat(n.metadata.name?"&":"?","metadata[keyvalues]=").concat(JSON.stringify(h))})}}}return"".concat(e,"/hashContains/").concat(i,"/pinStart/").concat(o,"/pinEnd/").concat(r,"/unpinStart/").concat(s,"/unpinEnd/").concat(c,"/pinSizeMin/").concat(p,"/pinSizeMax/").concat(u,"/pinFilter/").concat(l,"/pageLimit/").concat(f,"/pageOffset/").concat(d).concat(m)},e.exports=n.default},function(e,n,i){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){(0,r.validateApiKeys)(e,n);var i="".concat(o.baseUrl,"/data/userPinnedDataTotal");return new Promise(function(t,o){a.default.get(i,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then(function(e){200!==e.status&&o(new Error("unknown server response while attempting to retrieve pinned data total: ".concat(e))),t(e.data)}).catch(function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?o(new Error(e.response.data.error)):o(e)})})};var t,a=(t=i(30))&&t.__esModule?t:{default:t},o=i(31),r=i(32);e.exports=n.default}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,