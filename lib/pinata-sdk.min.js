!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("pinata-sdk",[],n):"object"==typeof exports?exports["pinata-sdk"]=n():e["pinata-sdk"]=n()}("undefined"!=typeof self?self:this,(function(){return function(e){var n={};function i(t){if(n[t])return n[t].exports;var a=n[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=e,i.c=n,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)i.d(t,a,function(n){return e[n]}.bind(null,a));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="",i(i.s=173)}([function(e,n,i){var t=i(2),a=i(20),o=i(12),r=i(13),s=i(21),c=function(e,n,i){var p,u,l,f,d=e&c.F,m=e&c.G,v=e&c.S,h=e&c.P,x=e&c.B,b=m?t:v?t[n]||(t[n]={}):(t[n]||{}).prototype,g=m?a:a[n]||(a[n]={}),k=g.prototype||(g.prototype={});for(p in m&&(i=n),i)l=((u=!d&&b&&void 0!==b[p])?b:i)[p],f=x&&u?s(l,t):h&&"function"==typeof l?s(Function.call,l):l,b&&r(b,p,l,e&c.U),g[p]!=l&&o(g,p,f),h&&k[p]!=l&&(k[p]=l)};t.core=a,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,n,i){var t=i(4);e.exports=function(e){if(!t(e))throw TypeError(e+" is not an object!");return e}},function(e,n){var i=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=i)},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,n,i){var t=i(51)("wks"),a=i(36),o=i(2).Symbol,r="function"==typeof o;(e.exports=function(e){return t[e]||(t[e]=r&&o[e]||(r?o:a)("Symbol."+e))}).store=t},function(e,n,i){var t=i(23),a=Math.min;e.exports=function(e){return e>0?a(t(e),9007199254740991):0}},function(e,n,i){e.exports=!i(3)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,n,i){e.exports=i(376)},function(e,n,i){var t=i(1),a=i(115),o=i(25),r=Object.defineProperty;n.f=i(7)?Object.defineProperty:function(e,n,i){if(t(e),n=o(n,!0),t(i),a)try{return r(e,n,i)}catch(e){}if("get"in i||"set"in i)throw TypeError("Accessors not supported!");return"value"in i&&(e[n]=i.value),e}},function(e,n,i){var t=i(26);e.exports=function(e){return Object(t(e))}},function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,n,i){var t=i(9),a=i(35);e.exports=i(7)?function(e,n,i){return t.f(e,n,a(1,i))}:function(e,n,i){return e[n]=i,e}},function(e,n,i){var t=i(2),a=i(12),o=i(16),r=i(36)("src"),s=i(177),c=(""+s).split("toString");i(20).inspectSource=function(e){return s.call(e)},(e.exports=function(e,n,i,s){var p="function"==typeof i;p&&(o(i,"name")||a(i,"name",n)),e[n]!==i&&(p&&(o(i,r)||a(i,r,e[n]?""+e[n]:c.join(String(n)))),e===t?e[n]=i:s?e[n]?e[n]=i:a(e,n,i):(delete e[n],a(e,n,i)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[r]||s.call(this)}))},function(e,n,i){var t=i(0),a=i(3),o=i(26),r=/"/g,s=function(e,n,i,t){var a=String(o(e)),s="<"+n;return""!==i&&(s+=" "+i+'="'+String(t).replace(r,"&quot;")+'"'),s+">"+a+"</"+n+">"};e.exports=function(e,n){var i={};i[e]=n(s),t(t.P+t.F*a((function(){var n=""[e]('"');return n!==n.toLowerCase()||n.split('"').length>3})),"String",i)}},function(e,n,i){"use strict";var t=i(151),a=i(377),o=Object.prototype.toString;function r(e){return"[object Array]"===o.call(e)}function s(e){return null!==e&&"object"==typeof e}function c(e){return"[object Function]"===o.call(e)}function p(e,n){if(null!=e)if("object"!=typeof e&&(e=[e]),r(e))for(var i=0,t=e.length;i<t;i++)n.call(null,e[i],i,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.call(null,e[a],a,e)}e.exports={isArray:r,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:a,isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:c,isStream:function(e){return s(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:p,merge:function e(){var n={};function i(i,t){"object"==typeof n[t]&&"object"==typeof i?n[t]=e(n[t],i):n[t]=i}for(var t=0,a=arguments.length;t<a;t++)p(arguments[t],i);return n},extend:function(e,n,i){return p(n,(function(n,a){e[a]=i&&"function"==typeof n?t(n,i):n})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,n){var i={}.hasOwnProperty;e.exports=function(e,n){return i.call(e,n)}},function(e,n,i){var t=i(52),a=i(26);e.exports=function(e){return t(a(e))}},function(e,n,i){var t=i(53),a=i(35),o=i(17),r=i(25),s=i(16),c=i(115),p=Object.getOwnPropertyDescriptor;n.f=i(7)?p:function(e,n){if(e=o(e),n=r(n,!0),c)try{return p(e,n)}catch(e){}if(s(e,n))return a(!t.f.call(e,n),e[n])}},function(e,n,i){var t=i(16),a=i(10),o=i(79)("IE_PROTO"),r=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=a(e),t(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?r:null}},function(e,n){var i=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=i)},function(e,n,i){var t=i(11);e.exports=function(e,n,i){if(t(e),void 0===n)return e;switch(i){case 1:return function(i){return e.call(n,i)};case 2:return function(i,t){return e.call(n,i,t)};case 3:return function(i,t,a){return e.call(n,i,t,a)}}return function(){return e.apply(n,arguments)}}},function(e,n){var i={}.toString;e.exports=function(e){return i.call(e).slice(8,-1)}},function(e,n){var i=Math.ceil,t=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?t:i)(e)}},function(e,n,i){"use strict";var t=i(3);e.exports=function(e,n){return!!e&&t((function(){n?e.call(null,(function(){}),1):e.call(null)}))}},function(e,n,i){var t=i(4);e.exports=function(e,n){if(!t(e))return e;var i,a;if(n&&"function"==typeof(i=e.toString)&&!t(a=i.call(e)))return a;if("function"==typeof(i=e.valueOf)&&!t(a=i.call(e)))return a;if(!n&&"function"==typeof(i=e.toString)&&!t(a=i.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,n){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,n,i){var t=i(0),a=i(20),o=i(3);e.exports=function(e,n){var i=(a.Object||{})[e]||Object[e],r={};r[e]=n(i),t(t.S+t.F*o((function(){i(1)})),"Object",r)}},function(e,n,i){var t=i(21),a=i(52),o=i(10),r=i(6),s=i(95);e.exports=function(e,n){var i=1==e,c=2==e,p=3==e,u=4==e,l=6==e,f=5==e||l,d=n||s;return function(n,s,m){for(var v,h,x=o(n),b=a(x),g=t(s,m,3),k=r(b.length),y=0,w=i?d(n,k):c?d(n,0):void 0;k>y;y++)if((f||y in b)&&(h=g(v=b[y],y,x),e))if(i)w[y]=h;else if(h)switch(e){case 3:return!0;case 5:return v;case 6:return y;case 2:w.push(v)}else if(u)return!1;return l?-1:p||u?u:w}}},function(e,n,i){"use strict";const t=i(74),a=i(109),o=i(162),r=i(163),s=i(425),c=i(111),p=/^https?:\/\/[^/]+\/(ip(f|n)s)\/((\w+).*)/,u=/^\/(ip(f|n)s)\/((\w+).*)/,l=/^https?:\/\/([^/]+)\.(ip(?:f|n)s)\.[^/]+/;function f(e){try{return new c(e),!0}catch(e){return!1}}function d(e){if(!e)return!1;if(r.isMultiaddr(e))return!0;try{return new r(e),!0}catch(e){return!1}}function m(e,n,i=1,t=4){const a=x(e);if(!a)return!1;const o=a.match(n);if(!o)return!1;if("ipfs"!==o[i])return!1;let r=o[t];return r&&n===l&&(r=r.toLowerCase()),f(r)}function v(e,n,i=1,t){const a=x(e);if(!a)return!1;const o=a.match(n);if(!o)return!1;if("ipns"!==o[i])return!1;if(t&&n===l){let e=o[t];return e=e.toLowerCase(),f(e)}return!0}function h(e){return"string"==typeof e}function x(e){return Buffer.isBuffer(e)?t.encode(e):!!h(e)&&e}const b=e=>m(e,l,2,1),g=e=>v(e,l,2,1);e.exports={multihash:function(e){const n=x(e);try{const e=Buffer.from(t.decode(n));return a.decode(e),!0}catch(e){return!1}},multiaddr:d,peerMultiaddr:function(e){return d(e)&&s.IPFS.matches(e)},cid:f,base32cid:e=>"base32"===function(e){try{return o.isEncoded(e)}catch(e){return!1}}(e)&&f(e),ipfsSubdomain:b,ipnsSubdomain:g,subdomain:e=>b(e)||g(e),subdomainPattern:l,ipfsUrl:e=>m(e,p),ipnsUrl:e=>v(e,p),url:e=>m(e,p)||v(e,p),urlPattern:p,ipfsPath:e=>m(e,u),ipnsPath:e=>v(e,u),path:e=>m(e,u)||v(e,u),pathPattern:u,urlOrPath:e=>m(e,p)||v(e,p)||m(e,u)||v(e,u),cidPath:e=>h(e)&&!f(e)&&m(`/ipfs/${e}`,u)}},function(e,n,i){"use strict";if(i(7)){var t=i(32),a=i(2),o=i(3),r=i(0),s=i(69),c=i(103),p=i(21),u=i(42),l=i(35),f=i(12),d=i(44),m=i(23),v=i(6),h=i(143),x=i(38),b=i(25),g=i(16),k=i(47),y=i(4),w=i(10),S=i(92),_=i(39),j=i(19),E=i(40).f,C=i(94),O=i(36),A=i(5),P=i(28),M=i(59),F=i(55),B=i(97),z=i(49),I=i(64),N=i(41),T=i(96),L=i(132),R=i(9),q=i(18),D=R.f,U=q.f,V=a.RangeError,$=a.TypeError,W=a.Uint8Array,G=Array.prototype,H=c.ArrayBuffer,J=c.DataView,K=P(0),Y=P(2),X=P(3),Z=P(4),Q=P(5),ee=P(6),ne=M(!0),ie=M(!1),te=B.values,ae=B.keys,oe=B.entries,re=G.lastIndexOf,se=G.reduce,ce=G.reduceRight,pe=G.join,ue=G.sort,le=G.slice,fe=G.toString,de=G.toLocaleString,me=A("iterator"),ve=A("toStringTag"),he=O("typed_constructor"),xe=O("def_constructor"),be=s.CONSTR,ge=s.TYPED,ke=s.VIEW,ye=P(1,(function(e,n){return Ee(F(e,e[xe]),n)})),we=o((function(){return 1===new W(new Uint16Array([1]).buffer)[0]})),Se=!!W&&!!W.prototype.set&&o((function(){new W(1).set({})})),_e=function(e,n){var i=m(e);if(i<0||i%n)throw V("Wrong offset!");return i},je=function(e){if(y(e)&&ge in e)return e;throw $(e+" is not a typed array!")},Ee=function(e,n){if(!(y(e)&&he in e))throw $("It is not a typed array constructor!");return new e(n)},Ce=function(e,n){return Oe(F(e,e[xe]),n)},Oe=function(e,n){for(var i=0,t=n.length,a=Ee(e,t);t>i;)a[i]=n[i++];return a},Ae=function(e,n,i){D(e,n,{get:function(){return this._d[i]}})},Pe=function(e){var n,i,t,a,o,r,s=w(e),c=arguments.length,u=c>1?arguments[1]:void 0,l=void 0!==u,f=C(s);if(null!=f&&!S(f)){for(r=f.call(s),t=[],n=0;!(o=r.next()).done;n++)t.push(o.value);s=t}for(l&&c>2&&(u=p(u,arguments[2],2)),n=0,i=v(s.length),a=Ee(this,i);i>n;n++)a[n]=l?u(s[n],n):s[n];return a},Me=function(){for(var e=0,n=arguments.length,i=Ee(this,n);n>e;)i[e]=arguments[e++];return i},Fe=!!W&&o((function(){de.call(new W(1))})),Be=function(){return de.apply(Fe?le.call(je(this)):je(this),arguments)},ze={copyWithin:function(e,n){return L.call(je(this),e,n,arguments.length>2?arguments[2]:void 0)},every:function(e){return Z(je(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return T.apply(je(this),arguments)},filter:function(e){return Ce(this,Y(je(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return Q(je(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(je(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){K(je(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ie(je(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return ne(je(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return pe.apply(je(this),arguments)},lastIndexOf:function(e){return re.apply(je(this),arguments)},map:function(e){return ye(je(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return se.apply(je(this),arguments)},reduceRight:function(e){return ce.apply(je(this),arguments)},reverse:function(){for(var e,n=je(this).length,i=Math.floor(n/2),t=0;t<i;)e=this[t],this[t++]=this[--n],this[n]=e;return this},some:function(e){return X(je(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ue.call(je(this),e)},subarray:function(e,n){var i=je(this),t=i.length,a=x(e,t);return new(F(i,i[xe]))(i.buffer,i.byteOffset+a*i.BYTES_PER_ELEMENT,v((void 0===n?t:x(n,t))-a))}},Ie=function(e,n){return Ce(this,le.call(je(this),e,n))},Ne=function(e){je(this);var n=_e(arguments[1],1),i=this.length,t=w(e),a=v(t.length),o=0;if(a+n>i)throw V("Wrong length!");for(;o<a;)this[n+o]=t[o++]},Te={entries:function(){return oe.call(je(this))},keys:function(){return ae.call(je(this))},values:function(){return te.call(je(this))}},Le=function(e,n){return y(e)&&e[ge]&&"symbol"!=typeof n&&n in e&&String(+n)==String(n)},Re=function(e,n){return Le(e,n=b(n,!0))?l(2,e[n]):U(e,n)},qe=function(e,n,i){return!(Le(e,n=b(n,!0))&&y(i)&&g(i,"value"))||g(i,"get")||g(i,"set")||i.configurable||g(i,"writable")&&!i.writable||g(i,"enumerable")&&!i.enumerable?D(e,n,i):(e[n]=i.value,e)};be||(q.f=Re,R.f=qe),r(r.S+r.F*!be,"Object",{getOwnPropertyDescriptor:Re,defineProperty:qe}),o((function(){fe.call({})}))&&(fe=de=function(){return pe.call(this)});var De=d({},ze);d(De,Te),f(De,me,Te.values),d(De,{slice:Ie,set:Ne,constructor:function(){},toString:fe,toLocaleString:Be}),Ae(De,"buffer","b"),Ae(De,"byteOffset","o"),Ae(De,"byteLength","l"),Ae(De,"length","e"),D(De,ve,{get:function(){return this[ge]}}),e.exports=function(e,n,i,c){var p=e+((c=!!c)?"Clamped":"")+"Array",l="get"+e,d="set"+e,m=a[p],x=m||{},b=m&&j(m),g=!m||!s.ABV,w={},S=m&&m.prototype,C=function(e,i){D(e,i,{get:function(){return function(e,i){var t=e._d;return t.v[l](i*n+t.o,we)}(this,i)},set:function(e){return function(e,i,t){var a=e._d;c&&(t=(t=Math.round(t))<0?0:t>255?255:255&t),a.v[d](i*n+a.o,t,we)}(this,i,e)},enumerable:!0})};g?(m=i((function(e,i,t,a){u(e,m,p,"_d");var o,r,s,c,l=0,d=0;if(y(i)){if(!(i instanceof H||"ArrayBuffer"==(c=k(i))||"SharedArrayBuffer"==c))return ge in i?Oe(m,i):Pe.call(m,i);o=i,d=_e(t,n);var x=i.byteLength;if(void 0===a){if(x%n)throw V("Wrong length!");if((r=x-d)<0)throw V("Wrong length!")}else if((r=v(a)*n)+d>x)throw V("Wrong length!");s=r/n}else s=h(i),o=new H(r=s*n);for(f(e,"_d",{b:o,o:d,l:r,e:s,v:new J(o)});l<s;)C(e,l++)})),S=m.prototype=_(De),f(S,"constructor",m)):o((function(){m(1)}))&&o((function(){new m(-1)}))&&I((function(e){new m,new m(null),new m(1.5),new m(e)}),!0)||(m=i((function(e,i,t,a){var o;return u(e,m,p),y(i)?i instanceof H||"ArrayBuffer"==(o=k(i))||"SharedArrayBuffer"==o?void 0!==a?new x(i,_e(t,n),a):void 0!==t?new x(i,_e(t,n)):new x(i):ge in i?Oe(m,i):Pe.call(m,i):new x(h(i))})),K(b!==Function.prototype?E(x).concat(E(b)):E(x),(function(e){e in m||f(m,e,x[e])})),m.prototype=S,t||(S.constructor=m));var O=S[me],A=!!O&&("values"==O.name||null==O.name),P=Te.values;f(m,he,!0),f(S,ge,p),f(S,ke,!0),f(S,xe,m),(c?new m(1)[ve]==p:ve in S)||D(S,ve,{get:function(){return p}}),w[p]=m,r(r.G+r.W+r.F*(m!=x),w),r(r.S,p,{BYTES_PER_ELEMENT:n}),r(r.S+r.F*o((function(){x.of.call(m,1)})),p,{from:Pe,of:Me}),"BYTES_PER_ELEMENT"in S||f(S,"BYTES_PER_ELEMENT",n),r(r.P,p,ze),N(p),r(r.P+r.F*Se,p,{set:Ne}),r(r.P+r.F*!A,p,Te),t||S.toString==fe||(S.toString=fe),r(r.P+r.F*o((function(){new m(1).slice()})),p,{slice:Ie}),r(r.P+r.F*(o((function(){return[1,2].toLocaleString()!=new m([1,2]).toLocaleString()}))||!o((function(){S.toLocaleString.call([1,2])}))),p,{toLocaleString:Be}),z[p]=A?O:P,t||A||f(S,me,P)}}else e.exports=function(){}},function(e,n,i){var t=i(138),a=i(0),o=i(51)("metadata"),r=o.store||(o.store=new(i(141))),s=function(e,n,i){var a=r.get(e);if(!a){if(!i)return;r.set(e,a=new t)}var o=a.get(n);if(!o){if(!i)return;a.set(n,o=new t)}return o};e.exports={store:r,map:s,has:function(e,n,i){var t=s(n,i,!1);return void 0!==t&&t.has(e)},get:function(e,n,i){var t=s(n,i,!1);return void 0===t?void 0:t.get(e)},set:function(e,n,i,t){s(i,t,!0).set(e,n)},keys:function(e,n){var i=s(e,n,!1),t=[];return i&&i.forEach((function(e,n){t.push(n)})),t},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){a(a.S,"Reflect",e)}}},function(e,n){e.exports=!1},function(e,n,i){var t=i(36)("meta"),a=i(4),o=i(16),r=i(9).f,s=0,c=Object.isExtensible||function(){return!0},p=!i(3)((function(){return c(Object.preventExtensions({}))})),u=function(e){r(e,t,{value:{i:"O"+ ++s,w:{}}})},l=e.exports={KEY:t,NEED:!1,fastKey:function(e,n){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,t)){if(!c(e))return"F";if(!n)return"E";u(e)}return e[t].i},getWeak:function(e,n){if(!o(e,t)){if(!c(e))return!0;if(!n)return!1;u(e)}return e[t].w},onFreeze:function(e){return p&&l.NEED&&c(e)&&!o(e,t)&&u(e),e}}},function(e,n,i){var t=i(5)("unscopables"),a=Array.prototype;null==a[t]&&i(12)(a,t,{}),e.exports=function(e){a[t][e]=!0}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n){var i=0,t=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++i+t).toString(36))}},function(e,n,i){var t=i(117),a=i(80);e.exports=Object.keys||function(e){return t(e,a)}},function(e,n,i){var t=i(23),a=Math.max,o=Math.min;e.exports=function(e,n){return(e=t(e))<0?a(e+n,0):o(e,n)}},function(e,n,i){var t=i(1),a=i(118),o=i(80),r=i(79)("IE_PROTO"),s=function(){},c=function(){var e,n=i(77)("iframe"),t=o.length;for(n.style.display="none",i(81).appendChild(n),n.src="javascript:",(e=n.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;t--;)delete c.prototype[o[t]];return c()};e.exports=Object.create||function(e,n){var i;return null!==e?(s.prototype=t(e),i=new s,s.prototype=null,i[r]=e):i=c(),void 0===n?i:a(i,n)}},function(e,n,i){var t=i(117),a=i(80).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return t(e,a)}},function(e,n,i){"use strict";var t=i(2),a=i(9),o=i(7),r=i(5)("species");e.exports=function(e){var n=t[e];o&&n&&!n[r]&&a.f(n,r,{configurable:!0,get:function(){return this}})}},function(e,n){e.exports=function(e,n,i,t){if(!(e instanceof n)||void 0!==t&&t in e)throw TypeError(i+": incorrect invocation!");return e}},function(e,n,i){var t=i(21),a=i(130),o=i(92),r=i(1),s=i(6),c=i(94),p={},u={};(n=e.exports=function(e,n,i,l,f){var d,m,v,h,x=f?function(){return e}:c(e),b=t(i,l,n?2:1),g=0;if("function"!=typeof x)throw TypeError(e+" is not iterable!");if(o(x)){for(d=s(e.length);d>g;g++)if((h=n?b(r(m=e[g])[0],m[1]):b(e[g]))===p||h===u)return h}else for(v=x.call(e);!(m=v.next()).done;)if((h=a(v,b,m.value,n))===p||h===u)return h}).BREAK=p,n.RETURN=u},function(e,n,i){var t=i(13);e.exports=function(e,n,i){for(var a in n)t(e,a,n[a],i);return e}},function(e,n,i){var t=i(4);e.exports=function(e,n){if(!t(e)||e._t!==n)throw TypeError("Incompatible receiver, "+n+" required!");return e}},function(e,n,i){var t=i(9).f,a=i(16),o=i(5)("toStringTag");e.exports=function(e,n,i){e&&!a(e=i?e:e.prototype,o)&&t(e,o,{configurable:!0,value:n})}},function(e,n,i){var t=i(22),a=i(5)("toStringTag"),o="Arguments"==t(function(){return arguments}());e.exports=function(e){var n,i,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(i=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),a))?i:o?t(n):"Object"==(r=t(n))&&"function"==typeof n.callee?"Arguments":r}},function(e,n,i){var t=i(0),a=i(26),o=i(3),r=i(83),s="["+r+"]",c=RegExp("^"+s+s+"*"),p=RegExp(s+s+"*$"),u=function(e,n,i){var a={},s=o((function(){return!!r[e]()||"​"!="​"[e]()})),c=a[e]=s?n(l):r[e];i&&(a[i]=c),t(t.P+t.F*s,"String",a)},l=u.trim=function(e,n){return e=String(a(e)),1&n&&(e=e.replace(c,"")),2&n&&(e=e.replace(p,"")),e};e.exports=u},function(e,n){e.exports={}},function(e,n,i){e.exports={encode:i(404),decode:i(405),encodingLength:i(406)}},function(e,n,i){var t=i(20),a=i(2),o=a["__core-js_shared__"]||(a["__core-js_shared__"]={});(e.exports=function(e,n){return o[e]||(o[e]=void 0!==n?n:{})})("versions",[]).push({version:t.version,mode:i(32)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,n,i){var t=i(22);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==t(e)?e.split(""):Object(e)}},function(e,n){n.f={}.propertyIsEnumerable},function(e,n,i){"use strict";var t=i(1);e.exports=function(){var e=t(this),n="";return e.global&&(n+="g"),e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.unicode&&(n+="u"),e.sticky&&(n+="y"),n}},function(e,n,i){var t=i(1),a=i(11),o=i(5)("species");e.exports=function(e,n){var i,r=t(e).constructor;return void 0===r||null==(i=t(r)[o])?n:a(i)}},function(e){e.exports=JSON.parse('{"identity":0,"ip4":4,"tcp":6,"sha1":17,"sha2-256":18,"sha2-512":19,"sha3-512":20,"sha3-384":21,"sha3-256":22,"sha3-224":23,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"dccp":33,"murmur3-128":34,"murmur3-32":35,"ip6":41,"ip6zone":42,"path":47,"multicodec":48,"multihash":49,"multiaddr":50,"multibase":51,"dns":53,"dns4":54,"dns6":55,"dnsaddr":56,"protobuf":80,"cbor":81,"raw":85,"dbl-sha2-256":86,"rlp":96,"bencode":99,"dag-pb":112,"dag-cbor":113,"libp2p-key":114,"git-raw":120,"torrent-info":123,"torrent-file":124,"leofcoin-block":129,"leofcoin-tx":130,"leofcoin-pr":131,"sctp":132,"eth-block":144,"eth-block-list":145,"eth-tx-trie":146,"eth-tx":147,"eth-tx-receipt-trie":148,"eth-tx-receipt":149,"eth-state-trie":150,"eth-account-snapshot":151,"eth-storage-trie":152,"bitcoin-block":176,"bitcoin-tx":177,"zcash-block":192,"zcash-tx":193,"stellar-block":208,"stellar-tx":209,"md4":212,"md5":213,"bmt":214,"decred-block":224,"decred-tx":225,"ipld-ns":226,"ipfs-ns":227,"swarm-ns":228,"ipns-ns":229,"zeronet":230,"ed25519-pub":237,"dash-block":240,"dash-tx":241,"swarm-manifest":250,"swarm-feed":251,"udp":273,"p2p-webrtc-star":275,"p2p-webrtc-direct":276,"p2p-stardust":277,"p2p-circuit":290,"dag-json":297,"udt":301,"utp":302,"unix":400,"p2p":421,"ipfs":421,"https":443,"onion":444,"onion3":445,"garlic64":446,"garlic32":447,"tls":448,"quic":460,"ws":477,"wss":478,"p2p-websocket-star":479,"http":480,"json":512,"messagepack":513,"x11":4352,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"skein256-8":45825,"skein256-16":45826,"skein256-24":45827,"skein256-32":45828,"skein256-40":45829,"skein256-48":45830,"skein256-56":45831,"skein256-64":45832,"skein256-72":45833,"skein256-80":45834,"skein256-88":45835,"skein256-96":45836,"skein256-104":45837,"skein256-112":45838,"skein256-120":45839,"skein256-128":45840,"skein256-136":45841,"skein256-144":45842,"skein256-152":45843,"skein256-160":45844,"skein256-168":45845,"skein256-176":45846,"skein256-184":45847,"skein256-192":45848,"skein256-200":45849,"skein256-208":45850,"skein256-216":45851,"skein256-224":45852,"skein256-232":45853,"skein256-240":45854,"skein256-248":45855,"skein256-256":45856,"skein512-8":45857,"skein512-16":45858,"skein512-24":45859,"skein512-32":45860,"skein512-40":45861,"skein512-48":45862,"skein512-56":45863,"skein512-64":45864,"skein512-72":45865,"skein512-80":45866,"skein512-88":45867,"skein512-96":45868,"skein512-104":45869,"skein512-112":45870,"skein512-120":45871,"skein512-128":45872,"skein512-136":45873,"skein512-144":45874,"skein512-152":45875,"skein512-160":45876,"skein512-168":45877,"skein512-176":45878,"skein512-184":45879,"skein512-192":45880,"skein512-200":45881,"skein512-208":45882,"skein512-216":45883,"skein512-224":45884,"skein512-232":45885,"skein512-240":45886,"skein512-248":45887,"skein512-256":45888,"skein512-264":45889,"skein512-272":45890,"skein512-280":45891,"skein512-288":45892,"skein512-296":45893,"skein512-304":45894,"skein512-312":45895,"skein512-320":45896,"skein512-328":45897,"skein512-336":45898,"skein512-344":45899,"skein512-352":45900,"skein512-360":45901,"skein512-368":45902,"skein512-376":45903,"skein512-384":45904,"skein512-392":45905,"skein512-400":45906,"skein512-408":45907,"skein512-416":45908,"skein512-424":45909,"skein512-432":45910,"skein512-440":45911,"skein512-448":45912,"skein512-456":45913,"skein512-464":45914,"skein512-472":45915,"skein512-480":45916,"skein512-488":45917,"skein512-496":45918,"skein512-504":45919,"skein512-512":45920,"skein1024-8":45921,"skein1024-16":45922,"skein1024-24":45923,"skein1024-32":45924,"skein1024-40":45925,"skein1024-48":45926,"skein1024-56":45927,"skein1024-64":45928,"skein1024-72":45929,"skein1024-80":45930,"skein1024-88":45931,"skein1024-96":45932,"skein1024-104":45933,"skein1024-112":45934,"skein1024-120":45935,"skein1024-128":45936,"skein1024-136":45937,"skein1024-144":45938,"skein1024-152":45939,"skein1024-160":45940,"skein1024-168":45941,"skein1024-176":45942,"skein1024-184":45943,"skein1024-192":45944,"skein1024-200":45945,"skein1024-208":45946,"skein1024-216":45947,"skein1024-224":45948,"skein1024-232":45949,"skein1024-240":45950,"skein1024-248":45951,"skein1024-256":45952,"skein1024-264":45953,"skein1024-272":45954,"skein1024-280":45955,"skein1024-288":45956,"skein1024-296":45957,"skein1024-304":45958,"skein1024-312":45959,"skein1024-320":45960,"skein1024-328":45961,"skein1024-336":45962,"skein1024-344":45963,"skein1024-352":45964,"skein1024-360":45965,"skein1024-368":45966,"skein1024-376":45967,"skein1024-384":45968,"skein1024-392":45969,"skein1024-400":45970,"skein1024-408":45971,"skein1024-416":45972,"skein1024-424":45973,"skein1024-432":45974,"skein1024-440":45975,"skein1024-448":45976,"skein1024-456":45977,"skein1024-464":45978,"skein1024-472":45979,"skein1024-480":45980,"skein1024-488":45981,"skein1024-496":45982,"skein1024-504":45983,"skein1024-512":45984,"skein1024-520":45985,"skein1024-528":45986,"skein1024-536":45987,"skein1024-544":45988,"skein1024-552":45989,"skein1024-560":45990,"skein1024-568":45991,"skein1024-576":45992,"skein1024-584":45993,"skein1024-592":45994,"skein1024-600":45995,"skein1024-608":45996,"skein1024-616":45997,"skein1024-624":45998,"skein1024-632":45999,"skein1024-640":46000,"skein1024-648":46001,"skein1024-656":46002,"skein1024-664":46003,"skein1024-672":46004,"skein1024-680":46005,"skein1024-688":46006,"skein1024-696":46007,"skein1024-704":46008,"skein1024-712":46009,"skein1024-720":46010,"skein1024-728":46011,"skein1024-736":46012,"skein1024-744":46013,"skein1024-752":46014,"skein1024-760":46015,"skein1024-768":46016,"skein1024-776":46017,"skein1024-784":46018,"skein1024-792":46019,"skein1024-800":46020,"skein1024-808":46021,"skein1024-816":46022,"skein1024-824":46023,"skein1024-832":46024,"skein1024-840":46025,"skein1024-848":46026,"skein1024-856":46027,"skein1024-864":46028,"skein1024-872":46029,"skein1024-880":46030,"skein1024-888":46031,"skein1024-896":46032,"skein1024-904":46033,"skein1024-912":46034,"skein1024-920":46035,"skein1024-928":46036,"skein1024-936":46037,"skein1024-944":46038,"skein1024-952":46039,"skein1024-960":46040,"skein1024-968":46041,"skein1024-976":46042,"skein1024-984":46043,"skein1024-992":46044,"skein1024-1000":46045,"skein1024-1008":46046,"skein1024-1016":46047,"skein1024-1024":46048,"holochain-adr-v0":8417572,"holochain-adr-v1":8483108,"holochain-key-v0":9728292,"holochain-key-v1":9793828,"holochain-sig-v0":10645796,"holochain-sig-v1":10711332}')},function(e,n){e.exports=require("fs")},function(e,n){e.exports=require("stream")},function(e,n,i){var t=i(17),a=i(6),o=i(38);e.exports=function(e){return function(n,i,r){var s,c=t(n),p=a(c.length),u=o(r,p);if(e&&i!=i){for(;p>u;)if((s=c[u++])!=s)return!0}else for(;p>u;u++)if((e||u in c)&&c[u]===i)return e||u||0;return!e&&-1}}},function(e,n){n.f=Object.getOwnPropertySymbols},function(e,n,i){var t=i(22);e.exports=Array.isArray||function(e){return"Array"==t(e)}},function(e,n,i){var t=i(23),a=i(26);e.exports=function(e){return function(n,i){var o,r,s=String(a(n)),c=t(i),p=s.length;return c<0||c>=p?e?"":void 0:(o=s.charCodeAt(c))<55296||o>56319||c+1===p||(r=s.charCodeAt(c+1))<56320||r>57343?e?s.charAt(c):o:e?s.slice(c,c+2):r-56320+(o-55296<<10)+65536}}},function(e,n,i){var t=i(4),a=i(22),o=i(5)("match");e.exports=function(e){var n;return t(e)&&(void 0!==(n=e[o])?!!n:"RegExp"==a(e))}},function(e,n,i){var t=i(5)("iterator"),a=!1;try{var o=[7][t]();o.return=function(){a=!0},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,n){if(!n&&!a)return!1;var i=!1;try{var o=[7],r=o[t]();r.next=function(){return{done:i=!0}},o[t]=function(){return r},e(o)}catch(e){}return i}},function(e,n,i){"use strict";var t=i(47),a=RegExp.prototype.exec;e.exports=function(e,n){var i=e.exec;if("function"==typeof i){var o=i.call(e,n);if("object"!=typeof o)throw new TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==t(e))throw new TypeError("RegExp#exec called on incompatible receiver");return a.call(e,n)}},function(e,n,i){"use strict";i(134);var t=i(13),a=i(12),o=i(3),r=i(26),s=i(5),c=i(98),p=s("species"),u=!o((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),l=function(){var e=/(?:)/,n=e.exec;e.exec=function(){return n.apply(this,arguments)};var i="ab".split(e);return 2===i.length&&"a"===i[0]&&"b"===i[1]}();e.exports=function(e,n,i){var f=s(e),d=!o((function(){var n={};return n[f]=function(){return 7},7!=""[e](n)})),m=d?!o((function(){var n=!1,i=/a/;return i.exec=function(){return n=!0,null},"split"===e&&(i.constructor={},i.constructor[p]=function(){return i}),i[f](""),!n})):void 0;if(!d||!m||"replace"===e&&!u||"split"===e&&!l){var v=/./[f],h=i(r,f,""[e],(function(e,n,i,t,a){return n.exec===c?d&&!a?{done:!0,value:v.call(n,i,t)}:{done:!0,value:e.call(i,n,t)}:{done:!1}})),x=h[0],b=h[1];t(String.prototype,e,x),a(RegExp.prototype,f,2==n?function(e,n){return b.call(e,this,n)}:function(e){return b.call(e,this)})}}},function(e,n,i){var t=i(2).navigator;e.exports=t&&t.userAgent||""},function(e,n,i){"use strict";var t=i(2),a=i(0),o=i(13),r=i(44),s=i(33),c=i(43),p=i(42),u=i(4),l=i(3),f=i(64),d=i(46),m=i(84);e.exports=function(e,n,i,v,h,x){var b=t[e],g=b,k=h?"set":"add",y=g&&g.prototype,w={},S=function(e){var n=y[e];o(y,e,"delete"==e||"has"==e?function(e){return!(x&&!u(e))&&n.call(this,0===e?0:e)}:"get"==e?function(e){return x&&!u(e)?void 0:n.call(this,0===e?0:e)}:"add"==e?function(e){return n.call(this,0===e?0:e),this}:function(e,i){return n.call(this,0===e?0:e,i),this})};if("function"==typeof g&&(x||y.forEach&&!l((function(){(new g).entries().next()})))){var _=new g,j=_[k](x?{}:-0,1)!=_,E=l((function(){_.has(1)})),C=f((function(e){new g(e)})),O=!x&&l((function(){for(var e=new g,n=5;n--;)e[k](n,n);return!e.has(-0)}));C||((g=n((function(n,i){p(n,g,e);var t=m(new b,n,g);return null!=i&&c(i,h,t[k],t),t}))).prototype=y,y.constructor=g),(E||O)&&(S("delete"),S("has"),h&&S("get")),(O||j)&&S(k),x&&y.clear&&delete y.clear}else g=v.getConstructor(n,e,h,k),r(g.prototype,i),s.NEED=!0;return d(g,e),w[e]=g,a(a.G+a.W+a.F*(g!=b),w),x||v.setStrong(g,e,h),g}},function(e,n,i){for(var t,a=i(2),o=i(12),r=i(36),s=r("typed_array"),c=r("view"),p=!(!a.ArrayBuffer||!a.DataView),u=p,l=0,f="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");l<9;)(t=a[f[l++]])?(o(t.prototype,s,!0),o(t.prototype,c,!0)):u=!1;e.exports={ABV:p,CONSTR:u,TYPED:s,VIEW:c}},function(e,n,i){"use strict";e.exports=i(32)||!i(3)((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete i(2)[e]}))},function(e,n,i){"use strict";var t=i(0);e.exports=function(e){t(t.S,e,{of:function(){for(var e=arguments.length,n=new Array(e);e--;)n[e]=arguments[e];return new this(n)}})}},function(e,n,i){"use strict";var t=i(0),a=i(11),o=i(21),r=i(43);e.exports=function(e){t(t.S,e,{from:function(e){var n,i,t,s,c=arguments[1];return a(this),(n=void 0!==c)&&a(c),null==e?new this:(i=[],n?(t=0,s=o(c,arguments[2],2),r(e,!1,(function(e){i.push(s(e,t++))}))):r(e,!1,i.push,i),new this(i))}})}},function(e,n){e.exports=require("util")},function(e,n,i){var t=i(160);e.exports=t("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")},function(e,n){e.exports=require("path")},function(e,n,i){var t=i(426),a=i(73),o=i(75),r=i(106),s=i(107),c=i(108).parse,p=i(57),u=i(428),l=i(431),f=i(435);function d(e){if(!(this instanceof d))return new d;for(var n in this._overheadLength=0,this._valueLength=0,this._valuesToMeasure=[],t.call(this),e=e||{})this[n]=e[n]}e.exports=d,a.inherits(d,t),d.LINE_BREAK="\r\n",d.DEFAULT_CONTENT_TYPE="application/octet-stream",d.prototype.append=function(e,n,i){"string"==typeof(i=i||{})&&(i={filename:i});var o=t.prototype.append.bind(this);if("number"==typeof n&&(n=""+n),a.isArray(n))this._error(new Error("Arrays are not supported."));else{var r=this._multiPartHeader(e,n,i),s=this._multiPartFooter();o(r),o(n),o(s),this._trackLength(r,n,i)}},d.prototype._trackLength=function(e,n,i){var t=0;null!=i.knownLength?t+=+i.knownLength:Buffer.isBuffer(n)?t=n.length:"string"==typeof n&&(t=Buffer.byteLength(n)),this._valueLength+=t,this._overheadLength+=Buffer.byteLength(e)+d.LINE_BREAK.length,n&&(n.path||n.readable&&n.hasOwnProperty("httpVersion"))&&(i.knownLength||this._valuesToMeasure.push(n))},d.prototype._lengthRetriever=function(e,n){e.hasOwnProperty("fd")?null!=e.end&&e.end!=1/0&&null!=e.start?n(null,e.end+1-(e.start?e.start:0)):p.stat(e.path,(function(i,t){var a;i?n(i):(a=t.size-(e.start?e.start:0),n(null,a))})):e.hasOwnProperty("httpVersion")?n(null,+e.headers["content-length"]):e.hasOwnProperty("httpModule")?(e.on("response",(function(i){e.pause(),n(null,+i.headers["content-length"])})),e.resume()):n("Unknown stream")},d.prototype._multiPartHeader=function(e,n,i){if("string"==typeof i.header)return i.header;var t,a=this._getContentDisposition(n,i),o=this._getContentType(n,i),r="",s={"Content-Disposition":["form-data",'name="'+e+'"'].concat(a||[]),"Content-Type":[].concat(o||[])};for(var c in"object"==typeof i.header&&f(s,i.header),s)s.hasOwnProperty(c)&&null!=(t=s[c])&&(Array.isArray(t)||(t=[t]),t.length&&(r+=c+": "+t.join("; ")+d.LINE_BREAK));return"--"+this.getBoundary()+d.LINE_BREAK+r+d.LINE_BREAK},d.prototype._getContentDisposition=function(e,n){var i,t;return"string"==typeof n.filepath?i=o.normalize(n.filepath).replace(/\\/g,"/"):n.filename||e.name||e.path?i=o.basename(n.filename||e.name||e.path):e.readable&&e.hasOwnProperty("httpVersion")&&(i=o.basename(e.client._httpMessage.path||"")),i&&(t='filename="'+i+'"'),t},d.prototype._getContentType=function(e,n){var i=n.contentType;return!i&&e.name&&(i=u.lookup(e.name)),!i&&e.path&&(i=u.lookup(e.path)),!i&&e.readable&&e.hasOwnProperty("httpVersion")&&(i=e.headers["content-type"]),i||!n.filepath&&!n.filename||(i=u.lookup(n.filepath||n.filename)),i||"object"!=typeof e||(i=d.DEFAULT_CONTENT_TYPE),i},d.prototype._multiPartFooter=function(){return function(e){var n=d.LINE_BREAK;0===this._streams.length&&(n+=this._lastBoundary()),e(n)}.bind(this)},d.prototype._lastBoundary=function(){return"--"+this.getBoundary()+"--"+d.LINE_BREAK},d.prototype.getHeaders=function(e){var n,i={"content-type":"multipart/form-data; boundary="+this.getBoundary()};for(n in e)e.hasOwnProperty(n)&&(i[n.toLowerCase()]=e[n]);return i},d.prototype.getBoundary=function(){return this._boundary||this._generateBoundary(),this._boundary},d.prototype.getBuffer=function(){for(var e=new Buffer.alloc(0),n=this.getBoundary(),i=0,t=this._streams.length;i<t;i++)"function"!=typeof this._streams[i]&&(e=Buffer.isBuffer(this._streams[i])?Buffer.concat([e,this._streams[i]]):Buffer.concat([e,Buffer.from(this._streams[i])]),"string"==typeof this._streams[i]&&this._streams[i].substring(2,n.length+2)===n||(e=Buffer.concat([e,Buffer.from(d.LINE_BREAK)])));return Buffer.concat([e,Buffer.from(this._lastBoundary())])},d.prototype._generateBoundary=function(){for(var e="--------------------------",n=0;n<24;n++)e+=Math.floor(10*Math.random()).toString(16);this._boundary=e},d.prototype.getLengthSync=function(){var e=this._overheadLength+this._valueLength;return this._streams.length&&(e+=this._lastBoundary().length),this.hasKnownLength()||this._error(new Error("Cannot calculate proper length in synchronous way.")),e},d.prototype.hasKnownLength=function(){var e=!0;return this._valuesToMeasure.length&&(e=!1),e},d.prototype.getLength=function(e){var n=this._overheadLength+this._valueLength;this._streams.length&&(n+=this._lastBoundary().length),this._valuesToMeasure.length?l.parallel(this._valuesToMeasure,this._lengthRetriever,(function(i,t){i?e(i):(t.forEach((function(e){n+=e})),e(null,n))})):process.nextTick(e.bind(this,null,n))},d.prototype.submit=function(e,n){var i,t,a={method:"post"};return"string"==typeof e?(e=c(e),t=f({port:e.port,path:e.pathname,host:e.hostname,protocol:e.protocol},a)):(t=f(e,a)).port||(t.port="https:"==t.protocol?443:80),t.headers=this.getHeaders(e.headers),i="https:"==t.protocol?s.request(t):r.request(t),this.getLength(function(e,t){e?this._error(e):(i.setHeader("Content-Length",t),this.pipe(i),n&&(i.on("error",n),i.on("response",n.bind(this,null))))}.bind(this)),i},d.prototype._error=function(e){this.error||(this.error=e,this.pause(),this.emit("error",e))},d.prototype.toString=function(){return"[object FormData]"}},function(e,n,i){var t=i(4),a=i(2).document,o=t(a)&&t(a.createElement);e.exports=function(e){return o?a.createElement(e):{}}},function(e,n,i){var t=i(2),a=i(20),o=i(32),r=i(116),s=i(9).f;e.exports=function(e){var n=a.Symbol||(a.Symbol=o?{}:t.Symbol||{});"_"==e.charAt(0)||e in n||s(n,e,{value:r.f(e)})}},function(e,n,i){var t=i(51)("keys"),a=i(36);e.exports=function(e){return t[e]||(t[e]=a(e))}},function(e,n){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,n,i){var t=i(2).document;e.exports=t&&t.documentElement},function(e,n,i){var t=i(4),a=i(1),o=function(e,n){if(a(e),!t(n)&&null!==n)throw TypeError(n+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,n,t){try{(t=i(21)(Function.call,i(18).f(Object.prototype,"__proto__").set,2))(e,[]),n=!(e instanceof Array)}catch(e){n=!0}return function(e,i){return o(e,i),n?e.__proto__=i:t(e,i),e}}({},!1):void 0),check:o}},function(e,n){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,n,i){var t=i(4),a=i(82).set;e.exports=function(e,n,i){var o,r=n.constructor;return r!==i&&"function"==typeof r&&(o=r.prototype)!==i.prototype&&t(o)&&a&&a(e,o),e}},function(e,n,i){"use strict";var t=i(23),a=i(26);e.exports=function(e){var n=String(a(this)),i="",o=t(e);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(n+=n))1&o&&(i+=n);return i}},function(e,n){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,n){var i=Math.expm1;e.exports=!i||i(10)>22025.465794806718||i(10)<22025.465794806718||-2e-17!=i(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:i},function(e,n,i){"use strict";var t=i(32),a=i(0),o=i(13),r=i(12),s=i(49),c=i(89),p=i(46),u=i(19),l=i(5)("iterator"),f=!([].keys&&"next"in[].keys()),d=function(){return this};e.exports=function(e,n,i,m,v,h,x){c(i,n,m);var b,g,k,y=function(e){if(!f&&e in j)return j[e];switch(e){case"keys":case"values":return function(){return new i(this,e)}}return function(){return new i(this,e)}},w=n+" Iterator",S="values"==v,_=!1,j=e.prototype,E=j[l]||j["@@iterator"]||v&&j[v],C=E||y(v),O=v?S?y("entries"):C:void 0,A="Array"==n&&j.entries||E;if(A&&(k=u(A.call(new e)))!==Object.prototype&&k.next&&(p(k,w,!0),t||"function"==typeof k[l]||r(k,l,d)),S&&E&&"values"!==E.name&&(_=!0,C=function(){return E.call(this)}),t&&!x||!f&&!_&&j[l]||r(j,l,C),s[n]=C,s[w]=d,v)if(b={values:S?C:y("values"),keys:h?C:y("keys"),entries:O},x)for(g in b)g in j||o(j,g,b[g]);else a(a.P+a.F*(f||_),n,b);return b}},function(e,n,i){"use strict";var t=i(39),a=i(35),o=i(46),r={};i(12)(r,i(5)("iterator"),(function(){return this})),e.exports=function(e,n,i){e.prototype=t(r,{next:a(1,i)}),o(e,n+" Iterator")}},function(e,n,i){var t=i(63),a=i(26);e.exports=function(e,n,i){if(t(n))throw TypeError("String#"+i+" doesn't accept regex!");return String(a(e))}},function(e,n,i){var t=i(5)("match");e.exports=function(e){var n=/./;try{"/./"[e](n)}catch(i){try{return n[t]=!1,!"/./"[e](n)}catch(e){}}return!0}},function(e,n,i){var t=i(49),a=i(5)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(t.Array===e||o[a]===e)}},function(e,n,i){"use strict";var t=i(9),a=i(35);e.exports=function(e,n,i){n in e?t.f(e,n,a(0,i)):e[n]=i}},function(e,n,i){var t=i(47),a=i(5)("iterator"),o=i(49);e.exports=i(20).getIteratorMethod=function(e){if(null!=e)return e[a]||e["@@iterator"]||o[t(e)]}},function(e,n,i){var t=i(266);e.exports=function(e,n){return new(t(e))(n)}},function(e,n,i){"use strict";var t=i(10),a=i(38),o=i(6);e.exports=function(e){for(var n=t(this),i=o(n.length),r=arguments.length,s=a(r>1?arguments[1]:void 0,i),c=r>2?arguments[2]:void 0,p=void 0===c?i:a(c,i);p>s;)n[s++]=e;return n}},function(e,n,i){"use strict";var t=i(34),a=i(133),o=i(49),r=i(17);e.exports=i(88)(Array,"Array",(function(e,n){this._t=r(e),this._i=0,this._k=n}),(function(){var e=this._t,n=this._k,i=this._i++;return!e||i>=e.length?(this._t=void 0,a(1)):a(0,"keys"==n?i:"values"==n?e[i]:[i,e[i]])}),"values"),o.Arguments=o.Array,t("keys"),t("values"),t("entries")},function(e,n,i){"use strict";var t,a,o=i(54),r=RegExp.prototype.exec,s=String.prototype.replace,c=r,p=(t=/a/,a=/b*/g,r.call(t,"a"),r.call(a,"a"),0!==t.lastIndex||0!==a.lastIndex),u=void 0!==/()??/.exec("")[1];(p||u)&&(c=function(e){var n,i,t,a,c=this;return u&&(i=new RegExp("^"+c.source+"$(?!\\s)",o.call(c))),p&&(n=c.lastIndex),t=r.call(c,e),p&&t&&(c.lastIndex=c.global?t.index+t[0].length:n),u&&t&&t.length>1&&s.call(t[0],i,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(t[a]=void 0)})),t}),e.exports=c},function(e,n,i){"use strict";var t=i(62)(!0);e.exports=function(e,n,i){return n+(i?t(e,n).length:1)}},function(e,n,i){var t,a,o,r=i(21),s=i(123),c=i(81),p=i(77),u=i(2),l=u.process,f=u.setImmediate,d=u.clearImmediate,m=u.MessageChannel,v=u.Dispatch,h=0,x={},b=function(){var e=+this;if(x.hasOwnProperty(e)){var n=x[e];delete x[e],n()}},g=function(e){b.call(e.data)};f&&d||(f=function(e){for(var n=[],i=1;arguments.length>i;)n.push(arguments[i++]);return x[++h]=function(){s("function"==typeof e?e:Function(e),n)},t(h),h},d=function(e){delete x[e]},"process"==i(22)(l)?t=function(e){l.nextTick(r(b,e,1))}:v&&v.now?t=function(e){v.now(r(b,e,1))}:m?(o=(a=new m).port2,a.port1.onmessage=g,t=r(o.postMessage,o,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(t=function(e){u.postMessage(e+"","*")},u.addEventListener("message",g,!1)):t="onreadystatechange"in p("script")?function(e){c.appendChild(p("script")).onreadystatechange=function(){c.removeChild(this),b.call(e)}}:function(e){setTimeout(r(b,e,1),0)}),e.exports={set:f,clear:d}},function(e,n,i){var t=i(2),a=i(100).set,o=t.MutationObserver||t.WebKitMutationObserver,r=t.process,s=t.Promise,c="process"==i(22)(r);e.exports=function(){var e,n,i,p=function(){var t,a;for(c&&(t=r.domain)&&t.exit();e;){a=e.fn,e=e.next;try{a()}catch(t){throw e?i():n=void 0,t}}n=void 0,t&&t.enter()};if(c)i=function(){r.nextTick(p)};else if(!o||t.navigator&&t.navigator.standalone)if(s&&s.resolve){var u=s.resolve(void 0);i=function(){u.then(p)}}else i=function(){a.call(t,p)};else{var l=!0,f=document.createTextNode("");new o(p).observe(f,{characterData:!0}),i=function(){f.data=l=!l}}return function(t){var a={fn:t,next:void 0};n&&(n.next=a),e||(e=a,i()),n=a}}},function(e,n,i){"use strict";var t=i(11);function a(e){var n,i;this.promise=new e((function(e,t){if(void 0!==n||void 0!==i)throw TypeError("Bad Promise constructor");n=e,i=t})),this.resolve=t(n),this.reject=t(i)}e.exports.f=function(e){return new a(e)}},function(e,n,i){"use strict";var t=i(2),a=i(7),o=i(32),r=i(69),s=i(12),c=i(44),p=i(3),u=i(42),l=i(23),f=i(6),d=i(143),m=i(40).f,v=i(9).f,h=i(96),x=i(46),b=t.ArrayBuffer,g=t.DataView,k=t.Math,y=t.RangeError,w=t.Infinity,S=b,_=k.abs,j=k.pow,E=k.floor,C=k.log,O=k.LN2,A=a?"_b":"buffer",P=a?"_l":"byteLength",M=a?"_o":"byteOffset";function F(e,n,i){var t,a,o,r=new Array(i),s=8*i-n-1,c=(1<<s)-1,p=c>>1,u=23===n?j(2,-24)-j(2,-77):0,l=0,f=e<0||0===e&&1/e<0?1:0;for((e=_(e))!=e||e===w?(a=e!=e?1:0,t=c):(t=E(C(e)/O),e*(o=j(2,-t))<1&&(t--,o*=2),(e+=t+p>=1?u/o:u*j(2,1-p))*o>=2&&(t++,o/=2),t+p>=c?(a=0,t=c):t+p>=1?(a=(e*o-1)*j(2,n),t+=p):(a=e*j(2,p-1)*j(2,n),t=0));n>=8;r[l++]=255&a,a/=256,n-=8);for(t=t<<n|a,s+=n;s>0;r[l++]=255&t,t/=256,s-=8);return r[--l]|=128*f,r}function B(e,n,i){var t,a=8*i-n-1,o=(1<<a)-1,r=o>>1,s=a-7,c=i-1,p=e[c--],u=127&p;for(p>>=7;s>0;u=256*u+e[c],c--,s-=8);for(t=u&(1<<-s)-1,u>>=-s,s+=n;s>0;t=256*t+e[c],c--,s-=8);if(0===u)u=1-r;else{if(u===o)return t?NaN:p?-w:w;t+=j(2,n),u-=r}return(p?-1:1)*t*j(2,u-n)}function z(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function I(e){return[255&e]}function N(e){return[255&e,e>>8&255]}function T(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function L(e){return F(e,52,8)}function R(e){return F(e,23,4)}function q(e,n,i){v(e.prototype,n,{get:function(){return this[i]}})}function D(e,n,i,t){var a=d(+i);if(a+n>e[P])throw y("Wrong index!");var o=e[A]._b,r=a+e[M],s=o.slice(r,r+n);return t?s:s.reverse()}function U(e,n,i,t,a,o){var r=d(+i);if(r+n>e[P])throw y("Wrong index!");for(var s=e[A]._b,c=r+e[M],p=t(+a),u=0;u<n;u++)s[c+u]=p[o?u:n-u-1]}if(r.ABV){if(!p((function(){b(1)}))||!p((function(){new b(-1)}))||p((function(){return new b,new b(1.5),new b(NaN),"ArrayBuffer"!=b.name}))){for(var V,$=(b=function(e){return u(this,b),new S(d(e))}).prototype=S.prototype,W=m(S),G=0;W.length>G;)(V=W[G++])in b||s(b,V,S[V]);o||($.constructor=b)}var H=new g(new b(2)),J=g.prototype.setInt8;H.setInt8(0,2147483648),H.setInt8(1,2147483649),!H.getInt8(0)&&H.getInt8(1)||c(g.prototype,{setInt8:function(e,n){J.call(this,e,n<<24>>24)},setUint8:function(e,n){J.call(this,e,n<<24>>24)}},!0)}else b=function(e){u(this,b,"ArrayBuffer");var n=d(e);this._b=h.call(new Array(n),0),this[P]=n},g=function(e,n,i){u(this,g,"DataView"),u(e,b,"DataView");var t=e[P],a=l(n);if(a<0||a>t)throw y("Wrong offset!");if(a+(i=void 0===i?t-a:f(i))>t)throw y("Wrong length!");this[A]=e,this[M]=a,this[P]=i},a&&(q(b,"byteLength","_l"),q(g,"buffer","_b"),q(g,"byteLength","_l"),q(g,"byteOffset","_o")),c(g.prototype,{getInt8:function(e){return D(this,1,e)[0]<<24>>24},getUint8:function(e){return D(this,1,e)[0]},getInt16:function(e){var n=D(this,2,e,arguments[1]);return(n[1]<<8|n[0])<<16>>16},getUint16:function(e){var n=D(this,2,e,arguments[1]);return n[1]<<8|n[0]},getInt32:function(e){return z(D(this,4,e,arguments[1]))},getUint32:function(e){return z(D(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return B(D(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return B(D(this,8,e,arguments[1]),52,8)},setInt8:function(e,n){U(this,1,e,I,n)},setUint8:function(e,n){U(this,1,e,I,n)},setInt16:function(e,n){U(this,2,e,N,n,arguments[2])},setUint16:function(e,n){U(this,2,e,N,n,arguments[2])},setInt32:function(e,n){U(this,4,e,T,n,arguments[2])},setUint32:function(e,n){U(this,4,e,T,n,arguments[2])},setFloat32:function(e,n){U(this,4,e,R,n,arguments[2])},setFloat64:function(e,n){U(this,8,e,L,n,arguments[2])}});x(b,"ArrayBuffer"),x(g,"DataView"),s(g.prototype,r.VIEW,!0),n.ArrayBuffer=b,n.DataView=g},function(e,n,i){"use strict";var t=i(15),a=i(379),o={"Content-Type":"application/x-www-form-urlencoded"};function r(e,n){!t.isUndefined(e)&&t.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var s,c={adapter:("undefined"!=typeof XMLHttpRequest?s=i(380):"undefined"!=typeof process&&(s=i(384)),s),transformRequest:[function(e,n){return a(n,"Content-Type"),t.isFormData(e)||t.isArrayBuffer(e)||t.isBuffer(e)||t.isStream(e)||t.isFile(e)||t.isBlob(e)?e:t.isArrayBufferView(e)?e.buffer:t.isURLSearchParams(e)?(r(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):t.isObject(e)?(r(n,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},t.forEach(["delete","get","head"],(function(e){c.headers[e]={}})),t.forEach(["post","put","patch"],(function(e){c.headers[e]=t.merge(o)})),e.exports=c},function(e,n,i){"use strict";var t=i(153);e.exports=function(e,n,i,a,o){var r=new Error(e);return t(r,n,i,a,o)}},function(e,n){e.exports=require("http")},function(e,n){e.exports=require("https")},function(e,n){e.exports=require("url")},function(e,n,i){"use strict";const t=i(74),a=i(403);n.names=a.names,n.codes=a.codes,n.defaultLengths=a.defaultLengths;const o=i(50);function r(e){n.decode(e)}n.toHexString=function(e){if(!Buffer.isBuffer(e))throw new Error("must be passed a buffer");return e.toString("hex")},n.fromHexString=function(e){return Buffer.from(e,"hex")},n.toB58String=function(e){if(!Buffer.isBuffer(e))throw new Error("must be passed a buffer");return t.encode(e)},n.fromB58String=function(e){let n=e;return Buffer.isBuffer(e)&&(n=e.toString()),Buffer.from(t.decode(n))},n.decode=function(e){if(!Buffer.isBuffer(e))throw new Error("multihash must be a Buffer");if(e.length<3)throw new Error("multihash too short. must be > 3 bytes.");const i=o.decode(e);if(!n.isValidCode(i))throw new Error(`multihash unknown function code: 0x${i.toString(16)}`);e=e.slice(o.decode.bytes);const t=o.decode(e);if(t<1)throw new Error(`multihash invalid length: 0x${t.toString(16)}`);if((e=e.slice(o.decode.bytes)).length!==t)throw new Error(`multihash length inconsistent: 0x${e.toString("hex")}`);return{code:i,name:a.codes[i],length:t,digest:e}},n.encode=function(e,i,t){if(!e||void 0===i)throw new Error("multihash encode requires at least two args: digest, code");const a=n.coerceCode(i);if(!Buffer.isBuffer(e))throw new Error("digest should be a Buffer");if(null==t&&(t=e.length),t&&e.length!==t)throw new Error("digest length should be equal to specified length.");return Buffer.concat([Buffer.from(o.encode(a)),Buffer.from(o.encode(t)),e])},n.coerceCode=function(e){let i=e;if("string"==typeof e){if(void 0===a.names[e])throw new Error(`Unrecognized hash function named: ${e}`);i=a.names[e]}if("number"!=typeof i)throw new Error(`Hash function code should be a number. Got: ${i}`);if(void 0===a.codes[i]&&!n.isAppCode(i))throw new Error(`Unrecognized function code: ${i}`);return i},n.isAppCode=function(e){return e>0&&e<16},n.isValidCode=function(e){return!!n.isAppCode(e)||!!a.codes[e]},n.validate=r,n.prefix=function(e){return r(e),e.slice(0,2)}},function(e,n,i){"use strict";function t(e){if("number"==typeof e){if(t.codes[e])return t.codes[e];throw new Error("no protocol with code: "+e)}if("string"==typeof e||e instanceof String){if(t.names[e])return t.names[e];throw new Error("no protocol with name: "+e)}throw new Error("invalid protocol id type: "+e)}const a=-1;function o(e,n,i,t,a){return{code:e,size:n,name:i,resolvable:Boolean(t),path:Boolean(a)}}t.lengthPrefixedVarSize=a,t.V=a,t.table=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,a,"ip6zone"],[53,a,"dns","resolvable"],[54,a,"dns4","resolvable"],[55,a,"dns6","resolvable"],[56,a,"dnsaddr","resolvable"],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,a,"unix",!1,"path"],[421,a,"ipfs"],[421,a,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,a,"garlic64"],[460,0,"quic"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"]],t.names={},t.codes={},t.table.map(e=>{const n=o.apply(null,e);t.codes[n.code]=n,t.names[n.name]=n}),t.object=o,e.exports=t},function(e,n,i){"use strict";const t=i(109),a=i(162),o=i(417),r=i(56),s=i(422);class c{constructor(e,n,i,r){if(p.isCID(e)){const n=e;return this.version=n.version,this.codec=n.codec,this.multihash=Buffer.from(n.multihash),void(this.multibaseName=n.multibaseName||(0===n.version?"base58btc":"base32"))}if("string"==typeof e){const n=a.isEncoded(e);if(n){const i=a.decode(e);this.version=parseInt(i.slice(0,1).toString("hex"),16),this.codec=o.getCodec(i.slice(1)),this.multihash=o.rmPrefix(i.slice(1)),this.multibaseName=n}else this.version=0,this.codec="dag-pb",this.multihash=t.fromB58String(e),this.multibaseName="base58btc";return c.validateCID(this),void Object.defineProperty(this,"string",{value:e})}if(Buffer.isBuffer(e)){const n=e.slice(0,1),i=parseInt(n.toString("hex"),16);if(1===i){const n=e;this.version=i,this.codec=o.getCodec(n.slice(1)),this.multihash=o.rmPrefix(n.slice(1)),this.multibaseName="base32"}else this.version=0,this.codec="dag-pb",this.multihash=e,this.multibaseName="base58btc";c.validateCID(this)}else this.version=e,this.codec=n,this.multihash=i,this.multibaseName=r||(0===e?"base58btc":"base32"),c.validateCID(this)}get buffer(){let e=this._buffer;if(!e){if(0===this.version)e=this.multihash;else{if(1!==this.version)throw new Error("unsupported version");e=Buffer.concat([Buffer.from("01","hex"),o.getCodeVarint(this.codec),this.multihash])}Object.defineProperty(this,"_buffer",{value:e})}return e}get prefix(){return Buffer.concat([Buffer.from(`0${this.version}`,"hex"),o.getCodeVarint(this.codec),t.prefix(this.multihash)])}toV0(){if("dag-pb"!==this.codec)throw new Error("Cannot convert a non dag-pb CID to CIDv0");const{name:e,length:n}=t.decode(this.multihash);if("sha2-256"!==e)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");if(32!==n)throw new Error("Cannot convert non 32 byte multihash CID to CIDv0");return new p(0,this.codec,this.multihash)}toV1(){return new p(1,this.codec,this.multihash)}toBaseEncodedString(e=this.multibaseName){if(this.string&&e===this.multibaseName)return this.string;let n=null;if(0===this.version){if("base58btc"!==e)throw new Error("not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()");n=t.toB58String(this.multihash)}else{if(1!==this.version)throw new Error("unsupported version");n=a.encode(e,this.buffer).toString()}return e===this.multibaseName&&Object.defineProperty(this,"string",{value:n}),n}toString(e){return this.toBaseEncodedString(e)}toJSON(){return{codec:this.codec,version:this.version,hash:this.multihash}}equals(e){return this.codec===e.codec&&this.version===e.version&&this.multihash.equals(e.multihash)}static validateCID(e){const n=s.checkCIDComponents(e);if(n)throw new Error(n)}}const p=i(165)(c,{className:"CID",symbolName:"@ipld/js-cid/CID"});p.codecs=r,e.exports=p},function(e,n,i){var t=i(57),a=i(75);n.readdirr=function(e,n){var i=[],o=[];i.push(e),function e(r){if(r==i.length)return n(null,i,o);t.readdir(i[r],(function(s,c){if(s)return n(s);!function(e,n,r){!function s(c){if(c==n.length)return r();var p=a.join(e,n[c]);t.stat(p,(function(e,n){if(e)return r(e);n.isDirectory()?i.push(p):o.push(p),s(++c)}))}(0)}(i[r],c,(function(i){if(i)return n(i);e(++r)}))}))}(0)}},function(e,n,i){var t=i(57),a=i(112).readdirr;function o(e,n){return e>n?-1:e<n?1:0}n.rmdirr=function(e,i){a(e,(function(e,t,a){if(e)return i(e);n.rmfiles(a,(function(e){if(e)return i(e);n.rmdirs(t,i)}))}))},n.rmfiles=function(e,n){!function i(a){if(a==e.length)return n();t.unlink(e[a],(function(e){if(e)return n(e);i(++a)}))}(0)},n.rmdirs=function(e,n){e.sort(o),function i(a){if(a==e.length)return n();t.rmdir(e[a],(function(e){if(e)return n(e);i(++a)}))}(0)}},function(e,n,i){var t=i(57),a=i(75),o=i(112).readdirr;n.cpdirr=function(e,i,t){o(e,(function(a,o,r){if(a)return t(a);n.cpdirs(e,i,o,(function(a){if(a)return t(a);n.cpfiles(e,i,r,(function(e){if(e)return t(e);t()}))}))}))},n.cpdirs=function(e,n,i,o){i.sort(),function r(s){if(s==i.length)return o();var c=a.relative(e,i[s]);c=a.join(n,c),t.exists(c,(function(e){if(e)return r(++s);t.mkdir(c,(function(e){if(e)return o(e);r(++s)}))}))}(0)},n.cpfiles=function(e,n,i,o){!function r(s){if(s==i.length)return o();t.readFile(i[s],(function(c,p){if(c)return o(c);var u=a.relative(e,i[s]);u=a.join(n,u),t.writeFile(u,p,(function(e){if(e)return o(e);r(++s)}))}))}(0)}},function(e,n,i){e.exports=!i(7)&&!i(3)((function(){return 7!=Object.defineProperty(i(77)("div"),"a",{get:function(){return 7}}).a}))},function(e,n,i){n.f=i(5)},function(e,n,i){var t=i(16),a=i(17),o=i(59)(!1),r=i(79)("IE_PROTO");e.exports=function(e,n){var i,s=a(e),c=0,p=[];for(i in s)i!=r&&t(s,i)&&p.push(i);for(;n.length>c;)t(s,i=n[c++])&&(~o(p,i)||p.push(i));return p}},function(e,n,i){var t=i(9),a=i(1),o=i(37);e.exports=i(7)?Object.defineProperties:function(e,n){a(e);for(var i,r=o(n),s=r.length,c=0;s>c;)t.f(e,i=r[c++],n[i]);return e}},function(e,n,i){var t=i(17),a=i(40).f,o={}.toString,r="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return r&&"[object Window]"==o.call(e)?function(e){try{return a(e)}catch(e){return r.slice()}}(e):a(t(e))}},function(e,n,i){"use strict";var t=i(7),a=i(37),o=i(60),r=i(53),s=i(10),c=i(52),p=Object.assign;e.exports=!p||i(3)((function(){var e={},n={},i=Symbol(),t="abcdefghijklmnopqrst";return e[i]=7,t.split("").forEach((function(e){n[e]=e})),7!=p({},e)[i]||Object.keys(p({},n)).join("")!=t}))?function(e,n){for(var i=s(e),p=arguments.length,u=1,l=o.f,f=r.f;p>u;)for(var d,m=c(arguments[u++]),v=l?a(m).concat(l(m)):a(m),h=v.length,x=0;h>x;)d=v[x++],t&&!f.call(m,d)||(i[d]=m[d]);return i}:p},function(e,n){e.exports=Object.is||function(e,n){return e===n?0!==e||1/e==1/n:e!=e&&n!=n}},function(e,n,i){"use strict";var t=i(11),a=i(4),o=i(123),r=[].slice,s={},c=function(e,n,i){if(!(n in s)){for(var t=[],a=0;a<n;a++)t[a]="a["+a+"]";s[n]=Function("F,a","return new F("+t.join(",")+")")}return s[n](e,i)};e.exports=Function.bind||function(e){var n=t(this),i=r.call(arguments,1),s=function(){var t=i.concat(r.call(arguments));return this instanceof s?c(n,t.length,t):o(n,t,e)};return a(n.prototype)&&(s.prototype=n.prototype),s}},function(e,n){e.exports=function(e,n,i){var t=void 0===i;switch(n.length){case 0:return t?e():e.call(i);case 1:return t?e(n[0]):e.call(i,n[0]);case 2:return t?e(n[0],n[1]):e.call(i,n[0],n[1]);case 3:return t?e(n[0],n[1],n[2]):e.call(i,n[0],n[1],n[2]);case 4:return t?e(n[0],n[1],n[2],n[3]):e.call(i,n[0],n[1],n[2],n[3])}return e.apply(i,n)}},function(e,n,i){var t=i(2).parseInt,a=i(48).trim,o=i(83),r=/^[-+]?0[xX]/;e.exports=8!==t(o+"08")||22!==t(o+"0x16")?function(e,n){var i=a(String(e),3);return t(i,n>>>0||(r.test(i)?16:10))}:t},function(e,n,i){var t=i(2).parseFloat,a=i(48).trim;e.exports=1/t(i(83)+"-0")!=-1/0?function(e){var n=a(String(e),3),i=t(n);return 0===i&&"-"==n.charAt(0)?-0:i}:t},function(e,n,i){var t=i(22);e.exports=function(e,n){if("number"!=typeof e&&"Number"!=t(e))throw TypeError(n);return+e}},function(e,n,i){var t=i(4),a=Math.floor;e.exports=function(e){return!t(e)&&isFinite(e)&&a(e)===e}},function(e,n){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,n,i){var t=i(86),a=Math.pow,o=a(2,-52),r=a(2,-23),s=a(2,127)*(2-r),c=a(2,-126);e.exports=Math.fround||function(e){var n,i,a=Math.abs(e),p=t(e);return a<c?p*(a/c/r+1/o-1/o)*c*r:(i=(n=(1+r/o)*a)-(n-a))>s||i!=i?p*(1/0):p*i}},function(e,n,i){var t=i(1);e.exports=function(e,n,i,a){try{return a?n(t(i)[0],i[1]):n(i)}catch(n){var o=e.return;throw void 0!==o&&t(o.call(e)),n}}},function(e,n,i){var t=i(11),a=i(10),o=i(52),r=i(6);e.exports=function(e,n,i,s,c){t(n);var p=a(e),u=o(p),l=r(p.length),f=c?l-1:0,d=c?-1:1;if(i<2)for(;;){if(f in u){s=u[f],f+=d;break}if(f+=d,c?f<0:l<=f)throw TypeError("Reduce of empty array with no initial value")}for(;c?f>=0:l>f;f+=d)f in u&&(s=n(s,u[f],f,p));return s}},function(e,n,i){"use strict";var t=i(10),a=i(38),o=i(6);e.exports=[].copyWithin||function(e,n){var i=t(this),r=o(i.length),s=a(e,r),c=a(n,r),p=arguments.length>2?arguments[2]:void 0,u=Math.min((void 0===p?r:a(p,r))-c,r-s),l=1;for(c<s&&s<c+u&&(l=-1,c+=u-1,s+=u-1);u-- >0;)c in i?i[s]=i[c]:delete i[s],s+=l,c+=l;return i}},function(e,n){e.exports=function(e,n){return{value:n,done:!!e}}},function(e,n,i){"use strict";var t=i(98);i(0)({target:"RegExp",proto:!0,forced:t!==/./.exec},{exec:t})},function(e,n,i){i(7)&&"g"!=/./g.flags&&i(9).f(RegExp.prototype,"flags",{configurable:!0,get:i(54)})},function(e,n){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,n,i){var t=i(1),a=i(4),o=i(102);e.exports=function(e,n){if(t(e),a(n)&&n.constructor===e)return n;var i=o.f(e);return(0,i.resolve)(n),i.promise}},function(e,n,i){"use strict";var t=i(139),a=i(45);e.exports=i(68)("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var n=t.getEntry(a(this,"Map"),e);return n&&n.v},set:function(e,n){return t.def(a(this,"Map"),0===e?0:e,n)}},t,!0)},function(e,n,i){"use strict";var t=i(9).f,a=i(39),o=i(44),r=i(21),s=i(42),c=i(43),p=i(88),u=i(133),l=i(41),f=i(7),d=i(33).fastKey,m=i(45),v=f?"_s":"size",h=function(e,n){var i,t=d(n);if("F"!==t)return e._i[t];for(i=e._f;i;i=i.n)if(i.k==n)return i};e.exports={getConstructor:function(e,n,i,p){var u=e((function(e,t){s(e,u,n,"_i"),e._t=n,e._i=a(null),e._f=void 0,e._l=void 0,e[v]=0,null!=t&&c(t,i,e[p],e)}));return o(u.prototype,{clear:function(){for(var e=m(this,n),i=e._i,t=e._f;t;t=t.n)t.r=!0,t.p&&(t.p=t.p.n=void 0),delete i[t.i];e._f=e._l=void 0,e[v]=0},delete:function(e){var i=m(this,n),t=h(i,e);if(t){var a=t.n,o=t.p;delete i._i[t.i],t.r=!0,o&&(o.n=a),a&&(a.p=o),i._f==t&&(i._f=a),i._l==t&&(i._l=o),i[v]--}return!!t},forEach:function(e){m(this,n);for(var i,t=r(e,arguments.length>1?arguments[1]:void 0,3);i=i?i.n:this._f;)for(t(i.v,i.k,this);i&&i.r;)i=i.p},has:function(e){return!!h(m(this,n),e)}}),f&&t(u.prototype,"size",{get:function(){return m(this,n)[v]}}),u},def:function(e,n,i){var t,a,o=h(e,n);return o?o.v=i:(e._l=o={i:a=d(n,!0),k:n,v:i,p:t=e._l,n:void 0,r:!1},e._f||(e._f=o),t&&(t.n=o),e[v]++,"F"!==a&&(e._i[a]=o)),e},getEntry:h,setStrong:function(e,n,i){p(e,n,(function(e,i){this._t=m(e,n),this._k=i,this._l=void 0}),(function(){for(var e=this._k,n=this._l;n&&n.r;)n=n.p;return this._t&&(this._l=n=n?n.n:this._t._f)?u(0,"keys"==e?n.k:"values"==e?n.v:[n.k,n.v]):(this._t=void 0,u(1))}),i?"entries":"values",!i,!0),l(n)}}},function(e,n,i){"use strict";var t=i(139),a=i(45);e.exports=i(68)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return t.def(a(this,"Set"),e=0===e?0:e,e)}},t)},function(e,n,i){"use strict";var t,a=i(2),o=i(28)(0),r=i(13),s=i(33),c=i(120),p=i(142),u=i(4),l=i(45),f=i(45),d=!a.ActiveXObject&&"ActiveXObject"in a,m=s.getWeak,v=Object.isExtensible,h=p.ufstore,x=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},b={get:function(e){if(u(e)){var n=m(e);return!0===n?h(l(this,"WeakMap")).get(e):n?n[this._i]:void 0}},set:function(e,n){return p.def(l(this,"WeakMap"),e,n)}},g=e.exports=i(68)("WeakMap",x,b,p,!0,!0);f&&d&&(c((t=p.getConstructor(x,"WeakMap")).prototype,b),s.NEED=!0,o(["delete","has","get","set"],(function(e){var n=g.prototype,i=n[e];r(n,e,(function(n,a){if(u(n)&&!v(n)){this._f||(this._f=new t);var o=this._f[e](n,a);return"set"==e?this:o}return i.call(this,n,a)}))})))},function(e,n,i){"use strict";var t=i(44),a=i(33).getWeak,o=i(1),r=i(4),s=i(42),c=i(43),p=i(28),u=i(16),l=i(45),f=p(5),d=p(6),m=0,v=function(e){return e._l||(e._l=new h)},h=function(){this.a=[]},x=function(e,n){return f(e.a,(function(e){return e[0]===n}))};h.prototype={get:function(e){var n=x(this,e);if(n)return n[1]},has:function(e){return!!x(this,e)},set:function(e,n){var i=x(this,e);i?i[1]=n:this.a.push([e,n])},delete:function(e){var n=d(this.a,(function(n){return n[0]===e}));return~n&&this.a.splice(n,1),!!~n}},e.exports={getConstructor:function(e,n,i,o){var p=e((function(e,t){s(e,p,n,"_i"),e._t=n,e._i=m++,e._l=void 0,null!=t&&c(t,i,e[o],e)}));return t(p.prototype,{delete:function(e){if(!r(e))return!1;var i=a(e);return!0===i?v(l(this,n)).delete(e):i&&u(i,this._i)&&delete i[this._i]},has:function(e){if(!r(e))return!1;var i=a(e);return!0===i?v(l(this,n)).has(e):i&&u(i,this._i)}}),p},def:function(e,n,i){var t=a(o(n),!0);return!0===t?v(e).set(n,i):t[e._i]=i,e},ufstore:v}},function(e,n,i){var t=i(23),a=i(6);e.exports=function(e){if(void 0===e)return 0;var n=t(e),i=a(n);if(n!==i)throw RangeError("Wrong length!");return i}},function(e,n,i){var t=i(40),a=i(60),o=i(1),r=i(2).Reflect;e.exports=r&&r.ownKeys||function(e){var n=t.f(o(e)),i=a.f;return i?n.concat(i(e)):n}},function(e,n,i){"use strict";var t=i(61),a=i(4),o=i(6),r=i(21),s=i(5)("isConcatSpreadable");e.exports=function e(n,i,c,p,u,l,f,d){for(var m,v,h=u,x=0,b=!!f&&r(f,d,3);x<p;){if(x in c){if(m=b?b(c[x],x,i):c[x],v=!1,a(m)&&(v=void 0!==(v=m[s])?!!v:t(m)),v&&l>0)h=e(n,i,m,o(m.length),h,l-1)-1;else{if(h>=9007199254740991)throw TypeError();n[h]=m}h++}x++}return h}},function(e,n,i){var t=i(6),a=i(85),o=i(26);e.exports=function(e,n,i,r){var s=String(o(e)),c=s.length,p=void 0===i?" ":String(i),u=t(n);if(u<=c||""==p)return s;var l=u-c,f=a.call(p,Math.ceil(l/p.length));return f.length>l&&(f=f.slice(0,l)),r?f+s:s+f}},function(e,n,i){var t=i(7),a=i(37),o=i(17),r=i(53).f;e.exports=function(e){return function(n){for(var i,s=o(n),c=a(s),p=c.length,u=0,l=[];p>u;)i=c[u++],t&&!r.call(s,i)||l.push(e?[i,s[i]]:s[i]);return l}}},function(e,n,i){var t=i(47),a=i(149);e.exports=function(e){return function(){if(t(this)!=e)throw TypeError(e+"#toJSON isn't generic");return a(this)}}},function(e,n,i){var t=i(43);e.exports=function(e,n){var i=[];return t(e,!1,i.push,i,n),i}},function(e,n){e.exports=Math.scale||function(e,n,i,t,a){return 0===arguments.length||e!=e||n!=n||i!=i||t!=t||a!=a?NaN:e===1/0||e===-1/0?e:(e-n)*(a-t)/(i-n)+t}},function(e,n,i){"use strict";e.exports=function(e,n){return function(){for(var i=new Array(arguments.length),t=0;t<i.length;t++)i[t]=arguments[t];return e.apply(n,i)}}},function(e,n,i){"use strict";var t=i(105);e.exports=function(e,n,i){var a=i.config.validateStatus;i.status&&a&&!a(i.status)?n(t("Request failed with status code "+i.status,i.config,null,i.request,i)):e(i)}},function(e,n,i){"use strict";e.exports=function(e,n,i,t,a){return e.config=n,i&&(e.code=i),e.request=t,e.response=a,e}},function(e,n,i){"use strict";var t=i(15);function a(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,i){if(!n)return e;var o;if(i)o=i(n);else if(t.isURLSearchParams(n))o=n.toString();else{var r=[];t.forEach(n,(function(e,n){null!=e&&(t.isArray(e)?n+="[]":e=[e],t.forEach(e,(function(e){t.isDate(e)?e=e.toISOString():t.isObject(e)&&(e=JSON.stringify(e)),r.push(a(n)+"="+a(e))})))})),o=r.join("&")}return o&&(e+=(-1===e.indexOf("?")?"?":"&")+o),e}},function(e,n,i){var t=i(108),a=i(106),o=i(107),r=i(385),s=i(58).Writable,c=i(386)("follow-redirects"),p={GET:!0,HEAD:!0,OPTIONS:!0,TRACE:!0},u=Object.create(null);function l(e,n){s.call(this),e.headers=e.headers||{},this._options=e,this._redirectCount=0,this._redirects=[],this._requestBodyLength=0,this._requestBodyBuffers=[],e.host&&(e.hostname||(e.hostname=e.host),delete e.host),n&&this.on("response",n);var i=this;if(this._onNativeResponse=function(e){i._processResponse(e)},!e.pathname&&e.path){var t=e.path.indexOf("?");t<0?e.pathname=e.path:(e.pathname=e.path.substring(0,t),e.search=e.path.substring(t))}this._performRequest()}function f(e){var n={maxRedirects:21,maxBodyLength:10485760},i={};return Object.keys(e).forEach((function(a){var o=a+":",s=i[o]=e[a],p=n[a]=Object.create(s);p.request=function(e,a){return"string"==typeof e?(e=t.parse(e)).maxRedirects=n.maxRedirects:e=Object.assign({protocol:o,maxRedirects:n.maxRedirects,maxBodyLength:n.maxBodyLength},e),e.nativeProtocols=i,r.equal(e.protocol,o,"protocol mismatch"),c("options",e),new l(e,a)},p.get=function(e,n){var i=p.request(e,n);return i.end(),i}})),n}["abort","aborted","error","socket","timeout"].forEach((function(e){u[e]=function(n){this._redirectable.emit(e,n)}})),l.prototype=Object.create(s.prototype),l.prototype.write=function(e,n,i){if(!("string"==typeof e||"object"==typeof e&&"length"in e))throw new Error("data should be a string, Buffer or Uint8Array");"function"==typeof n&&(i=n,n=null),0!==e.length?this._requestBodyLength+e.length<=this._options.maxBodyLength?(this._requestBodyLength+=e.length,this._requestBodyBuffers.push({data:e,encoding:n}),this._currentRequest.write(e,n,i)):(this.emit("error",new Error("Request body larger than maxBodyLength limit")),this.abort()):i&&i()},l.prototype.end=function(e,n,i){"function"==typeof e?(i=e,e=n=null):"function"==typeof n&&(i=n,n=null);var t=this._currentRequest;this.write(e||"",n,(function(){t.end(null,null,i)}))},l.prototype.setHeader=function(e,n){this._options.headers[e]=n,this._currentRequest.setHeader(e,n)},l.prototype.removeHeader=function(e){delete this._options.headers[e],this._currentRequest.removeHeader(e)},["abort","flushHeaders","getHeader","setNoDelay","setSocketKeepAlive","setTimeout"].forEach((function(e){l.prototype[e]=function(n,i){return this._currentRequest[e](n,i)}})),["aborted","connection","socket"].forEach((function(e){Object.defineProperty(l.prototype,e,{get:function(){return this._currentRequest[e]}})})),l.prototype._performRequest=function(){var e=this._options.protocol,n=this._options.nativeProtocols[e];if(n){if(this._options.agents){var i=e.substr(0,e.length-1);this._options.agent=this._options.agents[i]}var a=this._currentRequest=n.request(this._options,this._onNativeResponse);for(var o in this._currentUrl=t.format(this._options),a._redirectable=this,u)o&&a.on(o,u[o]);if(this._isRedirect){var r=0,s=this._requestBodyBuffers;!function e(){if(r<s.length){var n=s[r++];a.write(n.data,n.encoding,e)}else a.end()}()}}else this.emit("error",new Error("Unsupported protocol "+e))},l.prototype._processResponse=function(e){this._options.trackRedirects&&this._redirects.push({url:this._currentUrl,headers:e.headers,statusCode:e.statusCode});var n=e.headers.location;if(n&&!1!==this._options.followRedirects&&e.statusCode>=300&&e.statusCode<400){if(++this._redirectCount>this._options.maxRedirects)return void this.emit("error",new Error("Max redirects exceeded."));var i,a=this._options.headers;if(307!==e.statusCode&&!(this._options.method in p))for(i in this._options.method="GET",this._requestBodyBuffers=[],a)/^content-/i.test(i)&&delete a[i];if(!this._isRedirect)for(i in a)/^host$/i.test(i)&&delete a[i];var o=t.resolve(this._currentUrl,n);c("redirecting to",o),Object.assign(this._options,t.parse(o)),this._isRedirect=!0,this._performRequest(),e.destroy()}else e.responseUrl=this._currentUrl,e.redirects=this._redirects,this.emit("response",e),this._requestBodyBuffers=[]},e.exports=f({http:a,https:o}),e.exports.wrap=f},function(e,n,i){function t(e){var i;function t(){if(t.enabled){var e=t,a=+new Date,o=a-(i||a);e.diff=o,e.prev=i,e.curr=a,i=a;for(var r=new Array(arguments.length),s=0;s<r.length;s++)r[s]=arguments[s];r[0]=n.coerce(r[0]),"string"!=typeof r[0]&&r.unshift("%O");var c=0;r[0]=r[0].replace(/%([a-zA-Z%])/g,(function(i,t){if("%%"===i)return i;c++;var a=n.formatters[t];if("function"==typeof a){var o=r[c];i=a.call(e,o),r.splice(c,1),c--}return i})),n.formatArgs.call(e,r);var p=t.log||n.log||console.log.bind(console);p.apply(e,r)}}return t.namespace=e,t.enabled=n.enabled(e),t.useColors=n.useColors(),t.color=function(e){var i,t=0;for(i in e)t=(t<<5)-t+e.charCodeAt(i),t|=0;return n.colors[Math.abs(t)%n.colors.length]}(e),t.destroy=a,"function"==typeof n.init&&n.init(t),n.instances.push(t),t}function a(){var e=n.instances.indexOf(this);return-1!==e&&(n.instances.splice(e,1),!0)}(n=e.exports=t.debug=t.default=t).coerce=function(e){return e instanceof Error?e.stack||e.message:e},n.disable=function(){n.enable("")},n.enable=function(e){var i;n.save(e),n.names=[],n.skips=[];var t=("string"==typeof e?e:"").split(/[\s,]+/),a=t.length;for(i=0;i<a;i++)t[i]&&("-"===(e=t[i].replace(/\*/g,".*?"))[0]?n.skips.push(new RegExp("^"+e.substr(1)+"$")):n.names.push(new RegExp("^"+e+"$")));for(i=0;i<n.instances.length;i++){var o=n.instances[i];o.enabled=n.enabled(o.namespace)}},n.enabled=function(e){if("*"===e[e.length-1])return!0;var i,t;for(i=0,t=n.skips.length;i<t;i++)if(n.skips[i].test(e))return!1;for(i=0,t=n.names.length;i<t;i++)if(n.names[i].test(e))return!0;return!1},n.humanize=i(388),n.instances=[],n.names=[],n.skips=[],n.formatters={}},function(e,n){e.exports=require("os")},function(e,n,i){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,n,i){"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},function(e,n,i){"use strict";var t=i(402).Buffer;e.exports=function(e){if(e.length>=255)throw new TypeError("Alphabet too long");var n=new Uint8Array(256);n.fill(255);for(var i=0;i<e.length;i++){var a=e.charAt(i),o=a.charCodeAt(0);if(255!==n[o])throw new TypeError(a+" is ambiguous");n[o]=i}var r=e.length,s=e.charAt(0),c=Math.log(r)/Math.log(256),p=Math.log(256)/Math.log(r);function u(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return t.alloc(0);var i=0;if(" "!==e[i]){for(var a=0,o=0;e[i]===s;)a++,i++;for(var p=(e.length-i)*c+1>>>0,u=new Uint8Array(p);e[i];){var l=n[e.charCodeAt(i)];if(255===l)return;for(var f=0,d=p-1;(0!==l||f<o)&&-1!==d;d--,f++)l+=r*u[d]>>>0,u[d]=l%256>>>0,l=l/256>>>0;if(0!==l)throw new Error("Non-zero carry");o=f,i++}if(" "!==e[i]){for(var m=p-o;m!==p&&0===u[m];)m++;var v=t.allocUnsafe(a+(p-m));v.fill(0,0,a);for(var h=a;m!==p;)v[h++]=u[m++];return v}}}return{encode:function(n){if(!t.isBuffer(n))throw new TypeError("Expected Buffer");if(0===n.length)return"";for(var i=0,a=0,o=0,c=n.length;o!==c&&0===n[o];)o++,i++;for(var u=(c-o)*p+1>>>0,l=new Uint8Array(u);o!==c;){for(var f=n[o],d=0,m=u-1;(0!==f||d<a)&&-1!==m;m--,d++)f+=256*l[m]>>>0,l[m]=f%r>>>0,f=f/r>>>0;if(0!==f)throw new Error("Non-zero carry");a=d,o++}for(var v=u-a;v!==u&&0===l[v];)v++;for(var h=s.repeat(i);v<u;++v)h+=e.charAt(l[v]);return h},decodeUnsafe:u,decode:function(e){var n=u(e);if(n)return n;throw new Error("Non-base"+r+" character")}}}},function(e,n){e.exports=require("buffer")},function(e,n,i){"use strict";const t=i(407);(n=e.exports=o).encode=function(e,n){const i=r(e);return o(i.name,Buffer.from(i.encode(n)))},n.decode=function(e){Buffer.isBuffer(e)&&(e=e.toString());const n=e.substring(0,1);"string"==typeof(e=e.substring(1,e.length))&&(e=Buffer.from(e));const i=r(n);return Buffer.from(i.decode(e.toString()))},n.isEncoded=function(e){Buffer.isBuffer(e)&&(e=e.toString());if("[object String]"!==Object.prototype.toString.call(e))return!1;const n=e.substring(0,1);try{return r(n).name}catch(e){return!1}},n.names=Object.freeze(Object.keys(t.names)),n.codes=Object.freeze(Object.keys(t.codes));const a=new Error("Unsupported encoding");function o(e,n){if(!n)throw new Error("requires an encoded buffer");const i=r(e),t=Buffer.from(i.code);return function(e,n){r(e).decode(n.toString())}(i.name,n),Buffer.concat([t,n])}function r(e){let n;if(t.names[e])n=t.names[e];else{if(!t.codes[e])throw a;n=t.codes[e]}if(!n.isImplemented())throw new Error("Base "+e+" is not implemented yet");return n}},function(e,n,i){"use strict";const t=i(412),a=i(110),o=i(50),r=i(74),s=i(111),c=i(165),p=Symbol.for("nodejs.util.inspect.custom"),u=c.proto((function(e){if(!(this instanceof u))return new u(e);if(null==e&&(e=""),e instanceof Buffer)this.buffer=t.fromBuffer(e);else if("string"==typeof e||e instanceof String){if(e.length>0&&"/"!==e.charAt(0))throw new Error(`multiaddr "${e}" must start with a "/"`);this.buffer=t.fromString(e)}else{if(!(e.buffer&&e.protos&&e.protoCodes))throw new Error("addr must be a string, Buffer, or another Multiaddr");this.buffer=t.fromBuffer(e.buffer)}}),{className:"Multiaddr",symbolName:"@multiformats/js-multiaddr/multiaddr"});u.prototype.toString=function(){return t.bufferToString(this.buffer)},u.prototype.toJSON=u.prototype.toString,u.prototype.toOptions=function(){const e={},n=this.toString().split("/");return e.family="ip4"===n[1]?"ipv4":"ipv6",e.host=n[2],e.transport=n[3],e.port=parseInt(n[4]),e},u.prototype[p]=function(){return"<Multiaddr "+this.buffer.toString("hex")+" - "+t.bufferToString(this.buffer)+">"},u.prototype.inspect=function(){return"<Multiaddr "+this.buffer.toString("hex")+" - "+t.bufferToString(this.buffer)+">"},u.prototype.protos=function(){return this.protoCodes().map(e=>Object.assign({},a(e)))},u.prototype.protoCodes=function(){const e=[],n=this.buffer;let i=0;for(;i<n.length;){const r=o.decode(n,i),s=o.decode.bytes,c=a(r);i+=t.sizeForAddr(c,n.slice(i+s))+s,e.push(r)}return e},u.prototype.protoNames=function(){return this.protos().map(e=>e.name)},u.prototype.tuples=function(){return t.bufferToTuples(this.buffer)},u.prototype.stringTuples=function(){const e=t.bufferToTuples(this.buffer);return t.tuplesToStringTuples(e)},u.prototype.encapsulate=function(e){return e=u(e),u(this.toString()+e.toString())},u.prototype.decapsulate=function(e){e=e.toString();const n=this.toString(),i=n.lastIndexOf(e);if(i<0)throw new Error("Address "+this+" does not contain subaddress: "+e);return u(n.slice(0,i))},u.prototype.decapsulateCode=function(e){const n=this.tuples();for(let i=n.length-1;i>=0;i--)if(n[i][0]===e)return u(t.tuplesToBuffer(n.slice(0,i)));return this},u.prototype.getPeerId=function(){let e=null;try{e=this.stringTuples().filter(e=>{if(e[0]===a.names.ipfs.code)return!0}).pop()[1],e=r.encode(new s(e).multihash)}catch(n){e=null}return e},u.prototype.getPath=function(){let e=null;try{e=this.stringTuples().filter(e=>{if(a(e[0]).path)return!0})[0][1]}catch(n){e=null}return e},u.prototype.equals=function(e){return this.buffer.equals(e.buffer)},u.prototype.nodeAddress=function(){const e=this.protoCodes(),n=this.protoNames(),i=this.toString().split("/").slice(1);if(i.length<4)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}".');if(4!==e[0]&&41!==e[0]&&54!==e[0]&&55!==e[0])throw new Error(`no protocol with name: "'${n[0]}'". Must have a valid family name: "{ip4, ip6, dns4, dns6}".`);if("tcp"!==i[2]&&"udp"!==i[2])throw new Error(`no protocol with name: "'${n[1]}'". Must have a valid transport protocol: "{tcp, udp}".`);return{family:41===e[0]||55===e[0]?6:4,address:i[1],port:parseInt(i[3])}},u.fromNodeAddress=function(e,n){if(!e)throw new Error("requires node address object");if(!n)throw new Error("requires transport protocol");const i="IPv6"===e.family?"ip6":"ip4";return u("/"+[i,e.address,n,e.port].join("/"))},u.prototype.isThinWaistAddress=function(e){const n=(e||this).protos();return 2===n.length&&((4===n[0].code||41===n[0].code)&&(6===n[1].code||273===n[1].code))},u.protocols=a,u.isName=function(e){return!!u.isMultiaddr(e)&&e.protos().some(e=>e.resolvable)},u.resolve=function(e){return u.isMultiaddr(e)&&u.isName(e)?Promise.reject(new Error("not implemented yet")):Promise.reject(Error("not a valid name"))},e.exports=u},function(e,n,i){"use strict";const t=i(50);function a(e){return parseInt(e.toString("hex"),16)}function o(e){let n=e.toString(16);return n.length%2==1&&(n="0"+n),Buffer.from(n,"hex")}e.exports={numberToBuffer:o,bufferToNumber:a,varintBufferEncode:function(e){return Buffer.from(t.encode(a(e)))},varintBufferDecode:function(e){return o(t.decode(e))},varintEncode:function(e){return Buffer.from(t.encode(e))}}},function(e,n,i){"use strict";e.exports=function(e,{className:n,symbolName:i}){const t=Symbol.for(i),a={[n]:class extends e{constructor(...e){super(...e),Object.defineProperty(this,t,{value:!0})}get[Symbol.toStringTag](){return n}}}[n];return a[`is${n}`]=e=>!(!e||!e[t]),a},e.exports.proto=function(e,{className:n,symbolName:i,withoutNew:t}){const a=Symbol.for(i),o={[n]:function(...n){if(t&&!(this instanceof o))return new o(...n);const i=e.call(this,...n)||this;return i&&!i[a]&&Object.defineProperty(i,a,{value:!0}),i}}[n];return o.prototype=Object.create(e.prototype),o.prototype.constructor=o,Object.defineProperty(o.prototype,Symbol.toStringTag,{get:()=>n}),o[`is${n}`]=e=>!(!e||!e[a]),o}},function(e,n,i){var t=i(167),a=i(168);e.exports=function(e,n,i,o){var r=i.keyedList?i.keyedList[i.index]:i.index;i.jobs[r]=function(e,n,i,a){var o;o=2==e.length?e(i,t(a)):e(i,n,t(a));return o}(n,r,e[r],(function(e,n){r in i.jobs&&(delete i.jobs[r],e?a(i):i.results[r]=n,o(e,i.results))}))}},function(e,n,i){var t=i(433);e.exports=function(e){var n=!1;return t((function(){n=!0})),function(i,a){n?e(i,a):t((function(){e(i,a)}))}}},function(e,n){function i(e){"function"==typeof this.jobs[e]&&this.jobs[e]()}e.exports=function(e){Object.keys(e.jobs).forEach(i.bind(e)),e.jobs={}}},function(e,n){e.exports=function(e,n){var i=!Array.isArray(e),t={index:0,keyedList:i||n?Object.keys(e):null,jobs:{},results:i?{}:[],size:i?Object.keys(e).length:e.length};n&&t.keyedList.sort(i?n:function(i,t){return n(e[i],e[t])});return t}},function(e,n,i){var t=i(168),a=i(167);e.exports=function(e){if(!Object.keys(this.jobs).length)return;this.index=this.size,t(this),a(e)(null,this.results)}},function(e,n,i){var t=i(166),a=i(169),o=i(170);function r(e,n){return e<n?-1:e>n?1:0}e.exports=function(e,n,i,r){var s=a(e,i);return t(e,n,s,(function i(a,o){a?r(a,o):(s.index++,s.index<(s.keyedList||e).length?t(e,n,s,i):r(null,s.results))})),o.bind(s,r)},e.exports.ascending=r,e.exports.descending=function(e,n){return-1*r(e,n)}},function(e,n){e.exports=function(e,n){let i=e;e.lastIndexOf("/")===e.length-1&&(i=e.slice(0,-1));const t=i.lastIndexOf("/");if(-1===t)return i;{const e=i.substring(0,t+1);i=n.split(e)[1]}return i}},function(e,n,i){i(174),e.exports=i(437)},function(e,n,i){"use strict";if(i(175),i(372),i(373),global._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");global._babelPolyfill=!0;function t(e,n,i){e[n]||Object.defineProperty(e,n,{writable:!0,configurable:!0,value:i})}t(String.prototype,"padLeft","".padStart),t(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&t(Array,e,Function.call.bind([][e]))}))},function(e,n,i){i(176),i(179),i(180),i(181),i(182),i(183),i(184),i(185),i(186),i(187),i(188),i(189),i(190),i(191),i(192),i(193),i(194),i(195),i(196),i(197),i(198),i(199),i(200),i(201),i(202),i(203),i(204),i(205),i(206),i(207),i(208),i(209),i(210),i(211),i(212),i(213),i(214),i(215),i(216),i(217),i(218),i(219),i(220),i(221),i(222),i(223),i(224),i(225),i(226),i(227),i(228),i(229),i(230),i(231),i(232),i(233),i(234),i(235),i(236),i(237),i(238),i(239),i(240),i(241),i(242),i(243),i(244),i(245),i(246),i(247),i(248),i(249),i(250),i(251),i(252),i(253),i(254),i(256),i(257),i(259),i(260),i(261),i(262),i(263),i(264),i(265),i(267),i(268),i(269),i(270),i(271),i(272),i(273),i(274),i(275),i(276),i(277),i(278),i(279),i(97),i(280),i(134),i(281),i(135),i(282),i(283),i(284),i(285),i(286),i(138),i(140),i(141),i(287),i(288),i(289),i(290),i(291),i(292),i(293),i(294),i(295),i(296),i(297),i(298),i(299),i(300),i(301),i(302),i(303),i(304),i(305),i(306),i(307),i(308),i(309),i(310),i(311),i(312),i(313),i(314),i(315),i(316),i(317),i(318),i(319),i(320),i(321),i(322),i(323),i(324),i(325),i(326),i(327),i(328),i(329),i(330),i(331),i(332),i(333),i(334),i(335),i(336),i(337),i(338),i(339),i(340),i(341),i(342),i(343),i(344),i(345),i(346),i(347),i(348),i(349),i(350),i(351),i(352),i(353),i(354),i(355),i(356),i(357),i(358),i(359),i(360),i(361),i(362),i(363),i(364),i(365),i(366),i(367),i(368),i(369),i(370),i(371),e.exports=i(20)},function(e,n,i){"use strict";var t=i(2),a=i(16),o=i(7),r=i(0),s=i(13),c=i(33).KEY,p=i(3),u=i(51),l=i(46),f=i(36),d=i(5),m=i(116),v=i(78),h=i(178),x=i(61),b=i(1),g=i(4),k=i(10),y=i(17),w=i(25),S=i(35),_=i(39),j=i(119),E=i(18),C=i(60),O=i(9),A=i(37),P=E.f,M=O.f,F=j.f,B=t.Symbol,z=t.JSON,I=z&&z.stringify,N=d("_hidden"),T=d("toPrimitive"),L={}.propertyIsEnumerable,R=u("symbol-registry"),q=u("symbols"),D=u("op-symbols"),U=Object.prototype,V="function"==typeof B&&!!C.f,$=t.QObject,W=!$||!$.prototype||!$.prototype.findChild,G=o&&p((function(){return 7!=_(M({},"a",{get:function(){return M(this,"a",{value:7}).a}})).a}))?function(e,n,i){var t=P(U,n);t&&delete U[n],M(e,n,i),t&&e!==U&&M(U,n,t)}:M,H=function(e){var n=q[e]=_(B.prototype);return n._k=e,n},J=V&&"symbol"==typeof B.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof B},K=function(e,n,i){return e===U&&K(D,n,i),b(e),n=w(n,!0),b(i),a(q,n)?(i.enumerable?(a(e,N)&&e[N][n]&&(e[N][n]=!1),i=_(i,{enumerable:S(0,!1)})):(a(e,N)||M(e,N,S(1,{})),e[N][n]=!0),G(e,n,i)):M(e,n,i)},Y=function(e,n){b(e);for(var i,t=h(n=y(n)),a=0,o=t.length;o>a;)K(e,i=t[a++],n[i]);return e},X=function(e){var n=L.call(this,e=w(e,!0));return!(this===U&&a(q,e)&&!a(D,e))&&(!(n||!a(this,e)||!a(q,e)||a(this,N)&&this[N][e])||n)},Z=function(e,n){if(e=y(e),n=w(n,!0),e!==U||!a(q,n)||a(D,n)){var i=P(e,n);return!i||!a(q,n)||a(e,N)&&e[N][n]||(i.enumerable=!0),i}},Q=function(e){for(var n,i=F(y(e)),t=[],o=0;i.length>o;)a(q,n=i[o++])||n==N||n==c||t.push(n);return t},ee=function(e){for(var n,i=e===U,t=F(i?D:y(e)),o=[],r=0;t.length>r;)!a(q,n=t[r++])||i&&!a(U,n)||o.push(q[n]);return o};V||(s((B=function(){if(this instanceof B)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),n=function(i){this===U&&n.call(D,i),a(this,N)&&a(this[N],e)&&(this[N][e]=!1),G(this,e,S(1,i))};return o&&W&&G(U,e,{configurable:!0,set:n}),H(e)}).prototype,"toString",(function(){return this._k})),E.f=Z,O.f=K,i(40).f=j.f=Q,i(53).f=X,C.f=ee,o&&!i(32)&&s(U,"propertyIsEnumerable",X,!0),m.f=function(e){return H(d(e))}),r(r.G+r.W+r.F*!V,{Symbol:B});for(var ne="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ie=0;ne.length>ie;)d(ne[ie++]);for(var te=A(d.store),ae=0;te.length>ae;)v(te[ae++]);r(r.S+r.F*!V,"Symbol",{for:function(e){return a(R,e+="")?R[e]:R[e]=B(e)},keyFor:function(e){if(!J(e))throw TypeError(e+" is not a symbol!");for(var n in R)if(R[n]===e)return n},useSetter:function(){W=!0},useSimple:function(){W=!1}}),r(r.S+r.F*!V,"Object",{create:function(e,n){return void 0===n?_(e):Y(_(e),n)},defineProperty:K,defineProperties:Y,getOwnPropertyDescriptor:Z,getOwnPropertyNames:Q,getOwnPropertySymbols:ee});var oe=p((function(){C.f(1)}));r(r.S+r.F*oe,"Object",{getOwnPropertySymbols:function(e){return C.f(k(e))}}),z&&r(r.S+r.F*(!V||p((function(){var e=B();return"[null]"!=I([e])||"{}"!=I({a:e})||"{}"!=I(Object(e))}))),"JSON",{stringify:function(e){for(var n,i,t=[e],a=1;arguments.length>a;)t.push(arguments[a++]);if(i=n=t[1],(g(n)||void 0!==e)&&!J(e))return x(n)||(n=function(e,n){if("function"==typeof i&&(n=i.call(this,e,n)),!J(n))return n}),t[1]=n,I.apply(z,t)}}),B.prototype[T]||i(12)(B.prototype,T,B.prototype.valueOf),l(B,"Symbol"),l(Math,"Math",!0),l(t.JSON,"JSON",!0)},function(e,n,i){e.exports=i(51)("native-function-to-string",Function.toString)},function(e,n,i){var t=i(37),a=i(60),o=i(53);e.exports=function(e){var n=t(e),i=a.f;if(i)for(var r,s=i(e),c=o.f,p=0;s.length>p;)c.call(e,r=s[p++])&&n.push(r);return n}},function(e,n,i){var t=i(0);t(t.S,"Object",{create:i(39)})},function(e,n,i){var t=i(0);t(t.S+t.F*!i(7),"Object",{defineProperty:i(9).f})},function(e,n,i){var t=i(0);t(t.S+t.F*!i(7),"Object",{defineProperties:i(118)})},function(e,n,i){var t=i(17),a=i(18).f;i(27)("getOwnPropertyDescriptor",(function(){return function(e,n){return a(t(e),n)}}))},function(e,n,i){var t=i(10),a=i(19);i(27)("getPrototypeOf",(function(){return function(e){return a(t(e))}}))},function(e,n,i){var t=i(10),a=i(37);i(27)("keys",(function(){return function(e){return a(t(e))}}))},function(e,n,i){i(27)("getOwnPropertyNames",(function(){return i(119).f}))},function(e,n,i){var t=i(4),a=i(33).onFreeze;i(27)("freeze",(function(e){return function(n){return e&&t(n)?e(a(n)):n}}))},function(e,n,i){var t=i(4),a=i(33).onFreeze;i(27)("seal",(function(e){return function(n){return e&&t(n)?e(a(n)):n}}))},function(e,n,i){var t=i(4),a=i(33).onFreeze;i(27)("preventExtensions",(function(e){return function(n){return e&&t(n)?e(a(n)):n}}))},function(e,n,i){var t=i(4);i(27)("isFrozen",(function(e){return function(n){return!t(n)||!!e&&e(n)}}))},function(e,n,i){var t=i(4);i(27)("isSealed",(function(e){return function(n){return!t(n)||!!e&&e(n)}}))},function(e,n,i){var t=i(4);i(27)("isExtensible",(function(e){return function(n){return!!t(n)&&(!e||e(n))}}))},function(e,n,i){var t=i(0);t(t.S+t.F,"Object",{assign:i(120)})},function(e,n,i){var t=i(0);t(t.S,"Object",{is:i(121)})},function(e,n,i){var t=i(0);t(t.S,"Object",{setPrototypeOf:i(82).set})},function(e,n,i){"use strict";var t=i(47),a={};a[i(5)("toStringTag")]="z",a+""!="[object z]"&&i(13)(Object.prototype,"toString",(function(){return"[object "+t(this)+"]"}),!0)},function(e,n,i){var t=i(0);t(t.P,"Function",{bind:i(122)})},function(e,n,i){var t=i(9).f,a=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in a||i(7)&&t(a,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},function(e,n,i){"use strict";var t=i(4),a=i(19),o=i(5)("hasInstance"),r=Function.prototype;o in r||i(9).f(r,o,{value:function(e){if("function"!=typeof this||!t(e))return!1;if(!t(this.prototype))return e instanceof this;for(;e=a(e);)if(this.prototype===e)return!0;return!1}})},function(e,n,i){var t=i(0),a=i(124);t(t.G+t.F*(parseInt!=a),{parseInt:a})},function(e,n,i){var t=i(0),a=i(125);t(t.G+t.F*(parseFloat!=a),{parseFloat:a})},function(e,n,i){"use strict";var t=i(2),a=i(16),o=i(22),r=i(84),s=i(25),c=i(3),p=i(40).f,u=i(18).f,l=i(9).f,f=i(48).trim,d=t.Number,m=d,v=d.prototype,h="Number"==o(i(39)(v)),x="trim"in String.prototype,b=function(e){var n=s(e,!1);if("string"==typeof n&&n.length>2){var i,t,a,o=(n=x?n.trim():f(n,3)).charCodeAt(0);if(43===o||45===o){if(88===(i=n.charCodeAt(2))||120===i)return NaN}else if(48===o){switch(n.charCodeAt(1)){case 66:case 98:t=2,a=49;break;case 79:case 111:t=8,a=55;break;default:return+n}for(var r,c=n.slice(2),p=0,u=c.length;p<u;p++)if((r=c.charCodeAt(p))<48||r>a)return NaN;return parseInt(c,t)}}return+n};if(!d(" 0o1")||!d("0b1")||d("+0x1")){d=function(e){var n=arguments.length<1?0:e,i=this;return i instanceof d&&(h?c((function(){v.valueOf.call(i)})):"Number"!=o(i))?r(new m(b(n)),i,d):b(n)};for(var g,k=i(7)?p(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),y=0;k.length>y;y++)a(m,g=k[y])&&!a(d,g)&&l(d,g,u(m,g));d.prototype=v,v.constructor=d,i(13)(t,"Number",d)}},function(e,n,i){"use strict";var t=i(0),a=i(23),o=i(126),r=i(85),s=1..toFixed,c=Math.floor,p=[0,0,0,0,0,0],u="Number.toFixed: incorrect invocation!",l=function(e,n){for(var i=-1,t=n;++i<6;)t+=e*p[i],p[i]=t%1e7,t=c(t/1e7)},f=function(e){for(var n=6,i=0;--n>=0;)i+=p[n],p[n]=c(i/e),i=i%e*1e7},d=function(){for(var e=6,n="";--e>=0;)if(""!==n||0===e||0!==p[e]){var i=String(p[e]);n=""===n?i:n+r.call("0",7-i.length)+i}return n},m=function(e,n,i){return 0===n?i:n%2==1?m(e,n-1,i*e):m(e*e,n/2,i)};t(t.P+t.F*(!!s&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!i(3)((function(){s.call({})}))),"Number",{toFixed:function(e){var n,i,t,s,c=o(this,u),p=a(e),v="",h="0";if(p<0||p>20)throw RangeError(u);if(c!=c)return"NaN";if(c<=-1e21||c>=1e21)return String(c);if(c<0&&(v="-",c=-c),c>1e-21)if(i=(n=function(e){for(var n=0,i=e;i>=4096;)n+=12,i/=4096;for(;i>=2;)n+=1,i/=2;return n}(c*m(2,69,1))-69)<0?c*m(2,-n,1):c/m(2,n,1),i*=4503599627370496,(n=52-n)>0){for(l(0,i),t=p;t>=7;)l(1e7,0),t-=7;for(l(m(10,t,1),0),t=n-1;t>=23;)f(1<<23),t-=23;f(1<<t),l(1,1),f(2),h=d()}else l(0,i),l(1<<-n,0),h=d()+r.call("0",p);return h=p>0?v+((s=h.length)<=p?"0."+r.call("0",p-s)+h:h.slice(0,s-p)+"."+h.slice(s-p)):v+h}})},function(e,n,i){"use strict";var t=i(0),a=i(3),o=i(126),r=1..toPrecision;t(t.P+t.F*(a((function(){return"1"!==r.call(1,void 0)}))||!a((function(){r.call({})}))),"Number",{toPrecision:function(e){var n=o(this,"Number#toPrecision: incorrect invocation!");return void 0===e?r.call(n):r.call(n,e)}})},function(e,n,i){var t=i(0);t(t.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,n,i){var t=i(0),a=i(2).isFinite;t(t.S,"Number",{isFinite:function(e){return"number"==typeof e&&a(e)}})},function(e,n,i){var t=i(0);t(t.S,"Number",{isInteger:i(127)})},function(e,n,i){var t=i(0);t(t.S,"Number",{isNaN:function(e){return e!=e}})},function(e,n,i){var t=i(0),a=i(127),o=Math.abs;t(t.S,"Number",{isSafeInteger:function(e){return a(e)&&o(e)<=9007199254740991}})},function(e,n,i){var t=i(0);t(t.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,n,i){var t=i(0);t(t.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,n,i){var t=i(0),a=i(125);t(t.S+t.F*(Number.parseFloat!=a),"Number",{parseFloat:a})},function(e,n,i){var t=i(0),a=i(124);t(t.S+t.F*(Number.parseInt!=a),"Number",{parseInt:a})},function(e,n,i){var t=i(0),a=i(128),o=Math.sqrt,r=Math.acosh;t(t.S+t.F*!(r&&710==Math.floor(r(Number.MAX_VALUE))&&r(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:a(e-1+o(e-1)*o(e+1))}})},function(e,n,i){var t=i(0),a=Math.asinh;t(t.S+t.F*!(a&&1/a(0)>0),"Math",{asinh:function e(n){return isFinite(n=+n)&&0!=n?n<0?-e(-n):Math.log(n+Math.sqrt(n*n+1)):n}})},function(e,n,i){var t=i(0),a=Math.atanh;t(t.S+t.F*!(a&&1/a(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,n,i){var t=i(0),a=i(86);t(t.S,"Math",{cbrt:function(e){return a(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,n,i){var t=i(0),a=Math.exp;t(t.S,"Math",{cosh:function(e){return(a(e=+e)+a(-e))/2}})},function(e,n,i){var t=i(0),a=i(87);t(t.S+t.F*(a!=Math.expm1),"Math",{expm1:a})},function(e,n,i){var t=i(0);t(t.S,"Math",{fround:i(129)})},function(e,n,i){var t=i(0),a=Math.abs;t(t.S,"Math",{hypot:function(e,n){for(var i,t,o=0,r=0,s=arguments.length,c=0;r<s;)c<(i=a(arguments[r++]))?(o=o*(t=c/i)*t+1,c=i):o+=i>0?(t=i/c)*t:i;return c===1/0?1/0:c*Math.sqrt(o)}})},function(e,n,i){var t=i(0),a=Math.imul;t(t.S+t.F*i(3)((function(){return-5!=a(4294967295,5)||2!=a.length})),"Math",{imul:function(e,n){var i=+e,t=+n,a=65535&i,o=65535&t;return 0|a*o+((65535&i>>>16)*o+a*(65535&t>>>16)<<16>>>0)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,n,i){var t=i(0);t(t.S,"Math",{log1p:i(128)})},function(e,n,i){var t=i(0);t(t.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,n,i){var t=i(0);t(t.S,"Math",{sign:i(86)})},function(e,n,i){var t=i(0),a=i(87),o=Math.exp;t(t.S+t.F*i(3)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(a(e)-a(-e))/2:(o(e-1)-o(-e-1))*(Math.E/2)}})},function(e,n,i){var t=i(0),a=i(87),o=Math.exp;t(t.S,"Math",{tanh:function(e){var n=a(e=+e),i=a(-e);return n==1/0?1:i==1/0?-1:(n-i)/(o(e)+o(-e))}})},function(e,n,i){var t=i(0);t(t.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,n,i){var t=i(0),a=i(38),o=String.fromCharCode,r=String.fromCodePoint;t(t.S+t.F*(!!r&&1!=r.length),"String",{fromCodePoint:function(e){for(var n,i=[],t=arguments.length,r=0;t>r;){if(n=+arguments[r++],a(n,1114111)!==n)throw RangeError(n+" is not a valid code point");i.push(n<65536?o(n):o(55296+((n-=65536)>>10),n%1024+56320))}return i.join("")}})},function(e,n,i){var t=i(0),a=i(17),o=i(6);t(t.S,"String",{raw:function(e){for(var n=a(e.raw),i=o(n.length),t=arguments.length,r=[],s=0;i>s;)r.push(String(n[s++])),s<t&&r.push(String(arguments[s]));return r.join("")}})},function(e,n,i){"use strict";i(48)("trim",(function(e){return function(){return e(this,3)}}))},function(e,n,i){"use strict";var t=i(62)(!0);i(88)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,n=this._t,i=this._i;return i>=n.length?{value:void 0,done:!0}:(e=t(n,i),this._i+=e.length,{value:e,done:!1})}))},function(e,n,i){"use strict";var t=i(0),a=i(62)(!1);t(t.P,"String",{codePointAt:function(e){return a(this,e)}})},function(e,n,i){"use strict";var t=i(0),a=i(6),o=i(90),r="".endsWith;t(t.P+t.F*i(91)("endsWith"),"String",{endsWith:function(e){var n=o(this,e,"endsWith"),i=arguments.length>1?arguments[1]:void 0,t=a(n.length),s=void 0===i?t:Math.min(a(i),t),c=String(e);return r?r.call(n,c,s):n.slice(s-c.length,s)===c}})},function(e,n,i){"use strict";var t=i(0),a=i(90);t(t.P+t.F*i(91)("includes"),"String",{includes:function(e){return!!~a(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,n,i){var t=i(0);t(t.P,"String",{repeat:i(85)})},function(e,n,i){"use strict";var t=i(0),a=i(6),o=i(90),r="".startsWith;t(t.P+t.F*i(91)("startsWith"),"String",{startsWith:function(e){var n=o(this,e,"startsWith"),i=a(Math.min(arguments.length>1?arguments[1]:void 0,n.length)),t=String(e);return r?r.call(n,t,i):n.slice(i,i+t.length)===t}})},function(e,n,i){"use strict";i(14)("anchor",(function(e){return function(n){return e(this,"a","name",n)}}))},function(e,n,i){"use strict";i(14)("big",(function(e){return function(){return e(this,"big","","")}}))},function(e,n,i){"use strict";i(14)("blink",(function(e){return function(){return e(this,"blink","","")}}))},function(e,n,i){"use strict";i(14)("bold",(function(e){return function(){return e(this,"b","","")}}))},function(e,n,i){"use strict";i(14)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},function(e,n,i){"use strict";i(14)("fontcolor",(function(e){return function(n){return e(this,"font","color",n)}}))},function(e,n,i){"use strict";i(14)("fontsize",(function(e){return function(n){return e(this,"font","size",n)}}))},function(e,n,i){"use strict";i(14)("italics",(function(e){return function(){return e(this,"i","","")}}))},function(e,n,i){"use strict";i(14)("link",(function(e){return function(n){return e(this,"a","href",n)}}))},function(e,n,i){"use strict";i(14)("small",(function(e){return function(){return e(this,"small","","")}}))},function(e,n,i){"use strict";i(14)("strike",(function(e){return function(){return e(this,"strike","","")}}))},function(e,n,i){"use strict";i(14)("sub",(function(e){return function(){return e(this,"sub","","")}}))},function(e,n,i){"use strict";i(14)("sup",(function(e){return function(){return e(this,"sup","","")}}))},function(e,n,i){var t=i(0);t(t.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,n,i){"use strict";var t=i(0),a=i(10),o=i(25);t(t.P+t.F*i(3)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var n=a(this),i=o(n);return"number"!=typeof i||isFinite(i)?n.toISOString():null}})},function(e,n,i){var t=i(0),a=i(255);t(t.P+t.F*(Date.prototype.toISOString!==a),"Date",{toISOString:a})},function(e,n,i){"use strict";var t=i(3),a=Date.prototype.getTime,o=Date.prototype.toISOString,r=function(e){return e>9?e:"0"+e};e.exports=t((function(){return"0385-07-25T07:06:39.999Z"!=o.call(new Date(-5e13-1))}))||!t((function(){o.call(new Date(NaN))}))?function(){if(!isFinite(a.call(this)))throw RangeError("Invalid time value");var e=this,n=e.getUTCFullYear(),i=e.getUTCMilliseconds(),t=n<0?"-":n>9999?"+":"";return t+("00000"+Math.abs(n)).slice(t?-6:-4)+"-"+r(e.getUTCMonth()+1)+"-"+r(e.getUTCDate())+"T"+r(e.getUTCHours())+":"+r(e.getUTCMinutes())+":"+r(e.getUTCSeconds())+"."+(i>99?i:"0"+r(i))+"Z"}:o},function(e,n,i){var t=Date.prototype,a=t.toString,o=t.getTime;new Date(NaN)+""!="Invalid Date"&&i(13)(t,"toString",(function(){var e=o.call(this);return e==e?a.call(this):"Invalid Date"}))},function(e,n,i){var t=i(5)("toPrimitive"),a=Date.prototype;t in a||i(12)(a,t,i(258))},function(e,n,i){"use strict";var t=i(1),a=i(25);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return a(t(this),"number"!=e)}},function(e,n,i){var t=i(0);t(t.S,"Array",{isArray:i(61)})},function(e,n,i){"use strict";var t=i(21),a=i(0),o=i(10),r=i(130),s=i(92),c=i(6),p=i(93),u=i(94);a(a.S+a.F*!i(64)((function(e){Array.from(e)})),"Array",{from:function(e){var n,i,a,l,f=o(e),d="function"==typeof this?this:Array,m=arguments.length,v=m>1?arguments[1]:void 0,h=void 0!==v,x=0,b=u(f);if(h&&(v=t(v,m>2?arguments[2]:void 0,2)),null==b||d==Array&&s(b))for(i=new d(n=c(f.length));n>x;x++)p(i,x,h?v(f[x],x):f[x]);else for(l=b.call(f),i=new d;!(a=l.next()).done;x++)p(i,x,h?r(l,v,[a.value,x],!0):a.value);return i.length=x,i}})},function(e,n,i){"use strict";var t=i(0),a=i(93);t(t.S+t.F*i(3)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,n=arguments.length,i=new("function"==typeof this?this:Array)(n);n>e;)a(i,e,arguments[e++]);return i.length=n,i}})},function(e,n,i){"use strict";var t=i(0),a=i(17),o=[].join;t(t.P+t.F*(i(52)!=Object||!i(24)(o)),"Array",{join:function(e){return o.call(a(this),void 0===e?",":e)}})},function(e,n,i){"use strict";var t=i(0),a=i(81),o=i(22),r=i(38),s=i(6),c=[].slice;t(t.P+t.F*i(3)((function(){a&&c.call(a)})),"Array",{slice:function(e,n){var i=s(this.length),t=o(this);if(n=void 0===n?i:n,"Array"==t)return c.call(this,e,n);for(var a=r(e,i),p=r(n,i),u=s(p-a),l=new Array(u),f=0;f<u;f++)l[f]="String"==t?this.charAt(a+f):this[a+f];return l}})},function(e,n,i){"use strict";var t=i(0),a=i(11),o=i(10),r=i(3),s=[].sort,c=[1,2,3];t(t.P+t.F*(r((function(){c.sort(void 0)}))||!r((function(){c.sort(null)}))||!i(24)(s)),"Array",{sort:function(e){return void 0===e?s.call(o(this)):s.call(o(this),a(e))}})},function(e,n,i){"use strict";var t=i(0),a=i(28)(0),o=i(24)([].forEach,!0);t(t.P+t.F*!o,"Array",{forEach:function(e){return a(this,e,arguments[1])}})},function(e,n,i){var t=i(4),a=i(61),o=i(5)("species");e.exports=function(e){var n;return a(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!a(n.prototype)||(n=void 0),t(n)&&null===(n=n[o])&&(n=void 0)),void 0===n?Array:n}},function(e,n,i){"use strict";var t=i(0),a=i(28)(1);t(t.P+t.F*!i(24)([].map,!0),"Array",{map:function(e){return a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(28)(2);t(t.P+t.F*!i(24)([].filter,!0),"Array",{filter:function(e){return a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(28)(3);t(t.P+t.F*!i(24)([].some,!0),"Array",{some:function(e){return a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(28)(4);t(t.P+t.F*!i(24)([].every,!0),"Array",{every:function(e){return a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(131);t(t.P+t.F*!i(24)([].reduce,!0),"Array",{reduce:function(e){return a(this,e,arguments.length,arguments[1],!1)}})},function(e,n,i){"use strict";var t=i(0),a=i(131);t(t.P+t.F*!i(24)([].reduceRight,!0),"Array",{reduceRight:function(e){return a(this,e,arguments.length,arguments[1],!0)}})},function(e,n,i){"use strict";var t=i(0),a=i(59)(!1),o=[].indexOf,r=!!o&&1/[1].indexOf(1,-0)<0;t(t.P+t.F*(r||!i(24)(o)),"Array",{indexOf:function(e){return r?o.apply(this,arguments)||0:a(this,e,arguments[1])}})},function(e,n,i){"use strict";var t=i(0),a=i(17),o=i(23),r=i(6),s=[].lastIndexOf,c=!!s&&1/[1].lastIndexOf(1,-0)<0;t(t.P+t.F*(c||!i(24)(s)),"Array",{lastIndexOf:function(e){if(c)return s.apply(this,arguments)||0;var n=a(this),i=r(n.length),t=i-1;for(arguments.length>1&&(t=Math.min(t,o(arguments[1]))),t<0&&(t=i+t);t>=0;t--)if(t in n&&n[t]===e)return t||0;return-1}})},function(e,n,i){var t=i(0);t(t.P,"Array",{copyWithin:i(132)}),i(34)("copyWithin")},function(e,n,i){var t=i(0);t(t.P,"Array",{fill:i(96)}),i(34)("fill")},function(e,n,i){"use strict";var t=i(0),a=i(28)(5),o=!0;"find"in[]&&Array(1).find((function(){o=!1})),t(t.P+t.F*o,"Array",{find:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i(34)("find")},function(e,n,i){"use strict";var t=i(0),a=i(28)(6),o="findIndex",r=!0;o in[]&&Array(1)[o]((function(){r=!1})),t(t.P+t.F*r,"Array",{findIndex:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i(34)(o)},function(e,n,i){i(41)("Array")},function(e,n,i){var t=i(2),a=i(84),o=i(9).f,r=i(40).f,s=i(63),c=i(54),p=t.RegExp,u=p,l=p.prototype,f=/a/g,d=/a/g,m=new p(f)!==f;if(i(7)&&(!m||i(3)((function(){return d[i(5)("match")]=!1,p(f)!=f||p(d)==d||"/a/i"!=p(f,"i")})))){p=function(e,n){var i=this instanceof p,t=s(e),o=void 0===n;return!i&&t&&e.constructor===p&&o?e:a(m?new u(t&&!o?e.source:e,n):u((t=e instanceof p)?e.source:e,t&&o?c.call(e):n),i?this:l,p)};for(var v=function(e){e in p||o(p,e,{configurable:!0,get:function(){return u[e]},set:function(n){u[e]=n}})},h=r(u),x=0;h.length>x;)v(h[x++]);l.constructor=p,p.prototype=l,i(13)(t,"RegExp",p)}i(41)("RegExp")},function(e,n,i){"use strict";i(135);var t=i(1),a=i(54),o=i(7),r=/./.toString,s=function(e){i(13)(RegExp.prototype,"toString",e,!0)};i(3)((function(){return"/a/b"!=r.call({source:"a",flags:"b"})}))?s((function(){var e=t(this);return"/".concat(e.source,"/","flags"in e?e.flags:!o&&e instanceof RegExp?a.call(e):void 0)})):"toString"!=r.name&&s((function(){return r.call(this)}))},function(e,n,i){"use strict";var t=i(1),a=i(6),o=i(99),r=i(65);i(66)("match",1,(function(e,n,i,s){return[function(i){var t=e(this),a=null==i?void 0:i[n];return void 0!==a?a.call(i,t):new RegExp(i)[n](String(t))},function(e){var n=s(i,e,this);if(n.done)return n.value;var c=t(e),p=String(this);if(!c.global)return r(c,p);var u=c.unicode;c.lastIndex=0;for(var l,f=[],d=0;null!==(l=r(c,p));){var m=String(l[0]);f[d]=m,""===m&&(c.lastIndex=o(p,a(c.lastIndex),u)),d++}return 0===d?null:f}]}))},function(e,n,i){"use strict";var t=i(1),a=i(10),o=i(6),r=i(23),s=i(99),c=i(65),p=Math.max,u=Math.min,l=Math.floor,f=/\$([$&`']|\d\d?|<[^>]*>)/g,d=/\$([$&`']|\d\d?)/g;i(66)("replace",2,(function(e,n,i,m){return[function(t,a){var o=e(this),r=null==t?void 0:t[n];return void 0!==r?r.call(t,o,a):i.call(String(o),t,a)},function(e,n){var a=m(i,e,this,n);if(a.done)return a.value;var l=t(e),f=String(this),d="function"==typeof n;d||(n=String(n));var h=l.global;if(h){var x=l.unicode;l.lastIndex=0}for(var b=[];;){var g=c(l,f);if(null===g)break;if(b.push(g),!h)break;""===String(g[0])&&(l.lastIndex=s(f,o(l.lastIndex),x))}for(var k,y="",w=0,S=0;S<b.length;S++){g=b[S];for(var _=String(g[0]),j=p(u(r(g.index),f.length),0),E=[],C=1;C<g.length;C++)E.push(void 0===(k=g[C])?k:String(k));var O=g.groups;if(d){var A=[_].concat(E,j,f);void 0!==O&&A.push(O);var P=String(n.apply(void 0,A))}else P=v(_,f,j,E,O,n);j>=w&&(y+=f.slice(w,j)+P,w=j+_.length)}return y+f.slice(w)}];function v(e,n,t,o,r,s){var c=t+e.length,p=o.length,u=d;return void 0!==r&&(r=a(r),u=f),i.call(s,u,(function(i,a){var s;switch(a.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,t);case"'":return n.slice(c);case"<":s=r[a.slice(1,-1)];break;default:var u=+a;if(0===u)return i;if(u>p){var f=l(u/10);return 0===f?i:f<=p?void 0===o[f-1]?a.charAt(1):o[f-1]+a.charAt(1):i}s=o[u-1]}return void 0===s?"":s}))}}))},function(e,n,i){"use strict";var t=i(1),a=i(121),o=i(65);i(66)("search",1,(function(e,n,i,r){return[function(i){var t=e(this),a=null==i?void 0:i[n];return void 0!==a?a.call(i,t):new RegExp(i)[n](String(t))},function(e){var n=r(i,e,this);if(n.done)return n.value;var s=t(e),c=String(this),p=s.lastIndex;a(p,0)||(s.lastIndex=0);var u=o(s,c);return a(s.lastIndex,p)||(s.lastIndex=p),null===u?-1:u.index}]}))},function(e,n,i){"use strict";var t=i(63),a=i(1),o=i(55),r=i(99),s=i(6),c=i(65),p=i(98),u=i(3),l=Math.min,f=[].push,d=!u((function(){RegExp(4294967295,"y")}));i(66)("split",2,(function(e,n,i,u){var m;return m="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var a=String(this);if(void 0===e&&0===n)return[];if(!t(e))return i.call(a,e,n);for(var o,r,s,c=[],u=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),l=0,d=void 0===n?4294967295:n>>>0,m=new RegExp(e.source,u+"g");(o=p.call(m,a))&&!((r=m.lastIndex)>l&&(c.push(a.slice(l,o.index)),o.length>1&&o.index<a.length&&f.apply(c,o.slice(1)),s=o[0].length,l=r,c.length>=d));)m.lastIndex===o.index&&m.lastIndex++;return l===a.length?!s&&m.test("")||c.push(""):c.push(a.slice(l)),c.length>d?c.slice(0,d):c}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:i.call(this,e,n)}:i,[function(i,t){var a=e(this),o=null==i?void 0:i[n];return void 0!==o?o.call(i,a,t):m.call(String(a),i,t)},function(e,n){var t=u(m,e,this,n,m!==i);if(t.done)return t.value;var p=a(e),f=String(this),v=o(p,RegExp),h=p.unicode,x=(p.ignoreCase?"i":"")+(p.multiline?"m":"")+(p.unicode?"u":"")+(d?"y":"g"),b=new v(d?p:"^(?:"+p.source+")",x),g=void 0===n?4294967295:n>>>0;if(0===g)return[];if(0===f.length)return null===c(b,f)?[f]:[];for(var k=0,y=0,w=[];y<f.length;){b.lastIndex=d?y:0;var S,_=c(b,d?f:f.slice(y));if(null===_||(S=l(s(b.lastIndex+(d?0:y)),f.length))===k)y=r(f,y,h);else{if(w.push(f.slice(k,y)),w.length===g)return w;for(var j=1;j<=_.length-1;j++)if(w.push(_[j]),w.length===g)return w;y=k=S}}return w.push(f.slice(k)),w}]}))},function(e,n,i){"use strict";var t,a,o,r,s=i(32),c=i(2),p=i(21),u=i(47),l=i(0),f=i(4),d=i(11),m=i(42),v=i(43),h=i(55),x=i(100).set,b=i(101)(),g=i(102),k=i(136),y=i(67),w=i(137),S=c.TypeError,_=c.process,j=_&&_.versions,E=j&&j.v8||"",C=c.Promise,O="process"==u(_),A=function(){},P=a=g.f,M=!!function(){try{var e=C.resolve(1),n=(e.constructor={})[i(5)("species")]=function(e){e(A,A)};return(O||"function"==typeof PromiseRejectionEvent)&&e.then(A)instanceof n&&0!==E.indexOf("6.6")&&-1===y.indexOf("Chrome/66")}catch(e){}}(),F=function(e){var n;return!(!f(e)||"function"!=typeof(n=e.then))&&n},B=function(e,n){if(!e._n){e._n=!0;var i=e._c;b((function(){for(var t=e._v,a=1==e._s,o=0,r=function(n){var i,o,r,s=a?n.ok:n.fail,c=n.resolve,p=n.reject,u=n.domain;try{s?(a||(2==e._h&&N(e),e._h=1),!0===s?i=t:(u&&u.enter(),i=s(t),u&&(u.exit(),r=!0)),i===n.promise?p(S("Promise-chain cycle")):(o=F(i))?o.call(i,c,p):c(i)):p(t)}catch(e){u&&!r&&u.exit(),p(e)}};i.length>o;)r(i[o++]);e._c=[],e._n=!1,n&&!e._h&&z(e)}))}},z=function(e){x.call(c,(function(){var n,i,t,a=e._v,o=I(e);if(o&&(n=k((function(){O?_.emit("unhandledRejection",a,e):(i=c.onunhandledrejection)?i({promise:e,reason:a}):(t=c.console)&&t.error&&t.error("Unhandled promise rejection",a)})),e._h=O||I(e)?2:1),e._a=void 0,o&&n.e)throw n.v}))},I=function(e){return 1!==e._h&&0===(e._a||e._c).length},N=function(e){x.call(c,(function(){var n;O?_.emit("rejectionHandled",e):(n=c.onrejectionhandled)&&n({promise:e,reason:e._v})}))},T=function(e){var n=this;n._d||(n._d=!0,(n=n._w||n)._v=e,n._s=2,n._a||(n._a=n._c.slice()),B(n,!0))},L=function(e){var n,i=this;if(!i._d){i._d=!0,i=i._w||i;try{if(i===e)throw S("Promise can't be resolved itself");(n=F(e))?b((function(){var t={_w:i,_d:!1};try{n.call(e,p(L,t,1),p(T,t,1))}catch(e){T.call(t,e)}})):(i._v=e,i._s=1,B(i,!1))}catch(e){T.call({_w:i,_d:!1},e)}}};M||(C=function(e){m(this,C,"Promise","_h"),d(e),t.call(this);try{e(p(L,this,1),p(T,this,1))}catch(e){T.call(this,e)}},(t=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=i(44)(C.prototype,{then:function(e,n){var i=P(h(this,C));return i.ok="function"!=typeof e||e,i.fail="function"==typeof n&&n,i.domain=O?_.domain:void 0,this._c.push(i),this._a&&this._a.push(i),this._s&&B(this,!1),i.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new t;this.promise=e,this.resolve=p(L,e,1),this.reject=p(T,e,1)},g.f=P=function(e){return e===C||e===r?new o(e):a(e)}),l(l.G+l.W+l.F*!M,{Promise:C}),i(46)(C,"Promise"),i(41)("Promise"),r=i(20).Promise,l(l.S+l.F*!M,"Promise",{reject:function(e){var n=P(this);return(0,n.reject)(e),n.promise}}),l(l.S+l.F*(s||!M),"Promise",{resolve:function(e){return w(s&&this===r?C:this,e)}}),l(l.S+l.F*!(M&&i(64)((function(e){C.all(e).catch(A)}))),"Promise",{all:function(e){var n=this,i=P(n),t=i.resolve,a=i.reject,o=k((function(){var i=[],o=0,r=1;v(e,!1,(function(e){var s=o++,c=!1;i.push(void 0),r++,n.resolve(e).then((function(e){c||(c=!0,i[s]=e,--r||t(i))}),a)})),--r||t(i)}));return o.e&&a(o.v),i.promise},race:function(e){var n=this,i=P(n),t=i.reject,a=k((function(){v(e,!1,(function(e){n.resolve(e).then(i.resolve,t)}))}));return a.e&&t(a.v),i.promise}})},function(e,n,i){"use strict";var t=i(142),a=i(45);i(68)("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return t.def(a(this,"WeakSet"),e,!0)}},t,!1,!0)},function(e,n,i){"use strict";var t=i(0),a=i(69),o=i(103),r=i(1),s=i(38),c=i(6),p=i(4),u=i(2).ArrayBuffer,l=i(55),f=o.ArrayBuffer,d=o.DataView,m=a.ABV&&u.isView,v=f.prototype.slice,h=a.VIEW;t(t.G+t.W+t.F*(u!==f),{ArrayBuffer:f}),t(t.S+t.F*!a.CONSTR,"ArrayBuffer",{isView:function(e){return m&&m(e)||p(e)&&h in e}}),t(t.P+t.U+t.F*i(3)((function(){return!new f(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,n){if(void 0!==v&&void 0===n)return v.call(r(this),e);for(var i=r(this).byteLength,t=s(e,i),a=s(void 0===n?i:n,i),o=new(l(this,f))(c(a-t)),p=new d(this),u=new d(o),m=0;t<a;)u.setUint8(m++,p.getUint8(t++));return o}}),i(41)("ArrayBuffer")},function(e,n,i){var t=i(0);t(t.G+t.W+t.F*!i(69).ABV,{DataView:i(103).DataView})},function(e,n,i){i(30)("Int8",1,(function(e){return function(n,i,t){return e(this,n,i,t)}}))},function(e,n,i){i(30)("Uint8",1,(function(e){return function(n,i,t){return e(this,n,i,t)}}))},function(e,n,i){i(30)("Uint8",1,(function(e){return function(n,i,t){return e(this,n,i,t)}}),!0)},function(e,n,i){i(30)("Int16",2,(function(e){return function(n,i,t){return e(this,n,i,t)}}))},function(e,n,i){i(30)("Uint16",2,(function(e){return function(n,i,t){return e(this,n,i,t)}}))},function(e,n,i){i(30)("Int32",4,(function(e){return function(n,i,t){return e(this,n,i,t)}}))},function(e,n,i){i(30)("Uint32",4,(function(e){return function(n,i,t){return e(this,n,i,t)}}))},function(e,n,i){i(30)("Float32",4,(function(e){return function(n,i,t){return e(this,n,i,t)}}))},function(e,n,i){i(30)("Float64",8,(function(e){return function(n,i,t){return e(this,n,i,t)}}))},function(e,n,i){var t=i(0),a=i(11),o=i(1),r=(i(2).Reflect||{}).apply,s=Function.apply;t(t.S+t.F*!i(3)((function(){r((function(){}))})),"Reflect",{apply:function(e,n,i){var t=a(e),c=o(i);return r?r(t,n,c):s.call(t,n,c)}})},function(e,n,i){var t=i(0),a=i(39),o=i(11),r=i(1),s=i(4),c=i(3),p=i(122),u=(i(2).Reflect||{}).construct,l=c((function(){function e(){}return!(u((function(){}),[],e)instanceof e)})),f=!c((function(){u((function(){}))}));t(t.S+t.F*(l||f),"Reflect",{construct:function(e,n){o(e),r(n);var i=arguments.length<3?e:o(arguments[2]);if(f&&!l)return u(e,n,i);if(e==i){switch(n.length){case 0:return new e;case 1:return new e(n[0]);case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[1],n[2]);case 4:return new e(n[0],n[1],n[2],n[3])}var t=[null];return t.push.apply(t,n),new(p.apply(e,t))}var c=i.prototype,d=a(s(c)?c:Object.prototype),m=Function.apply.call(e,d,n);return s(m)?m:d}})},function(e,n,i){var t=i(9),a=i(0),o=i(1),r=i(25);a(a.S+a.F*i(3)((function(){Reflect.defineProperty(t.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,n,i){o(e),n=r(n,!0),o(i);try{return t.f(e,n,i),!0}catch(e){return!1}}})},function(e,n,i){var t=i(0),a=i(18).f,o=i(1);t(t.S,"Reflect",{deleteProperty:function(e,n){var i=a(o(e),n);return!(i&&!i.configurable)&&delete e[n]}})},function(e,n,i){"use strict";var t=i(0),a=i(1),o=function(e){this._t=a(e),this._i=0;var n,i=this._k=[];for(n in e)i.push(n)};i(89)(o,"Object",(function(){var e,n=this._k;do{if(this._i>=n.length)return{value:void 0,done:!0}}while(!((e=n[this._i++])in this._t));return{value:e,done:!1}})),t(t.S,"Reflect",{enumerate:function(e){return new o(e)}})},function(e,n,i){var t=i(18),a=i(19),o=i(16),r=i(0),s=i(4),c=i(1);r(r.S,"Reflect",{get:function e(n,i){var r,p,u=arguments.length<3?n:arguments[2];return c(n)===u?n[i]:(r=t.f(n,i))?o(r,"value")?r.value:void 0!==r.get?r.get.call(u):void 0:s(p=a(n))?e(p,i,u):void 0}})},function(e,n,i){var t=i(18),a=i(0),o=i(1);a(a.S,"Reflect",{getOwnPropertyDescriptor:function(e,n){return t.f(o(e),n)}})},function(e,n,i){var t=i(0),a=i(19),o=i(1);t(t.S,"Reflect",{getPrototypeOf:function(e){return a(o(e))}})},function(e,n,i){var t=i(0);t(t.S,"Reflect",{has:function(e,n){return n in e}})},function(e,n,i){var t=i(0),a=i(1),o=Object.isExtensible;t(t.S,"Reflect",{isExtensible:function(e){return a(e),!o||o(e)}})},function(e,n,i){var t=i(0);t(t.S,"Reflect",{ownKeys:i(144)})},function(e,n,i){var t=i(0),a=i(1),o=Object.preventExtensions;t(t.S,"Reflect",{preventExtensions:function(e){a(e);try{return o&&o(e),!0}catch(e){return!1}}})},function(e,n,i){var t=i(9),a=i(18),o=i(19),r=i(16),s=i(0),c=i(35),p=i(1),u=i(4);s(s.S,"Reflect",{set:function e(n,i,s){var l,f,d=arguments.length<4?n:arguments[3],m=a.f(p(n),i);if(!m){if(u(f=o(n)))return e(f,i,s,d);m=c(0)}if(r(m,"value")){if(!1===m.writable||!u(d))return!1;if(l=a.f(d,i)){if(l.get||l.set||!1===l.writable)return!1;l.value=s,t.f(d,i,l)}else t.f(d,i,c(0,s));return!0}return void 0!==m.set&&(m.set.call(d,s),!0)}})},function(e,n,i){var t=i(0),a=i(82);a&&t(t.S,"Reflect",{setPrototypeOf:function(e,n){a.check(e,n);try{return a.set(e,n),!0}catch(e){return!1}}})},function(e,n,i){"use strict";var t=i(0),a=i(59)(!0);t(t.P,"Array",{includes:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i(34)("includes")},function(e,n,i){"use strict";var t=i(0),a=i(145),o=i(10),r=i(6),s=i(11),c=i(95);t(t.P,"Array",{flatMap:function(e){var n,i,t=o(this);return s(e),n=r(t.length),i=c(t,0),a(i,t,t,n,0,1,e,arguments[1]),i}}),i(34)("flatMap")},function(e,n,i){"use strict";var t=i(0),a=i(145),o=i(10),r=i(6),s=i(23),c=i(95);t(t.P,"Array",{flatten:function(){var e=arguments[0],n=o(this),i=r(n.length),t=c(n,0);return a(t,n,n,i,0,void 0===e?1:s(e)),t}}),i(34)("flatten")},function(e,n,i){"use strict";var t=i(0),a=i(62)(!0);t(t.P,"String",{at:function(e){return a(this,e)}})},function(e,n,i){"use strict";var t=i(0),a=i(146),o=i(67),r=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);t(t.P+t.F*r,"String",{padStart:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,n,i){"use strict";var t=i(0),a=i(146),o=i(67),r=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);t(t.P+t.F*r,"String",{padEnd:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,n,i){"use strict";i(48)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},function(e,n,i){"use strict";i(48)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},function(e,n,i){"use strict";var t=i(0),a=i(26),o=i(6),r=i(63),s=i(54),c=RegExp.prototype,p=function(e,n){this._r=e,this._s=n};i(89)(p,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),t(t.P,"String",{matchAll:function(e){if(a(this),!r(e))throw TypeError(e+" is not a regexp!");var n=String(this),i="flags"in c?String(e.flags):s.call(e),t=new RegExp(e.source,~i.indexOf("g")?i:"g"+i);return t.lastIndex=o(e.lastIndex),new p(t,n)}})},function(e,n,i){i(78)("asyncIterator")},function(e,n,i){i(78)("observable")},function(e,n,i){var t=i(0),a=i(144),o=i(17),r=i(18),s=i(93);t(t.S,"Object",{getOwnPropertyDescriptors:function(e){for(var n,i,t=o(e),c=r.f,p=a(t),u={},l=0;p.length>l;)void 0!==(i=c(t,n=p[l++]))&&s(u,n,i);return u}})},function(e,n,i){var t=i(0),a=i(147)(!1);t(t.S,"Object",{values:function(e){return a(e)}})},function(e,n,i){var t=i(0),a=i(147)(!0);t(t.S,"Object",{entries:function(e){return a(e)}})},function(e,n,i){"use strict";var t=i(0),a=i(10),o=i(11),r=i(9);i(7)&&t(t.P+i(70),"Object",{__defineGetter__:function(e,n){r.f(a(this),e,{get:o(n),enumerable:!0,configurable:!0})}})},function(e,n,i){"use strict";var t=i(0),a=i(10),o=i(11),r=i(9);i(7)&&t(t.P+i(70),"Object",{__defineSetter__:function(e,n){r.f(a(this),e,{set:o(n),enumerable:!0,configurable:!0})}})},function(e,n,i){"use strict";var t=i(0),a=i(10),o=i(25),r=i(19),s=i(18).f;i(7)&&t(t.P+i(70),"Object",{__lookupGetter__:function(e){var n,i=a(this),t=o(e,!0);do{if(n=s(i,t))return n.get}while(i=r(i))}})},function(e,n,i){"use strict";var t=i(0),a=i(10),o=i(25),r=i(19),s=i(18).f;i(7)&&t(t.P+i(70),"Object",{__lookupSetter__:function(e){var n,i=a(this),t=o(e,!0);do{if(n=s(i,t))return n.set}while(i=r(i))}})},function(e,n,i){var t=i(0);t(t.P+t.R,"Map",{toJSON:i(148)("Map")})},function(e,n,i){var t=i(0);t(t.P+t.R,"Set",{toJSON:i(148)("Set")})},function(e,n,i){i(71)("Map")},function(e,n,i){i(71)("Set")},function(e,n,i){i(71)("WeakMap")},function(e,n,i){i(71)("WeakSet")},function(e,n,i){i(72)("Map")},function(e,n,i){i(72)("Set")},function(e,n,i){i(72)("WeakMap")},function(e,n,i){i(72)("WeakSet")},function(e,n,i){var t=i(0);t(t.G,{global:i(2)})},function(e,n,i){var t=i(0);t(t.S,"System",{global:i(2)})},function(e,n,i){var t=i(0),a=i(22);t(t.S,"Error",{isError:function(e){return"Error"===a(e)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{clamp:function(e,n,i){return Math.min(i,Math.max(n,e))}})},function(e,n,i){var t=i(0);t(t.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,n,i){var t=i(0),a=180/Math.PI;t(t.S,"Math",{degrees:function(e){return e*a}})},function(e,n,i){var t=i(0),a=i(150),o=i(129);t(t.S,"Math",{fscale:function(e,n,i,t,r){return o(a(e,n,i,t,r))}})},function(e,n,i){var t=i(0);t(t.S,"Math",{iaddh:function(e,n,i,t){var a=e>>>0,o=i>>>0;return(n>>>0)+(t>>>0)+((a&o|(a|o)&~(a+o>>>0))>>>31)|0}})},function(e,n,i){var t=i(0);t(t.S,"Math",{isubh:function(e,n,i,t){var a=e>>>0,o=i>>>0;return(n>>>0)-(t>>>0)-((~a&o|~(a^o)&a-o>>>0)>>>31)|0}})},function(e,n,i){var t=i(0);t(t.S,"Math",{imulh:function(e,n){var i=+e,t=+n,a=65535&i,o=65535&t,r=i>>16,s=t>>16,c=(r*o>>>0)+(a*o>>>16);return r*s+(c>>16)+((a*s>>>0)+(65535&c)>>16)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,n,i){var t=i(0),a=Math.PI/180;t(t.S,"Math",{radians:function(e){return e*a}})},function(e,n,i){var t=i(0);t(t.S,"Math",{scale:i(150)})},function(e,n,i){var t=i(0);t(t.S,"Math",{umulh:function(e,n){var i=+e,t=+n,a=65535&i,o=65535&t,r=i>>>16,s=t>>>16,c=(r*o>>>0)+(a*o>>>16);return r*s+(c>>>16)+((a*s>>>0)+(65535&c)>>>16)}})},function(e,n,i){var t=i(0);t(t.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,n,i){"use strict";var t=i(0),a=i(20),o=i(2),r=i(55),s=i(137);t(t.P+t.R,"Promise",{finally:function(e){var n=r(this,a.Promise||o.Promise),i="function"==typeof e;return this.then(i?function(i){return s(n,e()).then((function(){return i}))}:e,i?function(i){return s(n,e()).then((function(){throw i}))}:e)}})},function(e,n,i){"use strict";var t=i(0),a=i(102),o=i(136);t(t.S,"Promise",{try:function(e){var n=a.f(this),i=o(e);return(i.e?n.reject:n.resolve)(i.v),n.promise}})},function(e,n,i){var t=i(31),a=i(1),o=t.key,r=t.set;t.exp({defineMetadata:function(e,n,i,t){r(e,n,a(i),o(t))}})},function(e,n,i){var t=i(31),a=i(1),o=t.key,r=t.map,s=t.store;t.exp({deleteMetadata:function(e,n){var i=arguments.length<3?void 0:o(arguments[2]),t=r(a(n),i,!1);if(void 0===t||!t.delete(e))return!1;if(t.size)return!0;var c=s.get(n);return c.delete(i),!!c.size||s.delete(n)}})},function(e,n,i){var t=i(31),a=i(1),o=i(19),r=t.has,s=t.get,c=t.key,p=function(e,n,i){if(r(e,n,i))return s(e,n,i);var t=o(n);return null!==t?p(e,t,i):void 0};t.exp({getMetadata:function(e,n){return p(e,a(n),arguments.length<3?void 0:c(arguments[2]))}})},function(e,n,i){var t=i(140),a=i(149),o=i(31),r=i(1),s=i(19),c=o.keys,p=o.key,u=function(e,n){var i=c(e,n),o=s(e);if(null===o)return i;var r=u(o,n);return r.length?i.length?a(new t(i.concat(r))):r:i};o.exp({getMetadataKeys:function(e){return u(r(e),arguments.length<2?void 0:p(arguments[1]))}})},function(e,n,i){var t=i(31),a=i(1),o=t.get,r=t.key;t.exp({getOwnMetadata:function(e,n){return o(e,a(n),arguments.length<3?void 0:r(arguments[2]))}})},function(e,n,i){var t=i(31),a=i(1),o=t.keys,r=t.key;t.exp({getOwnMetadataKeys:function(e){return o(a(e),arguments.length<2?void 0:r(arguments[1]))}})},function(e,n,i){var t=i(31),a=i(1),o=i(19),r=t.has,s=t.key,c=function(e,n,i){if(r(e,n,i))return!0;var t=o(n);return null!==t&&c(e,t,i)};t.exp({hasMetadata:function(e,n){return c(e,a(n),arguments.length<3?void 0:s(arguments[2]))}})},function(e,n,i){var t=i(31),a=i(1),o=t.has,r=t.key;t.exp({hasOwnMetadata:function(e,n){return o(e,a(n),arguments.length<3?void 0:r(arguments[2]))}})},function(e,n,i){var t=i(31),a=i(1),o=i(11),r=t.key,s=t.set;t.exp({metadata:function(e,n){return function(i,t){s(e,n,(void 0!==t?a:o)(i),r(t))}}})},function(e,n,i){var t=i(0),a=i(101)(),o=i(2).process,r="process"==i(22)(o);t(t.G,{asap:function(e){var n=r&&o.domain;a(n?n.bind(e):e)}})},function(e,n,i){"use strict";var t=i(0),a=i(2),o=i(20),r=i(101)(),s=i(5)("observable"),c=i(11),p=i(1),u=i(42),l=i(44),f=i(12),d=i(43),m=d.RETURN,v=function(e){return null==e?void 0:c(e)},h=function(e){var n=e._c;n&&(e._c=void 0,n())},x=function(e){return void 0===e._o},b=function(e){x(e)||(e._o=void 0,h(e))},g=function(e,n){p(e),this._c=void 0,this._o=e,e=new k(this);try{var i=n(e),t=i;null!=i&&("function"==typeof i.unsubscribe?i=function(){t.unsubscribe()}:c(i),this._c=i)}catch(n){return void e.error(n)}x(this)&&h(this)};g.prototype=l({},{unsubscribe:function(){b(this)}});var k=function(e){this._s=e};k.prototype=l({},{next:function(e){var n=this._s;if(!x(n)){var i=n._o;try{var t=v(i.next);if(t)return t.call(i,e)}catch(e){try{b(n)}finally{throw e}}}},error:function(e){var n=this._s;if(x(n))throw e;var i=n._o;n._o=void 0;try{var t=v(i.error);if(!t)throw e;e=t.call(i,e)}catch(e){try{h(n)}finally{throw e}}return h(n),e},complete:function(e){var n=this._s;if(!x(n)){var i=n._o;n._o=void 0;try{var t=v(i.complete);e=t?t.call(i,e):void 0}catch(e){try{h(n)}finally{throw e}}return h(n),e}}});var y=function(e){u(this,y,"Observable","_f")._f=c(e)};l(y.prototype,{subscribe:function(e){return new g(e,this._f)},forEach:function(e){var n=this;return new(o.Promise||a.Promise)((function(i,t){c(e);var a=n.subscribe({next:function(n){try{return e(n)}catch(e){t(e),a.unsubscribe()}},error:t,complete:i})}))}}),l(y,{from:function(e){var n="function"==typeof this?this:y,i=v(p(e)[s]);if(i){var t=p(i.call(e));return t.constructor===n?t:new n((function(e){return t.subscribe(e)}))}return new n((function(n){var i=!1;return r((function(){if(!i){try{if(d(e,!1,(function(e){if(n.next(e),i)return m}))===m)return}catch(e){if(i)throw e;return void n.error(e)}n.complete()}})),function(){i=!0}}))},of:function(){for(var e=0,n=arguments.length,i=new Array(n);e<n;)i[e]=arguments[e++];return new("function"==typeof this?this:y)((function(e){var n=!1;return r((function(){if(!n){for(var t=0;t<i.length;++t)if(e.next(i[t]),n)return;e.complete()}})),function(){n=!0}}))}}),f(y.prototype,s,(function(){return this})),t(t.G,{Observable:y}),i(41)("Observable")},function(e,n,i){var t=i(2),a=i(0),o=i(67),r=[].slice,s=/MSIE .\./.test(o),c=function(e){return function(n,i){var t=arguments.length>2,a=!!t&&r.call(arguments,2);return e(t?function(){("function"==typeof n?n:Function(n)).apply(this,a)}:n,i)}};a(a.G+a.B+a.F*s,{setTimeout:c(t.setTimeout),setInterval:c(t.setInterval)})},function(e,n,i){var t=i(0),a=i(100);t(t.G+t.B,{setImmediate:a.set,clearImmediate:a.clear})},function(e,n,i){for(var t=i(97),a=i(37),o=i(13),r=i(2),s=i(12),c=i(49),p=i(5),u=p("iterator"),l=p("toStringTag"),f=c.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},m=a(d),v=0;v<m.length;v++){var h,x=m[v],b=d[x],g=r[x],k=g&&g.prototype;if(k&&(k[u]||s(k,u,f),k[l]||s(k,l,x),c[x]=f,b))for(h in t)k[h]||o(k,h,t[h],!0)}},function(e,n){!function(n){"use strict";var i=Object.prototype,t=i.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",r=a.asyncIterator||"@@asyncIterator",s=a.toStringTag||"@@toStringTag",c="object"==typeof e,p=n.regeneratorRuntime;if(p)c&&(e.exports=p);else{(p=n.regeneratorRuntime=c?e.exports:{}).wrap=v;var u={},l={};l[o]=function(){return this};var f=Object.getPrototypeOf,d=f&&f(f(E([])));d&&d!==i&&t.call(d,o)&&(l=d);var m=g.prototype=x.prototype=Object.create(l);b.prototype=m.constructor=g,g.constructor=b,g[s]=b.displayName="GeneratorFunction",p.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===b||"GeneratorFunction"===(n.displayName||n.name))},p.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,s in e||(e[s]="GeneratorFunction")),e.prototype=Object.create(m),e},p.awrap=function(e){return{__await:e}},k(y.prototype),y.prototype[r]=function(){return this},p.AsyncIterator=y,p.async=function(e,n,i,t){var a=new y(v(e,n,i,t));return p.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},k(m),m[s]="Generator",m[o]=function(){return this},m.toString=function(){return"[object Generator]"},p.keys=function(e){var n=[];for(var i in e)n.push(i);return n.reverse(),function i(){for(;n.length;){var t=n.pop();if(t in e)return i.value=t,i.done=!1,i}return i.done=!0,i}},p.values=E,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function i(i,t){return r.type="throw",r.arg=e,n.next=i,t&&(n.method="next",n.arg=void 0),!!t}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],r=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var s=t.call(o,"catchLoc"),c=t.call(o,"finallyLoc");if(s&&c){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(e,n){for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i];if(a.tryLoc<=this.prev&&t.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var r=o?o.completion:{};return r.type=e,r.arg=n,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(r)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),u},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.finallyLoc===e)return this.complete(i.completion,i.afterLoc),_(i),u}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc===e){var t=i.completion;if("throw"===t.type){var a=t.arg;_(i)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,i){return this.delegate={iterator:E(e),resultName:n,nextLoc:i},"next"===this.method&&(this.arg=void 0),u}}}function v(e,n,i,t){var a=n&&n.prototype instanceof x?n:x,o=Object.create(a.prototype),r=new j(t||[]);return o._invoke=function(e,n,i){var t="suspendedStart";return function(a,o){if("executing"===t)throw new Error("Generator is already running");if("completed"===t){if("throw"===a)throw o;return C()}for(i.method=a,i.arg=o;;){var r=i.delegate;if(r){var s=w(r,i);if(s){if(s===u)continue;return s}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if("suspendedStart"===t)throw t="completed",i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);t="executing";var c=h(e,n,i);if("normal"===c.type){if(t=i.done?"completed":"suspendedYield",c.arg===u)continue;return{value:c.arg,done:i.done}}"throw"===c.type&&(t="completed",i.method="throw",i.arg=c.arg)}}}(e,i,r),o}function h(e,n,i){try{return{type:"normal",arg:e.call(n,i)}}catch(e){return{type:"throw",arg:e}}}function x(){}function b(){}function g(){}function k(e){["next","throw","return"].forEach((function(n){e[n]=function(e){return this._invoke(n,e)}}))}function y(e){function i(n,a,o,r){var s=h(e[n],e,a);if("throw"!==s.type){var c=s.arg,p=c.value;return p&&"object"==typeof p&&t.call(p,"__await")?Promise.resolve(p.__await).then((function(e){i("next",e,o,r)}),(function(e){i("throw",e,o,r)})):Promise.resolve(p).then((function(e){c.value=e,o(c)}),r)}r(s.arg)}var a;"object"==typeof n.process&&n.process.domain&&(i=n.process.domain.bind(i)),this._invoke=function(e,n){function t(){return new Promise((function(t,a){i(e,n,t,a)}))}return a=a?a.then(t,t):t()}}function w(e,n){var i=e.iterator[n.method];if(void 0===i){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,w(e,n),"throw"===n.method))return u;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var t=h(i,e.iterator,n.arg);if("throw"===t.type)return n.method="throw",n.arg=t.arg,n.delegate=null,u;var a=t.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,u):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,u)}function S(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function _(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(S,this),this.reset(!0)}function E(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function n(){for(;++i<e.length;)if(t.call(e,i))return n.value=e[i],n.done=!1,n;return n.value=void 0,n.done=!0,n};return a.next=a}}return{next:C}}function C(){return{value:void 0,done:!0}}}("object"==typeof global?global:"object"==typeof window?window:"object"==typeof self?self:this)},function(e,n,i){i(374),e.exports=i(20).RegExp.escape},function(e,n,i){var t=i(0),a=i(375)(/[\\^$*+?.()|[\]{}]/g,"\\$&");t(t.S,"RegExp",{escape:function(e){return a(e)}})},function(e,n){e.exports=function(e,n){var i=n===Object(n)?function(e){return n[e]}:n;return function(n){return String(n).replace(e,i)}}},function(e,n,i){"use strict";var t=i(15),a=i(151),o=i(378),r=i(104);function s(e){var n=new o(e),i=a(o.prototype.request,n);return t.extend(i,o.prototype,n),t.extend(i,n),i}var c=s(r);c.Axios=o,c.create=function(e){return s(t.merge(r,e))},c.Cancel=i(159),c.CancelToken=i(400),c.isCancel=i(158),c.all=function(e){return Promise.all(e)},c.spread=i(401),e.exports=c,e.exports.default=c},function(e,n){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&null!=e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}},function(e,n,i){"use strict";var t=i(104),a=i(15),o=i(395),r=i(396);function s(e){this.defaults=e,this.interceptors={request:new o,response:new o}}s.prototype.request=function(e){"string"==typeof e&&(e=a.merge({url:arguments[0]},arguments[1])),(e=a.merge(t,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var n=[r,void 0],i=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){n.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){n.push(e.fulfilled,e.rejected)}));n.length;)i=i.then(n.shift(),n.shift());return i},a.forEach(["delete","get","head","options"],(function(e){s.prototype[e]=function(n,i){return this.request(a.merge(i||{},{method:e,url:n}))}})),a.forEach(["post","put","patch"],(function(e){s.prototype[e]=function(n,i,t){return this.request(a.merge(t||{},{method:e,url:n,data:i}))}})),e.exports=s},function(e,n,i){"use strict";var t=i(15);e.exports=function(e,n){t.forEach(e,(function(i,t){t!==n&&t.toUpperCase()===n.toUpperCase()&&(e[n]=i,delete e[t])}))}},function(e,n,i){"use strict";var t=i(15),a=i(152),o=i(154),r=i(381),s=i(382),c=i(105);e.exports=function(e){return new Promise((function(n,p){var u=e.data,l=e.headers;t.isFormData(u)&&delete l["Content-Type"];var f=new XMLHttpRequest;if(e.auth){var d=e.auth.username||"",m=e.auth.password||"";l.Authorization="Basic "+btoa(d+":"+m)}if(f.open(e.method.toUpperCase(),o(e.url,e.params,e.paramsSerializer),!0),f.timeout=e.timeout,f.onreadystatechange=function(){if(f&&4===f.readyState&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))){var i="getAllResponseHeaders"in f?r(f.getAllResponseHeaders()):null,t={data:e.responseType&&"text"!==e.responseType?f.response:f.responseText,status:f.status,statusText:f.statusText,headers:i,config:e,request:f};a(n,p,t),f=null}},f.onerror=function(){p(c("Network Error",e,null,f)),f=null},f.ontimeout=function(){p(c("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",f)),f=null},t.isStandardBrowserEnv()){var v=i(383),h=(e.withCredentials||s(e.url))&&e.xsrfCookieName?v.read(e.xsrfCookieName):void 0;h&&(l[e.xsrfHeaderName]=h)}if("setRequestHeader"in f&&t.forEach(l,(function(e,n){void 0===u&&"content-type"===n.toLowerCase()?delete l[n]:f.setRequestHeader(n,e)})),e.withCredentials&&(f.withCredentials=!0),e.responseType)try{f.responseType=e.responseType}catch(n){if("json"!==e.responseType)throw n}"function"==typeof e.onDownloadProgress&&f.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&f.upload&&f.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){f&&(f.abort(),p(e),f=null)})),void 0===u&&(u=null),f.send(u)}))}},function(e,n,i){"use strict";var t=i(15),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,i,o,r={};return e?(t.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),n=t.trim(e.substr(0,o)).toLowerCase(),i=t.trim(e.substr(o+1)),n){if(r[n]&&a.indexOf(n)>=0)return;r[n]="set-cookie"===n?(r[n]?r[n]:[]).concat([i]):r[n]?r[n]+", "+i:i}})),r):r}},function(e,n,i){"use strict";var t=i(15);e.exports=t.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement("a");function a(e){var t=e;return n&&(i.setAttribute("href",t),t=i.href),i.setAttribute("href",t),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,""):"",host:i.host,search:i.search?i.search.replace(/^\?/,""):"",hash:i.hash?i.hash.replace(/^#/,""):"",hostname:i.hostname,port:i.port,pathname:"/"===i.pathname.charAt(0)?i.pathname:"/"+i.pathname}}return e=a(window.location.href),function(n){var i=t.isString(n)?a(n):n;return i.protocol===e.protocol&&i.host===e.host}}():function(){return!0}},function(e,n,i){"use strict";var t=i(15);e.exports=t.isStandardBrowserEnv()?{write:function(e,n,i,a,o,r){var s=[];s.push(e+"="+encodeURIComponent(n)),t.isNumber(i)&&s.push("expires="+new Date(i).toGMTString()),t.isString(a)&&s.push("path="+a),t.isString(o)&&s.push("domain="+o),!0===r&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,n,i){"use strict";var t=i(15),a=i(152),o=i(154),r=i(106),s=i(107),c=i(155).http,p=i(155).https,u=i(108),l=i(393),f=i(394),d=i(105),m=i(153);e.exports=function(e){return new Promise((function(n,i){var v,h=e.data,x=e.headers;if(x["User-Agent"]||x["user-agent"]||(x["User-Agent"]="axios/"+f.version),h&&!t.isStream(h)){if(Buffer.isBuffer(h));else if(t.isArrayBuffer(h))h=new Buffer(new Uint8Array(h));else{if(!t.isString(h))return i(d("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",e));h=new Buffer(h,"utf-8")}x["Content-Length"]=h.length}var b=void 0;e.auth&&(b=(e.auth.username||"")+":"+(e.auth.password||""));var g=u.parse(e.url),k=g.protocol||"http:";if(!b&&g.auth){var y=g.auth.split(":");b=(y[0]||"")+":"+(y[1]||"")}b&&delete x.Authorization;var w="https:"===k,S=w?e.httpsAgent:e.httpAgent,_={path:o(g.path,e.params,e.paramsSerializer).replace(/^\?/,""),method:e.method,headers:x,agent:S,auth:b};e.socketPath?_.socketPath=e.socketPath:(_.hostname=g.hostname,_.port=g.port);var j,E=e.proxy;if(!E&&!1!==E){var C=k.slice(0,-1)+"_proxy",O=process.env[C]||process.env[C.toUpperCase()];if(O){var A=u.parse(O);if(E={host:A.hostname,port:A.port},A.auth){var P=A.auth.split(":");E.auth={username:P[0],password:P[1]}}}}if(E&&(_.hostname=E.host,_.host=E.host,_.headers.host=g.hostname+(g.port?":"+g.port:""),_.port=E.port,_.path=k+"//"+g.hostname+(g.port?":"+g.port:"")+_.path,E.auth)){var M=new Buffer(E.auth.username+":"+E.auth.password,"utf8").toString("base64");_.headers["Proxy-Authorization"]="Basic "+M}e.transport?j=e.transport:0===e.maxRedirects?j=w?s:r:(e.maxRedirects&&(_.maxRedirects=e.maxRedirects),j=w?p:c),e.maxContentLength&&e.maxContentLength>-1&&(_.maxBodyLength=e.maxContentLength);var F=j.request(_,(function(t){if(!F.aborted){clearTimeout(v),v=null;var o=t;switch(t.headers["content-encoding"]){case"gzip":case"compress":case"deflate":o=o.pipe(l.createUnzip()),delete t.headers["content-encoding"]}var r=t.req||F,s={status:t.statusCode,statusText:t.statusMessage,headers:t.headers,config:e,request:r};if("stream"===e.responseType)s.data=o,a(n,i,s);else{var c=[];o.on("data",(function(n){c.push(n),e.maxContentLength>-1&&Buffer.concat(c).length>e.maxContentLength&&(o.destroy(),i(d("maxContentLength size of "+e.maxContentLength+" exceeded",e,null,r)))})),o.on("error",(function(n){F.aborted||i(m(n,e,null,r))})),o.on("end",(function(){var t=Buffer.concat(c);"arraybuffer"!==e.responseType&&(t=t.toString("utf8")),s.data=t,a(n,i,s)}))}}}));F.on("error",(function(n){F.aborted||i(m(n,e,null,F))})),e.timeout&&!v&&(v=setTimeout((function(){F.abort(),i(d("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",F))}),e.timeout)),e.cancelToken&&e.cancelToken.promise.then((function(e){F.aborted||(F.abort(),i(e))})),t.isStream(h)?h.pipe(F):F.end(h)}))}},function(e,n){e.exports=require("assert")},function(e,n,i){"undefined"==typeof process||"renderer"===process.type?e.exports=i(387):e.exports=i(389)},function(e,n,i){function t(){var e;try{e=n.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(n=e.exports=i(156)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},n.formatArgs=function(e){var i=this.useColors;if(e[0]=(i?"%c":"")+this.namespace+(i?" %c":" ")+e[0]+(i?"%c ":" ")+"+"+n.humanize(this.diff),!i)return;var t="color: "+this.color;e.splice(1,0,t,"color: inherit");var a=0,o=0;e[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(a++,"%c"===e&&(o=a))})),e.splice(o,0,t)},n.save=function(e){try{null==e?n.storage.removeItem("debug"):n.storage.debug=e}catch(e){}},n.load=t,n.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},n.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),n.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],n.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},n.enable(t())},function(e,n){var i=1e3,t=6e4,a=36e5,o=24*a;function r(e,n,i){if(!(e<n))return e<1.5*n?Math.floor(e/n)+" "+i:Math.ceil(e/n)+" "+i+"s"}e.exports=function(e,n){n=n||{};var s,c=typeof e;if("string"===c&&e.length>0)return function(e){if((e=String(e)).length>100)return;var n=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!n)return;var r=parseFloat(n[1]);switch((n[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*r;case"days":case"day":case"d":return r*o;case"hours":case"hour":case"hrs":case"hr":case"h":return r*a;case"minutes":case"minute":case"mins":case"min":case"m":return r*t;case"seconds":case"second":case"secs":case"sec":case"s":return r*i;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}(e);if("number"===c&&!1===isNaN(e))return n.long?r(s=e,o,"day")||r(s,a,"hour")||r(s,t,"minute")||r(s,i,"second")||s+" ms":function(e){if(e>=o)return Math.round(e/o)+"d";if(e>=a)return Math.round(e/a)+"h";if(e>=t)return Math.round(e/t)+"m";if(e>=i)return Math.round(e/i)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,n,i){var t=i(390),a=i(73);(n=e.exports=i(156)).init=function(e){e.inspectOpts={};for(var i=Object.keys(n.inspectOpts),t=0;t<i.length;t++)e.inspectOpts[i[t]]=n.inspectOpts[i[t]]},n.log=function(){return process.stderr.write(a.format.apply(a,arguments)+"\n")},n.formatArgs=function(e){var i=this.namespace;if(this.useColors){var t=this.color,a="[3"+(t<8?t:"8;5;"+t),o="  "+a+";1m"+i+" [0m";e[0]=o+e[0].split("\n").join("\n"+o),e.push(a+"m+"+n.humanize(this.diff)+"[0m")}else e[0]=(n.inspectOpts.hideDate?"":(new Date).toISOString()+" ")+i+" "+e[0]},n.save=function(e){null==e?delete process.env.DEBUG:process.env.DEBUG=e},n.load=r,n.useColors=function(){return"colors"in n.inspectOpts?Boolean(n.inspectOpts.colors):t.isatty(process.stderr.fd)},n.colors=[6,2,3,4,5,1];try{var o=i(391);o&&o.level>=2&&(n.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}function r(){return process.env.DEBUG}n.inspectOpts=Object.keys(process.env).filter((function(e){return/^debug_/i.test(e)})).reduce((function(e,n){var i=n.substring(6).toLowerCase().replace(/_([a-z])/g,(function(e,n){return n.toUpperCase()})),t=process.env[n];return t=!!/^(yes|on|true|enabled)$/i.test(t)||!/^(no|off|false|disabled)$/i.test(t)&&("null"===t?null:Number(t)),e[i]=t,e}),{}),n.formatters.o=function(e){return this.inspectOpts.colors=this.useColors,a.inspect(e,this.inspectOpts).split("\n").map((function(e){return e.trim()})).join(" ")},n.formatters.O=function(e){return this.inspectOpts.colors=this.useColors,a.inspect(e,this.inspectOpts)},n.enable(r())},function(e,n){e.exports=require("tty")},function(e,n,i){"use strict";const t=i(157),a=i(392),o=process.env;let r;function s(e){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(function(e){if(!1===r)return 0;if(a("color=16m")||a("color=full")||a("color=truecolor"))return 3;if(a("color=256"))return 2;if(e&&!e.isTTY&&!0!==r)return 0;const n=r?1:0;if("win32"===process.platform){const e=t.release().split(".");return Number(process.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in o)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(e=>e in o)||"codeship"===o.CI_NAME?1:n;if("TEAMCITY_VERSION"in o)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(o.TEAMCITY_VERSION)?1:0;if("truecolor"===o.COLORTERM)return 3;if("TERM_PROGRAM"in o){const e=parseInt((o.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(o.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(o.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(o.TERM)||"COLORTERM"in o?1:(o.TERM,n)}(e))}a("no-color")||a("no-colors")||a("color=false")?r=!1:(a("color")||a("colors")||a("color=true")||a("color=always"))&&(r=!0),"FORCE_COLOR"in o&&(r=0===o.FORCE_COLOR.length||0!==parseInt(o.FORCE_COLOR,10)),e.exports={supportsColor:s,stdout:s(process.stdout),stderr:s(process.stderr)}},function(e,n,i){"use strict";e.exports=(e,n)=>{n=n||process.argv;const i=e.startsWith("-")?"":1===e.length?"-":"--",t=n.indexOf(i+e),a=n.indexOf("--");return-1!==t&&(-1===a||t<a)}},function(e,n){e.exports=require("zlib")},function(e){e.exports=JSON.parse('{"_from":"axios@^0.18.1","_id":"axios@0.18.1","_inBundle":false,"_integrity":"sha512-0BfJq4NSfQXd+SkFdrvFbG7addhYSBA2mQwISr46pD6E5iqkWg02RAs8vyTT/j0RTnoYmeXauBuSv1qKwR179g==","_location":"/axios","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"axios@^0.18.1","name":"axios","escapedName":"axios","rawSpec":"^0.18.1","saveSpec":null,"fetchSpec":"^0.18.1"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/axios/-/axios-0.18.1.tgz","_shasum":"ff3f0de2e7b5d180e757ad98000f1081b87bcea3","_spec":"axios@^0.18.1","_where":"/Users/coreyshirk/Coding/github/Pinata-SDK","author":{"name":"Matt Zabriskie"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"bugs":{"url":"https://github.com/axios/axios/issues"},"bundleDependencies":false,"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}],"dependencies":{"follow-redirects":"1.5.10","is-buffer":"^2.0.2"},"deprecated":false,"description":"Promise based HTTP client for the browser and node.js","devDependencies":{"bundlesize":"^0.5.7","coveralls":"^2.11.9","es6-promise":"^4.0.5","grunt":"^1.0.1","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.0.0","grunt-contrib-nodeunit":"^1.0.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^19.0.0","grunt-karma":"^2.0.0","grunt-ts":"^6.0.0-beta.3","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^1.3.0","karma-chrome-launcher":"^2.0.0","karma-coverage":"^1.0.0","karma-firefox-launcher":"^1.0.0","karma-jasmine":"^1.0.2","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.1.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","sinon":"^1.17.4","typescript":"^2.0.3","url-search-params":"^0.6.1","webpack":"^1.13.1","webpack-dev-server":"^1.14.1"},"homepage":"https://github.com/axios/axios","keywords":["xhr","http","ajax","promise","node"],"license":"MIT","main":"index.js","name":"axios","repository":{"type":"git","url":"git+https://github.com/axios/axios.git"},"scripts":{"build":"NODE_ENV=production grunt build","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","examples":"node ./examples/server.js","postversion":"git push && git push --tags","preversion":"npm test","start":"node ./sandbox/server.js","test":"grunt test && bundlesize","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},"typings":"./index.d.ts","version":"0.18.1"}')},function(e,n,i){"use strict";var t=i(15);function a(){this.handlers=[]}a.prototype.use=function(e,n){return this.handlers.push({fulfilled:e,rejected:n}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){t.forEach(this.handlers,(function(n){null!==n&&e(n)}))},e.exports=a},function(e,n,i){"use strict";var t=i(15),a=i(397),o=i(158),r=i(104),s=i(398),c=i(399);function p(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return p(e),e.baseURL&&!s(e.url)&&(e.url=c(e.baseURL,e.url)),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=t.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),t.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete e.headers[n]})),(e.adapter||r.adapter)(e).then((function(n){return p(e),n.data=a(n.data,n.headers,e.transformResponse),n}),(function(n){return o(n)||(p(e),n&&n.response&&(n.response.data=a(n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)}))}},function(e,n,i){"use strict";var t=i(15);e.exports=function(e,n,i){return t.forEach(i,(function(i){e=i(e,n)})),e}},function(e,n,i){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,n,i){"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},function(e,n,i){"use strict";var t=i(159);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var n;this.promise=new Promise((function(e){n=e}));var i=this;e((function(e){i.reason||(i.reason=new t(e),n(i.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a((function(n){e=n})),cancel:e}},e.exports=a},function(e,n,i){"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},function(e,n,i){var t=i(161),a=t.Buffer;function o(e,n){for(var i in e)n[i]=e[i]}function r(e,n,i){return a(e,n,i)}a.from&&a.alloc&&a.allocUnsafe&&a.allocUnsafeSlow?e.exports=t:(o(t,n),n.Buffer=r),r.prototype=Object.create(a.prototype),o(a,r),r.from=function(e,n,i){if("number"==typeof e)throw new TypeError("Argument must not be a number");return a(e,n,i)},r.alloc=function(e,n,i){if("number"!=typeof e)throw new TypeError("Argument must be a number");var t=a(e);return void 0!==n?"string"==typeof i?t.fill(n,i):t.fill(n):t.fill(0),t},r.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a(e)},r.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return t.SlowBuffer(e)}},function(e,n,i){"use strict";n.names=Object.freeze({identity:0,sha1:17,"sha2-256":18,"sha2-512":19,"dbl-sha2-256":86,"sha3-224":23,"sha3-256":22,"sha3-384":21,"sha3-512":20,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"murmur3-128":34,"murmur3-32":35,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"Skein256-8":45825,"Skein256-16":45826,"Skein256-24":45827,"Skein256-32":45828,"Skein256-40":45829,"Skein256-48":45830,"Skein256-56":45831,"Skein256-64":45832,"Skein256-72":45833,"Skein256-80":45834,"Skein256-88":45835,"Skein256-96":45836,"Skein256-104":45837,"Skein256-112":45838,"Skein256-120":45839,"Skein256-128":45840,"Skein256-136":45841,"Skein256-144":45842,"Skein256-152":45843,"Skein256-160":45844,"Skein256-168":45845,"Skein256-176":45846,"Skein256-184":45847,"Skein256-192":45848,"Skein256-200":45849,"Skein256-208":45850,"Skein256-216":45851,"Skein256-224":45852,"Skein256-232":45853,"Skein256-240":45854,"Skein256-248":45855,"Skein256-256":45856,"Skein512-8":45857,"Skein512-16":45858,"Skein512-24":45859,"Skein512-32":45860,"Skein512-40":45861,"Skein512-48":45862,"Skein512-56":45863,"Skein512-64":45864,"Skein512-72":45865,"Skein512-80":45866,"Skein512-88":45867,"Skein512-96":45868,"Skein512-104":45869,"Skein512-112":45870,"Skein512-120":45871,"Skein512-128":45872,"Skein512-136":45873,"Skein512-144":45874,"Skein512-152":45875,"Skein512-160":45876,"Skein512-168":45877,"Skein512-176":45878,"Skein512-184":45879,"Skein512-192":45880,"Skein512-200":45881,"Skein512-208":45882,"Skein512-216":45883,"Skein512-224":45884,"Skein512-232":45885,"Skein512-240":45886,"Skein512-248":45887,"Skein512-256":45888,"Skein512-264":45889,"Skein512-272":45890,"Skein512-280":45891,"Skein512-288":45892,"Skein512-296":45893,"Skein512-304":45894,"Skein512-312":45895,"Skein512-320":45896,"Skein512-328":45897,"Skein512-336":45898,"Skein512-344":45899,"Skein512-352":45900,"Skein512-360":45901,"Skein512-368":45902,"Skein512-376":45903,"Skein512-384":45904,"Skein512-392":45905,"Skein512-400":45906,"Skein512-408":45907,"Skein512-416":45908,"Skein512-424":45909,"Skein512-432":45910,"Skein512-440":45911,"Skein512-448":45912,"Skein512-456":45913,"Skein512-464":45914,"Skein512-472":45915,"Skein512-480":45916,"Skein512-488":45917,"Skein512-496":45918,"Skein512-504":45919,"Skein512-512":45920,"Skein1024-8":45921,"Skein1024-16":45922,"Skein1024-24":45923,"Skein1024-32":45924,"Skein1024-40":45925,"Skein1024-48":45926,"Skein1024-56":45927,"Skein1024-64":45928,"Skein1024-72":45929,"Skein1024-80":45930,"Skein1024-88":45931,"Skein1024-96":45932,"Skein1024-104":45933,"Skein1024-112":45934,"Skein1024-120":45935,"Skein1024-128":45936,"Skein1024-136":45937,"Skein1024-144":45938,"Skein1024-152":45939,"Skein1024-160":45940,"Skein1024-168":45941,"Skein1024-176":45942,"Skein1024-184":45943,"Skein1024-192":45944,"Skein1024-200":45945,"Skein1024-208":45946,"Skein1024-216":45947,"Skein1024-224":45948,"Skein1024-232":45949,"Skein1024-240":45950,"Skein1024-248":45951,"Skein1024-256":45952,"Skein1024-264":45953,"Skein1024-272":45954,"Skein1024-280":45955,"Skein1024-288":45956,"Skein1024-296":45957,"Skein1024-304":45958,"Skein1024-312":45959,"Skein1024-320":45960,"Skein1024-328":45961,"Skein1024-336":45962,"Skein1024-344":45963,"Skein1024-352":45964,"Skein1024-360":45965,"Skein1024-368":45966,"Skein1024-376":45967,"Skein1024-384":45968,"Skein1024-392":45969,"Skein1024-400":45970,"Skein1024-408":45971,"Skein1024-416":45972,"Skein1024-424":45973,"Skein1024-432":45974,"Skein1024-440":45975,"Skein1024-448":45976,"Skein1024-456":45977,"Skein1024-464":45978,"Skein1024-472":45979,"Skein1024-480":45980,"Skein1024-488":45981,"Skein1024-496":45982,"Skein1024-504":45983,"Skein1024-512":45984,"Skein1024-520":45985,"Skein1024-528":45986,"Skein1024-536":45987,"Skein1024-544":45988,"Skein1024-552":45989,"Skein1024-560":45990,"Skein1024-568":45991,"Skein1024-576":45992,"Skein1024-584":45993,"Skein1024-592":45994,"Skein1024-600":45995,"Skein1024-608":45996,"Skein1024-616":45997,"Skein1024-624":45998,"Skein1024-632":45999,"Skein1024-640":46e3,"Skein1024-648":46001,"Skein1024-656":46002,"Skein1024-664":46003,"Skein1024-672":46004,"Skein1024-680":46005,"Skein1024-688":46006,"Skein1024-696":46007,"Skein1024-704":46008,"Skein1024-712":46009,"Skein1024-720":46010,"Skein1024-728":46011,"Skein1024-736":46012,"Skein1024-744":46013,"Skein1024-752":46014,"Skein1024-760":46015,"Skein1024-768":46016,"Skein1024-776":46017,"Skein1024-784":46018,"Skein1024-792":46019,"Skein1024-800":46020,"Skein1024-808":46021,"Skein1024-816":46022,"Skein1024-824":46023,"Skein1024-832":46024,"Skein1024-840":46025,"Skein1024-848":46026,"Skein1024-856":46027,"Skein1024-864":46028,"Skein1024-872":46029,"Skein1024-880":46030,"Skein1024-888":46031,"Skein1024-896":46032,"Skein1024-904":46033,"Skein1024-912":46034,"Skein1024-920":46035,"Skein1024-928":46036,"Skein1024-936":46037,"Skein1024-944":46038,"Skein1024-952":46039,"Skein1024-960":46040,"Skein1024-968":46041,"Skein1024-976":46042,"Skein1024-984":46043,"Skein1024-992":46044,"Skein1024-1000":46045,"Skein1024-1008":46046,"Skein1024-1016":46047,"Skein1024-1024":46048}),n.codes=Object.freeze({0:"identity",17:"sha1",18:"sha2-256",19:"sha2-512",86:"dbl-sha2-256",23:"sha3-224",22:"sha3-256",21:"sha3-384",20:"sha3-512",24:"shake-128",25:"shake-256",26:"keccak-224",27:"keccak-256",28:"keccak-384",29:"keccak-512",34:"murmur3-128",35:"murmur3-32",45569:"blake2b-8",45570:"blake2b-16",45571:"blake2b-24",45572:"blake2b-32",45573:"blake2b-40",45574:"blake2b-48",45575:"blake2b-56",45576:"blake2b-64",45577:"blake2b-72",45578:"blake2b-80",45579:"blake2b-88",45580:"blake2b-96",45581:"blake2b-104",45582:"blake2b-112",45583:"blake2b-120",45584:"blake2b-128",45585:"blake2b-136",45586:"blake2b-144",45587:"blake2b-152",45588:"blake2b-160",45589:"blake2b-168",45590:"blake2b-176",45591:"blake2b-184",45592:"blake2b-192",45593:"blake2b-200",45594:"blake2b-208",45595:"blake2b-216",45596:"blake2b-224",45597:"blake2b-232",45598:"blake2b-240",45599:"blake2b-248",45600:"blake2b-256",45601:"blake2b-264",45602:"blake2b-272",45603:"blake2b-280",45604:"blake2b-288",45605:"blake2b-296",45606:"blake2b-304",45607:"blake2b-312",45608:"blake2b-320",45609:"blake2b-328",45610:"blake2b-336",45611:"blake2b-344",45612:"blake2b-352",45613:"blake2b-360",45614:"blake2b-368",45615:"blake2b-376",45616:"blake2b-384",45617:"blake2b-392",45618:"blake2b-400",45619:"blake2b-408",45620:"blake2b-416",45621:"blake2b-424",45622:"blake2b-432",45623:"blake2b-440",45624:"blake2b-448",45625:"blake2b-456",45626:"blake2b-464",45627:"blake2b-472",45628:"blake2b-480",45629:"blake2b-488",45630:"blake2b-496",45631:"blake2b-504",45632:"blake2b-512",45633:"blake2s-8",45634:"blake2s-16",45635:"blake2s-24",45636:"blake2s-32",45637:"blake2s-40",45638:"blake2s-48",45639:"blake2s-56",45640:"blake2s-64",45641:"blake2s-72",45642:"blake2s-80",45643:"blake2s-88",45644:"blake2s-96",45645:"blake2s-104",45646:"blake2s-112",45647:"blake2s-120",45648:"blake2s-128",45649:"blake2s-136",45650:"blake2s-144",45651:"blake2s-152",45652:"blake2s-160",45653:"blake2s-168",45654:"blake2s-176",45655:"blake2s-184",45656:"blake2s-192",45657:"blake2s-200",45658:"blake2s-208",45659:"blake2s-216",45660:"blake2s-224",45661:"blake2s-232",45662:"blake2s-240",45663:"blake2s-248",45664:"blake2s-256",45825:"Skein256-8",45826:"Skein256-16",45827:"Skein256-24",45828:"Skein256-32",45829:"Skein256-40",45830:"Skein256-48",45831:"Skein256-56",45832:"Skein256-64",45833:"Skein256-72",45834:"Skein256-80",45835:"Skein256-88",45836:"Skein256-96",45837:"Skein256-104",45838:"Skein256-112",45839:"Skein256-120",45840:"Skein256-128",45841:"Skein256-136",45842:"Skein256-144",45843:"Skein256-152",45844:"Skein256-160",45845:"Skein256-168",45846:"Skein256-176",45847:"Skein256-184",45848:"Skein256-192",45849:"Skein256-200",45850:"Skein256-208",45851:"Skein256-216",45852:"Skein256-224",45853:"Skein256-232",45854:"Skein256-240",45855:"Skein256-248",45856:"Skein256-256",45857:"Skein512-8",45858:"Skein512-16",45859:"Skein512-24",45860:"Skein512-32",45861:"Skein512-40",45862:"Skein512-48",45863:"Skein512-56",45864:"Skein512-64",45865:"Skein512-72",45866:"Skein512-80",45867:"Skein512-88",45868:"Skein512-96",45869:"Skein512-104",45870:"Skein512-112",45871:"Skein512-120",45872:"Skein512-128",45873:"Skein512-136",45874:"Skein512-144",45875:"Skein512-152",45876:"Skein512-160",45877:"Skein512-168",45878:"Skein512-176",45879:"Skein512-184",45880:"Skein512-192",45881:"Skein512-200",45882:"Skein512-208",45883:"Skein512-216",45884:"Skein512-224",45885:"Skein512-232",45886:"Skein512-240",45887:"Skein512-248",45888:"Skein512-256",45889:"Skein512-264",45890:"Skein512-272",45891:"Skein512-280",45892:"Skein512-288",45893:"Skein512-296",45894:"Skein512-304",45895:"Skein512-312",45896:"Skein512-320",45897:"Skein512-328",45898:"Skein512-336",45899:"Skein512-344",45900:"Skein512-352",45901:"Skein512-360",45902:"Skein512-368",45903:"Skein512-376",45904:"Skein512-384",45905:"Skein512-392",45906:"Skein512-400",45907:"Skein512-408",45908:"Skein512-416",45909:"Skein512-424",45910:"Skein512-432",45911:"Skein512-440",45912:"Skein512-448",45913:"Skein512-456",45914:"Skein512-464",45915:"Skein512-472",45916:"Skein512-480",45917:"Skein512-488",45918:"Skein512-496",45919:"Skein512-504",45920:"Skein512-512",45921:"Skein1024-8",45922:"Skein1024-16",45923:"Skein1024-24",45924:"Skein1024-32",45925:"Skein1024-40",45926:"Skein1024-48",45927:"Skein1024-56",45928:"Skein1024-64",45929:"Skein1024-72",45930:"Skein1024-80",45931:"Skein1024-88",45932:"Skein1024-96",45933:"Skein1024-104",45934:"Skein1024-112",45935:"Skein1024-120",45936:"Skein1024-128",45937:"Skein1024-136",45938:"Skein1024-144",45939:"Skein1024-152",45940:"Skein1024-160",45941:"Skein1024-168",45942:"Skein1024-176",45943:"Skein1024-184",45944:"Skein1024-192",45945:"Skein1024-200",45946:"Skein1024-208",45947:"Skein1024-216",45948:"Skein1024-224",45949:"Skein1024-232",45950:"Skein1024-240",45951:"Skein1024-248",45952:"Skein1024-256",45953:"Skein1024-264",45954:"Skein1024-272",45955:"Skein1024-280",45956:"Skein1024-288",45957:"Skein1024-296",45958:"Skein1024-304",45959:"Skein1024-312",45960:"Skein1024-320",45961:"Skein1024-328",45962:"Skein1024-336",45963:"Skein1024-344",45964:"Skein1024-352",45965:"Skein1024-360",45966:"Skein1024-368",45967:"Skein1024-376",45968:"Skein1024-384",45969:"Skein1024-392",45970:"Skein1024-400",45971:"Skein1024-408",45972:"Skein1024-416",45973:"Skein1024-424",45974:"Skein1024-432",45975:"Skein1024-440",45976:"Skein1024-448",45977:"Skein1024-456",45978:"Skein1024-464",45979:"Skein1024-472",45980:"Skein1024-480",45981:"Skein1024-488",45982:"Skein1024-496",45983:"Skein1024-504",45984:"Skein1024-512",45985:"Skein1024-520",45986:"Skein1024-528",45987:"Skein1024-536",45988:"Skein1024-544",45989:"Skein1024-552",45990:"Skein1024-560",45991:"Skein1024-568",45992:"Skein1024-576",45993:"Skein1024-584",45994:"Skein1024-592",45995:"Skein1024-600",45996:"Skein1024-608",45997:"Skein1024-616",45998:"Skein1024-624",45999:"Skein1024-632",46e3:"Skein1024-640",46001:"Skein1024-648",46002:"Skein1024-656",46003:"Skein1024-664",46004:"Skein1024-672",46005:"Skein1024-680",46006:"Skein1024-688",46007:"Skein1024-696",46008:"Skein1024-704",46009:"Skein1024-712",46010:"Skein1024-720",46011:"Skein1024-728",46012:"Skein1024-736",46013:"Skein1024-744",46014:"Skein1024-752",46015:"Skein1024-760",46016:"Skein1024-768",46017:"Skein1024-776",46018:"Skein1024-784",46019:"Skein1024-792",46020:"Skein1024-800",46021:"Skein1024-808",46022:"Skein1024-816",46023:"Skein1024-824",46024:"Skein1024-832",46025:"Skein1024-840",46026:"Skein1024-848",46027:"Skein1024-856",46028:"Skein1024-864",46029:"Skein1024-872",46030:"Skein1024-880",46031:"Skein1024-888",46032:"Skein1024-896",46033:"Skein1024-904",46034:"Skein1024-912",46035:"Skein1024-920",46036:"Skein1024-928",46037:"Skein1024-936",46038:"Skein1024-944",46039:"Skein1024-952",46040:"Skein1024-960",46041:"Skein1024-968",46042:"Skein1024-976",46043:"Skein1024-984",46044:"Skein1024-992",46045:"Skein1024-1000",46046:"Skein1024-1008",46047:"Skein1024-1016",46048:"Skein1024-1024"}),n.defaultLengths=Object.freeze({17:20,18:32,19:64,86:32,23:28,22:32,21:48,20:64,24:32,25:64,26:28,27:32,28:48,29:64,34:32,45569:1,45570:2,45571:3,45572:4,45573:5,45574:6,45575:7,45576:8,45577:9,45578:10,45579:11,45580:12,45581:13,45582:14,45583:15,45584:16,45585:17,45586:18,45587:19,45588:20,45589:21,45590:22,45591:23,45592:24,45593:25,45594:26,45595:27,45596:28,45597:29,45598:30,45599:31,45600:32,45601:33,45602:34,45603:35,45604:36,45605:37,45606:38,45607:39,45608:40,45609:41,45610:42,45611:43,45612:44,45613:45,45614:46,45615:47,45616:48,45617:49,45618:50,45619:51,45620:52,45621:53,45622:54,45623:55,45624:56,45625:57,45626:58,45627:59,45628:60,45629:61,45630:62,45631:63,45632:64,45633:1,45634:2,45635:3,45636:4,45637:5,45638:6,45639:7,45640:8,45641:9,45642:10,45643:11,45644:12,45645:13,45646:14,45647:15,45648:16,45649:17,45650:18,45651:19,45652:20,45653:21,45654:22,45655:23,45656:24,45657:25,45658:26,45659:27,45660:28,45661:29,45662:30,45663:31,45664:32,45825:1,45826:2,45827:3,45828:4,45829:5,45830:6,45831:7,45832:8,45833:9,45834:10,45835:11,45836:12,45837:13,45838:14,45839:15,45840:16,45841:17,45842:18,45843:19,45844:20,45845:21,45846:22,45847:23,45848:24,45849:25,45850:26,45851:27,45852:28,45853:29,45854:30,45855:31,45856:32,45857:1,45858:2,45859:3,45860:4,45861:5,45862:6,45863:7,45864:8,45865:9,45866:10,45867:11,45868:12,45869:13,45870:14,45871:15,45872:16,45873:17,45874:18,45875:19,45876:20,45877:21,45878:22,45879:23,45880:24,45881:25,45882:26,45883:27,45884:28,45885:29,45886:30,45887:31,45888:32,45889:33,45890:34,45891:35,45892:36,45893:37,45894:38,45895:39,45896:40,45897:41,45898:42,45899:43,45900:44,45901:45,45902:46,45903:47,45904:48,45905:49,45906:50,45907:51,45908:52,45909:53,45910:54,45911:55,45912:56,45913:57,45914:58,45915:59,45916:60,45917:61,45918:62,45919:63,45920:64,45921:1,45922:2,45923:3,45924:4,45925:5,45926:6,45927:7,45928:8,45929:9,45930:10,45931:11,45932:12,45933:13,45934:14,45935:15,45936:16,45937:17,45938:18,45939:19,45940:20,45941:21,45942:22,45943:23,45944:24,45945:25,45946:26,45947:27,45948:28,45949:29,45950:30,45951:31,45952:32,45953:33,45954:34,45955:35,45956:36,45957:37,45958:38,45959:39,45960:40,45961:41,45962:42,45963:43,45964:44,45965:45,45966:46,45967:47,45968:48,45969:49,45970:50,45971:51,45972:52,45973:53,45974:54,45975:55,45976:56,45977:57,45978:58,45979:59,45980:60,45981:61,45982:62,45983:63,45984:64,45985:65,45986:66,45987:67,45988:68,45989:69,45990:70,45991:71,45992:72,45993:73,45994:74,45995:75,45996:76,45997:77,45998:78,45999:79,46e3:80,46001:81,46002:82,46003:83,46004:84,46005:85,46006:86,46007:87,46008:88,46009:89,46010:90,46011:91,46012:92,46013:93,46014:94,46015:95,46016:96,46017:97,46018:98,46019:99,46020:100,46021:101,46022:102,46023:103,46024:104,46025:105,46026:106,46027:107,46028:108,46029:109,46030:110,46031:111,46032:112,46033:113,46034:114,46035:115,46036:116,46037:117,46038:118,46039:119,46040:120,46041:121,46042:122,46043:123,46044:124,46045:125,46046:126,46047:127,46048:128})},function(e,n){e.exports=function e(n,t,a){t=t||[];var o=a=a||0;for(;n>=i;)t[a++]=255&n|128,n/=128;for(;-128&n;)t[a++]=255&n|128,n>>>=7;return t[a]=0|n,e.bytes=a-o+1,t};var i=Math.pow(2,31)},function(e,n){e.exports=function e(n,i){var t,a=0,o=0,r=i=i||0,s=n.length;do{if(r>=s)throw e.bytes=0,new RangeError("Could not decode varint");t=n[r++],a+=o<28?(127&t)<<o:(127&t)*Math.pow(2,o),o+=7}while(t>=128);return e.bytes=r-i,a}},function(e,n){var i=Math.pow(2,7),t=Math.pow(2,14),a=Math.pow(2,21),o=Math.pow(2,28),r=Math.pow(2,35),s=Math.pow(2,42),c=Math.pow(2,49),p=Math.pow(2,56),u=Math.pow(2,63);e.exports=function(e){return e<i?1:e<t?2:e<a?3:e<o?4:e<r?5:e<s?6:e<c?7:e<p?8:e<u?9:10}},function(e,n,i){"use strict";const t=i(408),a=i(160),o=i(409),r=i(410),s=i(411),c=[["base1","1","","1"],["base2","0",a,"01"],["base8","7",a,"01234567"],["base10","9",a,"0123456789"],["base16","f",o,"0123456789abcdef"],["base32","b",r,"abcdefghijklmnopqrstuvwxyz234567"],["base32pad","c",r,"abcdefghijklmnopqrstuvwxyz234567="],["base32hex","v",r,"0123456789abcdefghijklmnopqrstuv"],["base32hexpad","t",r,"0123456789abcdefghijklmnopqrstuv="],["base32z","h",r,"ybndrfg8ejkmcpqxot1uwisza345h769"],["base58flickr","Z",a,"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],["base58btc","z",a,"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],["base64","m",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],["base64pad","M",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],["base64url","u",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"],["base64urlpad","U",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]],p=c.reduce((e,n)=>(e[n[0]]=new t(n[0],n[1],n[2],n[3]),e),{}),u=c.reduce((e,n)=>(e[n[1]]=p[n[0]],e),{});e.exports={names:p,codes:u}},function(e,n,i){"use strict";e.exports=class{constructor(e,n,i,t){this.name=e,this.code=n,this.alphabet=t,i&&t&&(this.engine=i(t))}encode(e){return this.engine.encode(e)}decode(e){return this.engine.decode(e)}isImplemented(){return this.engine}}},function(e,n,i){"use strict";e.exports=function(e){return{encode:e=>"string"==typeof e?Buffer.from(e).toString("hex"):e.toString("hex"),decode(n){for(let i of n)if(e.indexOf(i)<0)throw new Error("invalid base16 character");return Buffer.from(n,"hex")}}}},function(e,n,i){"use strict";function t(e,n){let i=e.byteLength,t=new Uint8Array(e),a=n.indexOf("=")===n.length-1;a&&(n=n.substring(0,n.length-2));let o=0,r=0,s="";for(let e=0;e<i;e++)for(r=r<<8|t[e],o+=8;o>=5;)s+=n[r>>>o-5&31],o-=5;if(o>0&&(s+=n[r<<5-o&31]),a)for(;s.length%8!=0;)s+="=";return s}e.exports=function(e){return{encode:n=>t("string"==typeof n?Buffer.from(n):n,e),decode(n){for(let i of n)if(e.indexOf(i)<0)throw new Error("invalid base32 character");return function(e,n){let i=(e=e.replace(new RegExp("=","g"),"")).length,t=0,a=0,o=0,r=new Uint8Array(5*i/8|0);for(let s=0;s<i;s++)a=a<<5|n.indexOf(e[s]),t+=5,t>=8&&(r[o++]=a>>>t-8&255,t-=8);return r.buffer}(n,e)}}}},function(e,n,i){"use strict";e.exports=function(e){const n=e.indexOf("=")>-1,i=e.indexOf("-")>-1&&e.indexOf("_")>-1;return{encode(e){let t="";t="string"==typeof e?Buffer.from(e).toString("base64"):e.toString("base64"),i&&(t=t.replace(/\+/g,"-").replace(/\//g,"_"));const a=t.indexOf("=");return a>0&&!n&&(t=t.substring(0,a)),t},decode(n){for(let i of n)if(e.indexOf(i)<0)throw new Error("invalid base64 character");return Buffer.from(n,"base64")}}}},function(e,n,i){"use strict";const t=i(413),a=i(110),o=i(50);function r(e){const n=[],i=e.split("/").slice(1);if(1===i.length&&""===i[0])return[];for(let t=0;t<i.length;t++){const o=i[t],r=a(o);if(0!==r.size){if(t++,t>=i.length)throw x("invalid address: "+e);if(r.path){n.push([o,h(i.slice(t).join("/"))]);break}n.push([o,i[t]])}else n.push([o])}return n}function s(e){const n=[];return e.map(e=>{const i=b(e);n.push(i.name),e.length>1&&n.push(e[1])}),h(n.join("/"))}function c(e){return e.map(e=>{Array.isArray(e)||(e=[e]);const n=b(e);return e.length>1?[n.code,t.toBuffer(n.code,e[1])]:[n.code]})}function p(e){return e.map(e=>{const n=b(e);return e.length>1?[n.code,t.toString(n.code,e[1])]:[n.code]})}function u(e){return m(Buffer.concat(e.map(e=>{const n=b(e);let i=Buffer.from(o.encode(n.code));return e.length>1&&(i=Buffer.concat([i,e[1]])),i})))}function l(e,n){if(e.size>0)return e.size/8;if(0===e.size)return 0;return o.decode(n)+o.decode.bytes}function f(e){const n=[];let i=0;for(;i<e.length;){const t=o.decode(e,i),r=o.decode.bytes,s=l(a(t),e.slice(i+r));if(0===s){n.push([t]),i+=r;continue}const c=e.slice(i+r,i+r+s);if(i+=s+r,i>e.length)throw x("Invalid address buffer: "+e.toString("hex"));n.push([t,c])}return n}function d(e){return u(c(r(e=h(e))))}function m(e){const n=v(e);if(n)throw n;return Buffer.from(e)}function v(e){try{f(e)}catch(e){return e}}function h(e){return"/"+e.trim().split("/").filter(e=>e).join("/")}function x(e){return new Error("Error parsing address: "+e)}function b(e){return a(e[0])}e.exports={stringToStringTuples:r,stringTuplesToString:s,tuplesToStringTuples:p,stringTuplesToTuples:c,bufferToTuples:f,tuplesToBuffer:u,bufferToString:function(e){return s(p(f(e)))},stringToBuffer:d,fromString:function(e){return d(e)},fromBuffer:m,validateBuffer:v,isValidBuffer:function(e){return void 0===v(e)},cleanPath:h,ParseError:x,protoFromTuple:b,sizeForAddr:l}},function(e,n,i){"use strict";const t=i(414),a=i(415),o=i(110),r=i(74),s=i(111),c=i(423),p=i(50);function u(e,n){return n instanceof Buffer?u.toString(e,n):u.toBuffer(e,n)}function l(e){if(!a(e))throw new Error("invalid ip address");return t.toBuffer(e)}function f(e){const n=Buffer.alloc(2);return n.writeUInt16BE(e,0),n}function d(e){return e.readUInt16BE(0)}function m(e){const n=e.slice(0,e.length-2),i=e.slice(e.length-2);return c.encode(n).toLowerCase()+":"+d(i)}e.exports=u,u.toString=function(e,n){switch((e=o(e)).code){case 4:case 41:return function(e){const n=t.toString(e);if(!a(n))throw new Error("invalid ip address");return n}(n);case 6:case 273:case 33:case 132:return d(n);case 53:case 54:case 55:case 56:case 400:return function(e){const n=p.decode(e);if((e=e.slice(p.decode.bytes)).length!==n)throw new Error("inconsistent lengths");return e.toString()}(n);case 421:return function(e){const n=p.decode(e),i=e.slice(p.decode.bytes);if(i.length!==n)throw new Error("inconsistent lengths");return r.encode(i)}(n);case 444:case 445:return m(n);default:return n.toString("hex")}},u.toBuffer=function(e,n){switch((e=o(e)).code){case 4:case 41:return l(n);case 6:case 273:case 33:case 132:return f(parseInt(n,10));case 53:case 54:case 55:case 56:case 400:return function(e){const n=Buffer.from(e),i=Buffer.from(p.encode(n.length));return Buffer.concat([i,n])}(n);case 421:return function(e){const n=new s(e).multihash,i=Buffer.from(p.encode(n.length));return Buffer.concat([i,n])}(n);case 444:return function(e){const n=e.split(":");if(2!==n.length)throw new Error("failed to parse onion addr: "+n+" does not contain a port number");if(16!==n[0].length)throw new Error("failed to parse onion addr: "+n[0]+" not a Tor onion address.");const i=Buffer.from(c.decode.asBytes(n[0].toUpperCase())),t=parseInt(n[1],10);if(t<1||t>65536)throw new Error("Port number is not in range(1, 65536)");const a=f(t);return Buffer.concat([i,a])}(n);case 445:return function(e){const n=e.split(":");if(2!==n.length)throw new Error("failed to parse onion addr: "+n+" does not contain a port number");if(56!==n[0].length)throw new Error("failed to parse onion addr: "+n[0]+" not a Tor onion3 address.");const i=Buffer.from(c.decode.asBytes(n[0].toUpperCase())),t=parseInt(n[1],10);if(t<1||t>65536)throw new Error("Port number is not in range(1, 65536)");const a=f(t);return Buffer.concat([i,a])}(n);default:return Buffer.from(n,"hex")}}},function(e,n,i){"use strict";var t=n,a=i(161).Buffer,o=i(157);t.toBuffer=function(e,n,i){var t;if(i=~~i,this.isV4Format(e))t=n||new a(i+4),e.split(/\./g).map((function(e){t[i++]=255&parseInt(e,10)}));else if(this.isV6Format(e)){var o,r=e.split(":",8);for(o=0;o<r.length;o++){var s;this.isV4Format(r[o])&&(s=this.toBuffer(r[o]),r[o]=s.slice(0,2).toString("hex")),s&&++o<8&&r.splice(o,0,s.slice(2,4).toString("hex"))}if(""===r[0])for(;r.length<8;)r.unshift("0");else if(""===r[r.length-1])for(;r.length<8;)r.push("0");else if(r.length<8){for(o=0;o<r.length&&""!==r[o];o++);var c=[o,1];for(o=9-r.length;o>0;o--)c.push("0");r.splice.apply(r,c)}for(t=n||new a(i+16),o=0;o<r.length;o++){var p=parseInt(r[o],16);t[i++]=p>>8&255,t[i++]=255&p}}if(!t)throw Error("Invalid ip address: "+e);return t},t.toString=function(e,n,i){n=~~n;var t=[];if(4===(i=i||e.length-n)){for(var a=0;a<i;a++)t.push(e[n+a]);t=t.join(".")}else if(16===i){for(a=0;a<i;a+=2)t.push(e.readUInt16BE(n+a).toString(16));t=(t=(t=t.join(":")).replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3")).replace(/:{3,4}/,"::")}return t};var r=/^(\d{1,3}\.){3,3}\d{1,3}$/,s=/^(::)?(((\d{1,3}\.){3}(\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;function c(e){return e?e.toLowerCase():"ipv4"}t.isV4Format=function(e){return r.test(e)},t.isV6Format=function(e){return s.test(e)},t.fromPrefixLen=function(e,n){var i=4;"ipv6"===(n=e>32?"ipv6":c(n))&&(i=16);for(var o=new a(i),r=0,s=o.length;r<s;++r){var p=8;e<8&&(p=e),e-=p,o[r]=255&~(255>>p)}return t.toString(o)},t.mask=function(e,n){e=t.toBuffer(e),n=t.toBuffer(n);var i=new a(Math.max(e.length,n.length)),o=0;if(e.length===n.length)for(o=0;o<e.length;o++)i[o]=e[o]&n[o];else if(4===n.length)for(o=0;o<n.length;o++)i[o]=e[e.length-4+o]&n[o];else{for(o=0;o<i.length-6;o++)i[o]=0;for(i[10]=255,i[11]=255,o=0;o<e.length;o++)i[o+12]=e[o]&n[o+12];o+=12}for(;o<i.length;o++)i[o]=0;return t.toString(i)},t.cidr=function(e){var n=e.split("/"),i=n[0];if(2!==n.length)throw new Error("invalid CIDR subnet: "+i);var a=t.fromPrefixLen(parseInt(n[1],10));return t.mask(i,a)},t.subnet=function(e,n){for(var i=t.toLong(t.mask(e,n)),a=t.toBuffer(n),o=0,r=0;r<a.length;r++)if(255===a[r])o+=8;else for(var s=255&a[r];s;)s=s<<1&255,o++;var c=Math.pow(2,32-o);return{networkAddress:t.fromLong(i),firstAddress:c<=2?t.fromLong(i):t.fromLong(i+1),lastAddress:c<=2?t.fromLong(i+c-1):t.fromLong(i+c-2),broadcastAddress:t.fromLong(i+c-1),subnetMask:n,subnetMaskLength:o,numHosts:c<=2?c:c-2,length:c,contains:function(e){return i===t.toLong(t.mask(e,n))}}},t.cidrSubnet=function(e){var n=e.split("/"),i=n[0];if(2!==n.length)throw new Error("invalid CIDR subnet: "+i);var a=t.fromPrefixLen(parseInt(n[1],10));return t.subnet(i,a)},t.not=function(e){for(var n=t.toBuffer(e),i=0;i<n.length;i++)n[i]=255^n[i];return t.toString(n)},t.or=function(e,n){if(e=t.toBuffer(e),n=t.toBuffer(n),e.length===n.length){for(var i=0;i<e.length;++i)e[i]|=n[i];return t.toString(e)}var a=e,o=n;n.length>e.length&&(a=n,o=e);var r=a.length-o.length;for(i=r;i<a.length;++i)a[i]|=o[i-r];return t.toString(a)},t.isEqual=function(e,n){if(e=t.toBuffer(e),n=t.toBuffer(n),e.length===n.length){for(var i=0;i<e.length;i++)if(e[i]!==n[i])return!1;return!0}if(4===n.length){var a=n;n=e,e=a}for(i=0;i<10;i++)if(0!==n[i])return!1;var o=n.readUInt16BE(10);if(0!==o&&65535!==o)return!1;for(i=0;i<4;i++)if(e[i]!==n[i+12])return!1;return!0},t.isPrivate=function(e){return/^(::f{4}:)?10\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?192\.168\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?172\.(1[6-9]|2\d|30|31)\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?169\.254\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^f[cd][0-9a-f]{2}:/i.test(e)||/^fe80:/i.test(e)||/^::1$/.test(e)||/^::$/.test(e)},t.isPublic=function(e){return!t.isPrivate(e)},t.isLoopback=function(e){return/^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/.test(e)||/^fe80::1$/.test(e)||/^::1$/.test(e)||/^::$/.test(e)},t.loopback=function(e){if("ipv4"!==(e=c(e))&&"ipv6"!==e)throw new Error("family must be ipv4 or ipv6");return"ipv4"===e?"127.0.0.1":"fe80::1"},t.address=function(e,n){var i,a=o.networkInterfaces();if(n=c(n),e&&"private"!==e&&"public"!==e){var r=a[e].filter((function(e){return e.family.toLowerCase()===n}));if(0===r.length)return;return r[0].address}return(i=Object.keys(a).map((function(i){var o=a[i].filter((function(i){return i.family=i.family.toLowerCase(),i.family===n&&!t.isLoopback(i.address)&&(!e||("public"===e?t.isPrivate(i.address):t.isPublic(i.address)))}));return o.length?o[0].address:void 0})).filter(Boolean)).length?i[0]:t.loopback(n)},t.toLong=function(e){var n=0;return e.split(".").forEach((function(e){n<<=8,n+=parseInt(e)})),n>>>0},t.fromLong=function(e){return(e>>>24)+"."+(e>>16&255)+"."+(e>>8&255)+"."+(255&e)}},function(e,n,i){"use strict";const t=i(416),a=e=>t({exact:!0}).test(e);a.v4=e=>t.v4({exact:!0}).test(e),a.v6=e=>t.v6({exact:!0}).test(e),a.version=e=>a(e)?a.v4(e)?4:6:void 0,e.exports=a},function(e,n,i){"use strict";const t=e=>e&&e.includeBoundaries?"(?:(?<=\\s|^)(?=[a-fA-F\\d:])|(?<=[a-fA-F\\d:])(?=\\s|$))":"",a="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",o="[a-fA-F\\d]{1,4}",r=`\n(\n(?:${o}:){7}(?:${o}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${o}:){6}(?:${a}|:${o}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${o}:){5}(?::${a}|(:${o}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${o}:){4}(?:(:${o}){0,1}:${a}|(:${o}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${o}:){3}(?:(:${o}){0,2}:${a}|(:${o}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${o}:){2}(?:(:${o}){0,3}:${a}|(:${o}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${o}:){1}(?:(:${o}){0,4}:${a}|(:${o}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${o}){0,5}:${a}|(?::${o}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),s=e=>e&&e.exact?new RegExp(`(?:^${a}$)|(?:^${r}$)`):new RegExp(`(?:${t(e)}${a}${t(e)})|(?:${t(e)}${r}${t(e)})`,"g");s.v4=e=>e&&e.exact?new RegExp(`^${a}$`):new RegExp(`${t(e)}${a}${t(e)}`,"g"),s.v6=e=>e&&e.exact?new RegExp(`^${r}$`):new RegExp(`${t(e)}${r}${t(e)}`,"g"),e.exports=s},function(e,n,i){"use strict";const t=i(50),a=i(418),o=i(419),r=i(164);(n=e.exports).addPrefix=(e,n)=>{let i;if(Buffer.isBuffer(e))i=r.varintBufferEncode(e);else{if(!o[e])throw new Error("multicodec not recognized");i=o[e]}return Buffer.concat([i,n])},n.rmPrefix=e=>(t.decode(e),e.slice(t.decode.bytes)),n.getCodec=e=>{const n=t.decode(e),i=a.get(n);if(void 0===i)throw new Error(`Code ${n} not found`);return i},n.getName=e=>a.get(e),n.getNumber=e=>{const n=o[e];if(void 0===n)throw new Error("Codec `"+e+"` not found");return r.varintBufferDecode(n)[0]},n.getCode=e=>t.decode(e),n.getCodeVarint=e=>{const n=o[e];if(void 0===n)throw new Error("Codec `"+e+"` not found");return n},n.getVarint=e=>t.encode(e);const s=i(420);Object.assign(n,s),n.print=i(421)},function(e,n,i){"use strict";const t=i(56),a=new Map;for(const e in t){const n=t[e];a.set(n,e)}e.exports=Object.freeze(a)},function(e,n,i){"use strict";const t=i(56),a=i(164).varintEncode,o={};for(const e in t){const n=t[e];o[e]=a(n)}e.exports=Object.freeze(o)},function(e,n,i){"use strict";const t=i(56),a={};for(const[e,n]of Object.entries(t))a[e.toUpperCase().replace(/-/g,"_")]=n;e.exports=Object.freeze(a)},function(e,n,i){"use strict";const t=i(56),a={};for(const[e,n]of Object.entries(t))void 0===a[n]&&(a[n]=e);e.exports=Object.freeze(a)},function(e,n,i){"use strict";const t=i(109);var a={checkCIDComponents:function(e){if(null==e)return"null values are not valid CIDs";if(0!==e.version&&1!==e.version)return"Invalid version, must be a number equal to 1 or 0";if("string"!=typeof e.codec)return"codec must be string";if(0===e.version){if("dag-pb"!==e.codec)return"codec must be 'dag-pb' for CIDv0";if("base58btc"!==e.multibaseName)return"multibaseName must be 'base58btc' for CIDv0"}if(!Buffer.isBuffer(e.multihash))return"multihash must be a Buffer";try{t.validate(e.multihash)}catch(e){let n=e.message;return n||(n="Multihash validation failed"),n}}};e.exports=a},function(e,n,i){var t;
/*
 * [hi-base32]{@link https://github.com/emn178/hi-base32}
 *
 * @version 0.5.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */!function(){"use strict";var n="object"==typeof window?window:{};!n.HI_BASE32_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node&&(n=global);var a=!n.HI_BASE32_NO_COMMON_JS&&"object"==typeof e&&e.exports,o=i(424),r="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split(""),s={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,2:26,3:27,4:28,5:29,6:30,7:31},c=[0,0,0,0,0,0,0,0],p=function(e,n){n.length>10&&(n="..."+n.substr(-10));var i=new Error("Decoded data is not valid UTF-8. Maybe try base32.decode.asBytes()? Partial data after reading "+e+" bytes: "+n+" <-");throw i.position=e,i},u=function(e){if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");for(var n,i,t,a,o,r,c,p,u=[],l=0,f=(e=e.replace(/=/g,"")).length,d=0,m=f>>3<<3;d<m;)n=s[e.charAt(d++)],i=s[e.charAt(d++)],t=s[e.charAt(d++)],a=s[e.charAt(d++)],o=s[e.charAt(d++)],r=s[e.charAt(d++)],c=s[e.charAt(d++)],p=s[e.charAt(d++)],u[l++]=255&(n<<3|i>>>2),u[l++]=255&(i<<6|t<<1|a>>>4),u[l++]=255&(a<<4|o>>>1),u[l++]=255&(o<<7|r<<2|c>>>3),u[l++]=255&(c<<5|p);var v=f-m;return 2===v?(n=s[e.charAt(d++)],i=s[e.charAt(d++)],u[l++]=255&(n<<3|i>>>2)):4===v?(n=s[e.charAt(d++)],i=s[e.charAt(d++)],t=s[e.charAt(d++)],a=s[e.charAt(d++)],u[l++]=255&(n<<3|i>>>2),u[l++]=255&(i<<6|t<<1|a>>>4)):5===v?(n=s[e.charAt(d++)],i=s[e.charAt(d++)],t=s[e.charAt(d++)],a=s[e.charAt(d++)],o=s[e.charAt(d++)],u[l++]=255&(n<<3|i>>>2),u[l++]=255&(i<<6|t<<1|a>>>4),u[l++]=255&(a<<4|o>>>1)):7===v&&(n=s[e.charAt(d++)],i=s[e.charAt(d++)],t=s[e.charAt(d++)],a=s[e.charAt(d++)],o=s[e.charAt(d++)],r=s[e.charAt(d++)],c=s[e.charAt(d++)],u[l++]=255&(n<<3|i>>>2),u[l++]=255&(i<<6|t<<1|a>>>4),u[l++]=255&(a<<4|o>>>1),u[l++]=255&(o<<7|r<<2|c>>>3)),u},l=function(e,n){if(!n)return function(e){for(var n,i,t="",a=e.length,o=0,r=0;o<a;)if((n=e[o++])<=127)t+=String.fromCharCode(n);else{n>191&&n<=223?(i=31&n,r=1):n<=239?(i=15&n,r=2):n<=247?(i=7&n,r=3):p(o,t);for(var s=0;s<r;++s)((n=e[o++])<128||n>191)&&p(o,t),i<<=6,i+=63&n;i>=55296&&i<=57343&&p(o,t),i>1114111&&p(o,t),i<=65535?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode(55296+(i>>10)),t+=String.fromCharCode(56320+(1023&i)))}return t}(u(e));if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");var i,t,a,o,r,c,l,f,d="",m=e.indexOf("=");-1===m&&(m=e.length);for(var v=0,h=m>>3<<3;v<h;)i=s[e.charAt(v++)],t=s[e.charAt(v++)],a=s[e.charAt(v++)],o=s[e.charAt(v++)],r=s[e.charAt(v++)],c=s[e.charAt(v++)],l=s[e.charAt(v++)],f=s[e.charAt(v++)],d+=String.fromCharCode(255&(i<<3|t>>>2))+String.fromCharCode(255&(t<<6|a<<1|o>>>4))+String.fromCharCode(255&(o<<4|r>>>1))+String.fromCharCode(255&(r<<7|c<<2|l>>>3))+String.fromCharCode(255&(l<<5|f));var x=m-h;return 2===x?(i=s[e.charAt(v++)],t=s[e.charAt(v++)],d+=String.fromCharCode(255&(i<<3|t>>>2))):4===x?(i=s[e.charAt(v++)],t=s[e.charAt(v++)],a=s[e.charAt(v++)],o=s[e.charAt(v++)],d+=String.fromCharCode(255&(i<<3|t>>>2))+String.fromCharCode(255&(t<<6|a<<1|o>>>4))):5===x?(i=s[e.charAt(v++)],t=s[e.charAt(v++)],a=s[e.charAt(v++)],o=s[e.charAt(v++)],r=s[e.charAt(v++)],d+=String.fromCharCode(255&(i<<3|t>>>2))+String.fromCharCode(255&(t<<6|a<<1|o>>>4))+String.fromCharCode(255&(o<<4|r>>>1))):7===x&&(i=s[e.charAt(v++)],t=s[e.charAt(v++)],a=s[e.charAt(v++)],o=s[e.charAt(v++)],r=s[e.charAt(v++)],c=s[e.charAt(v++)],l=s[e.charAt(v++)],d+=String.fromCharCode(255&(i<<3|t>>>2))+String.fromCharCode(255&(t<<6|a<<1|o>>>4))+String.fromCharCode(255&(o<<4|r>>>1))+String.fromCharCode(255&(r<<7|c<<2|l>>>3))),d},f={encode:function(e,n){var i="string"!=typeof e;return i&&e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),i?function(e){for(var n,i,t,a,o,s="",c=e.length,p=0,u=5*parseInt(c/5);p<u;)n=e[p++],i=e[p++],t=e[p++],a=e[p++],o=e[p++],s+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[31&(t<<1|a>>>7)]+r[a>>>2&31]+r[31&(a<<3|o>>>5)]+r[31&o];var l=c-u;return 1===l?(n=e[p],s+=r[n>>>3]+r[n<<2&31]+"======"):2===l?(n=e[p++],i=e[p],s+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[i<<4&31]+"===="):3===l?(n=e[p++],i=e[p++],t=e[p],s+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[t<<1&31]+"==="):4===l&&(n=e[p++],i=e[p++],t=e[p++],a=e[p],s+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[31&(t<<1|a>>>7)]+r[a>>>2&31]+r[a<<3&31]+"="),s}(e):n?function(e){for(var n,i,t,a,o,s="",c=e.length,p=0,u=5*parseInt(c/5);p<u;)n=e.charCodeAt(p++),i=e.charCodeAt(p++),t=e.charCodeAt(p++),a=e.charCodeAt(p++),o=e.charCodeAt(p++),s+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[31&(t<<1|a>>>7)]+r[a>>>2&31]+r[31&(a<<3|o>>>5)]+r[31&o];var l=c-u;return 1===l?(n=e.charCodeAt(p),s+=r[n>>>3]+r[n<<2&31]+"======"):2===l?(n=e.charCodeAt(p++),i=e.charCodeAt(p),s+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[i<<4&31]+"===="):3===l?(n=e.charCodeAt(p++),i=e.charCodeAt(p++),t=e.charCodeAt(p),s+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[t<<1&31]+"==="):4===l&&(n=e.charCodeAt(p++),i=e.charCodeAt(p++),t=e.charCodeAt(p++),a=e.charCodeAt(p),s+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[31&(t<<1|a>>>7)]+r[a>>>2&31]+r[a<<3&31]+"="),s}(e):function(e){var n,i,t,a,o,s,p,u=!1,l="",f=0,d=0,m=e.length;do{for(c[0]=c[5],c[1]=c[6],c[2]=c[7],p=d;f<m&&p<5;++f)(s=e.charCodeAt(f))<128?c[p++]=s:s<2048?(c[p++]=192|s>>6,c[p++]=128|63&s):s<55296||s>=57344?(c[p++]=224|s>>12,c[p++]=128|s>>6&63,c[p++]=128|63&s):(s=65536+((1023&s)<<10|1023&e.charCodeAt(++f)),c[p++]=240|s>>18,c[p++]=128|s>>12&63,c[p++]=128|s>>6&63,c[p++]=128|63&s);p-d,d=p-5,f===m&&++f,f>m&&p<6&&(u=!0),n=c[0],p>4?(i=c[1],t=c[2],a=c[3],o=c[4],l+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[31&(t<<1|a>>>7)]+r[a>>>2&31]+r[31&(a<<3|o>>>5)]+r[31&o]):1===p?l+=r[n>>>3]+r[n<<2&31]+"======":2===p?(i=c[1],l+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[i<<4&31]+"===="):3===p?(i=c[1],t=c[2],l+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[t<<1&31]+"==="):(i=c[1],t=c[2],a=c[3],l+=r[n>>>3]+r[31&(n<<2|i>>>6)]+r[i>>>1&31]+r[31&(i<<4|t>>>4)]+r[31&(t<<1|a>>>7)]+r[a>>>2&31]+r[a<<3&31]+"=")}while(!u);return l}(e)},decode:l};l.asBytes=u,a?e.exports=f:(n.base32=f,o&&(void 0===(t=function(){return f}.call(f,i,f,e))||(e.exports=t)))}()},function(e,n){(function(n){e.exports=n}).call(this,{})},function(e,n,i){"use strict";const t=i(163),a=O("dns4"),o=O("dns6"),r=C(O("dns"),O("dnsaddr"),a,o),s=C(O("ip4"),O("ip6")),c=C(E(s,O("tcp")),E(r,O("tcp"))),p=E(s,O("udp")),u=E(p,O("utp")),l=C(E(c,O("ws")),E(r,O("ws"))),f=C(E(c,O("wss")),E(r,O("wss"))),d=C(E(c,O("http")),E(s,O("http")),E(r,O("http"))),m=C(E(c,O("https")),E(s,O("https")),E(r,O("https"))),v=C(E(l,O("p2p-webrtc-star"),O("p2p")),E(f,O("p2p-webrtc-star"),O("p2p")),E(l,O("p2p-webrtc-star")),E(f,O("p2p-webrtc-star"))),h=C(E(l,O("p2p-websocket-star"),O("p2p")),E(f,O("p2p-websocket-star"),O("p2p")),E(l,O("p2p-websocket-star")),E(f,O("p2p-websocket-star"))),x=C(E(d,O("p2p-webrtc-direct")),E(m,O("p2p-webrtc-direct"))),b=C(l,f,d,m,v,x,c,u),g=C(E(b,O("p2p-stardust"),O("p2p")),E(b,O("p2p-stardust"))),k=C(E(b,O("p2p")),v,O("p2p")),y=C(E(k,O("p2p-circuit"),k),E(k,O("p2p-circuit")),E(O("p2p-circuit"),k),E(b,O("p2p-circuit")),E(O("p2p-circuit"),b),O("p2p-circuit")),w=()=>C(E(y,w),y),S=w(),_=C(E(S,k,S),E(k,S),E(S,k),S,k);function j(e){return function(n){if(!t.isMultiaddr(n))try{n=t(n)}catch(e){return!1}const i=e(n.protoNames());return null!==i&&0===i.length}}function E(){const e=Array.from(arguments);function n(n){return n.length<e.length?null:(e.some(e=>{if(null===(n="function"==typeof e?e().partialMatch(n):e.partialMatch(n)))return!0}),n)}return{toString:function(){return"{ "+e.join(" ")+" }"},input:e,matches:j(n),partialMatch:n}}function C(){const e=Array.from(arguments);function n(n){let i=null;return e.some(e=>{const t="function"==typeof e?e().partialMatch(n):e.partialMatch(n);if(t)return i=t,!0}),i}const i={toString:function(){return"{ "+e.join(" ")+" }"},input:e,matches:j(n),partialMatch:n};return i}function O(e){const n=e;return{toString:function(){return n},matches:function(e){if("string"==typeof e)try{e=t(e)}catch(e){return!1}const i=e.protoNames();return 1===i.length&&i[0]===n},partialMatch:function(e){return 0===e.length?null:e[0]===n?e.slice(1):null}}}n.DNS=r,n.DNS4=a,n.DNS6=o,n.IP=s,n.TCP=c,n.UDP=p,n.UTP=u,n.HTTP=d,n.HTTPS=m,n.WebSockets=l,n.WebSocketsSecure=f,n.WebSocketStar=h,n.WebRTCStar=v,n.WebRTCDirect=x,n.Reliable=b,n.Stardust=g,n.Circuit=S,n.P2P=_,n.IPFS=_},function(e,n,i){var t=i(73),a=i(58).Stream,o=i(427);function r(){this.writable=!1,this.readable=!0,this.dataSize=0,this.maxDataSize=2097152,this.pauseStreams=!0,this._released=!1,this._streams=[],this._currentStream=null,this._insideLoop=!1,this._pendingNext=!1}e.exports=r,t.inherits(r,a),r.create=function(e){var n=new this;for(var i in e=e||{})n[i]=e[i];return n},r.isStreamLike=function(e){return"function"!=typeof e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e&&!Buffer.isBuffer(e)},r.prototype.append=function(e){if(r.isStreamLike(e)){if(!(e instanceof o)){var n=o.create(e,{maxDataSize:1/0,pauseStream:this.pauseStreams});e.on("data",this._checkDataSize.bind(this)),e=n}this._handleErrors(e),this.pauseStreams&&e.pause()}return this._streams.push(e),this},r.prototype.pipe=function(e,n){return a.prototype.pipe.call(this,e,n),this.resume(),e},r.prototype._getNext=function(){if(this._currentStream=null,this._insideLoop)this._pendingNext=!0;else{this._insideLoop=!0;try{do{this._pendingNext=!1,this._realGetNext()}while(this._pendingNext)}finally{this._insideLoop=!1}}},r.prototype._realGetNext=function(){var e=this._streams.shift();void 0!==e?"function"==typeof e?e(function(e){r.isStreamLike(e)&&(e.on("data",this._checkDataSize.bind(this)),this._handleErrors(e)),this._pipeNext(e)}.bind(this)):this._pipeNext(e):this.end()},r.prototype._pipeNext=function(e){if(this._currentStream=e,r.isStreamLike(e))return e.on("end",this._getNext.bind(this)),void e.pipe(this,{end:!1});var n=e;this.write(n),this._getNext()},r.prototype._handleErrors=function(e){var n=this;e.on("error",(function(e){n._emitError(e)}))},r.prototype.write=function(e){this.emit("data",e)},r.prototype.pause=function(){this.pauseStreams&&(this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.pause&&this._currentStream.pause(),this.emit("pause"))},r.prototype.resume=function(){this._released||(this._released=!0,this.writable=!0,this._getNext()),this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.resume&&this._currentStream.resume(),this.emit("resume")},r.prototype.end=function(){this._reset(),this.emit("end")},r.prototype.destroy=function(){this._reset(),this.emit("close")},r.prototype._reset=function(){this.writable=!1,this._streams=[],this._currentStream=null},r.prototype._checkDataSize=function(){if(this._updateDataSize(),!(this.dataSize<=this.maxDataSize)){var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(e))}},r.prototype._updateDataSize=function(){this.dataSize=0;var e=this;this._streams.forEach((function(n){n.dataSize&&(e.dataSize+=n.dataSize)})),this._currentStream&&this._currentStream.dataSize&&(this.dataSize+=this._currentStream.dataSize)},r.prototype._emitError=function(e){this._reset(),this.emit("error",e)}},function(e,n,i){var t=i(58).Stream,a=i(73);function o(){this.source=null,this.dataSize=0,this.maxDataSize=1048576,this.pauseStream=!0,this._maxDataSizeExceeded=!1,this._released=!1,this._bufferedEvents=[]}e.exports=o,a.inherits(o,t),o.create=function(e,n){var i=new this;for(var t in n=n||{})i[t]=n[t];i.source=e;var a=e.emit;return e.emit=function(){return i._handleEmit(arguments),a.apply(e,arguments)},e.on("error",(function(){})),i.pauseStream&&e.pause(),i},Object.defineProperty(o.prototype,"readable",{configurable:!0,enumerable:!0,get:function(){return this.source.readable}}),o.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)},o.prototype.resume=function(){this._released||this.release(),this.source.resume()},o.prototype.pause=function(){this.source.pause()},o.prototype.release=function(){this._released=!0,this._bufferedEvents.forEach(function(e){this.emit.apply(this,e)}.bind(this)),this._bufferedEvents=[]},o.prototype.pipe=function(){var e=t.prototype.pipe.apply(this,arguments);return this.resume(),e},o.prototype._handleEmit=function(e){this._released?this.emit.apply(this,e):("data"===e[0]&&(this.dataSize+=e[1].length,this._checkIfMaxDataSizeExceeded()),this._bufferedEvents.push(e))},o.prototype._checkIfMaxDataSizeExceeded=function(){if(!(this._maxDataSizeExceeded||this.dataSize<=this.maxDataSize)){this._maxDataSizeExceeded=!0;var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(e))}}},function(e,n,i){"use strict";
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var t,a,o,r=i(429),s=i(75).extname,c=/^\s*([^;\s]*)(?:;|\s|$)/,p=/^text\//i;function u(e){if(!e||"string"!=typeof e)return!1;var n=c.exec(e),i=n&&r[n[1].toLowerCase()];return i&&i.charset?i.charset:!(!n||!p.test(n[1]))&&"UTF-8"}n.charset=u,n.charsets={lookup:u},n.contentType=function(e){if(!e||"string"!=typeof e)return!1;var i=-1===e.indexOf("/")?n.lookup(e):e;if(!i)return!1;if(-1===i.indexOf("charset")){var t=n.charset(i);t&&(i+="; charset="+t.toLowerCase())}return i},n.extension=function(e){if(!e||"string"!=typeof e)return!1;var i=c.exec(e),t=i&&n.extensions[i[1].toLowerCase()];if(!t||!t.length)return!1;return t[0]},n.extensions=Object.create(null),n.lookup=function(e){if(!e||"string"!=typeof e)return!1;var i=s("x."+e).toLowerCase().substr(1);if(!i)return!1;return n.types[i]||!1},n.types=Object.create(null),t=n.extensions,a=n.types,o=["nginx","apache",void 0,"iana"],Object.keys(r).forEach((function(e){var n=r[e],i=n.extensions;if(i&&i.length){t[e]=i;for(var s=0;s<i.length;s++){var c=i[s];if(a[c]){var p=o.indexOf(r[a[c]].source),u=o.indexOf(n.source);if("application/octet-stream"!==a[c]&&(p>u||p===u&&"application/"===a[c].substr(0,12)))continue}a[c]=e}}}))},function(e,n,i){
/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */
e.exports=i(430)},function(e){e.exports=JSON.parse('{"application/1d-interleaved-parityfec":{"source":"iana"},"application/3gpdash-qoe-report+xml":{"source":"iana","compressible":true},"application/3gpp-ims+xml":{"source":"iana","compressible":true},"application/a2l":{"source":"iana"},"application/activemessage":{"source":"iana"},"application/activity+json":{"source":"iana","compressible":true},"application/alto-costmap+json":{"source":"iana","compressible":true},"application/alto-costmapfilter+json":{"source":"iana","compressible":true},"application/alto-directory+json":{"source":"iana","compressible":true},"application/alto-endpointcost+json":{"source":"iana","compressible":true},"application/alto-endpointcostparams+json":{"source":"iana","compressible":true},"application/alto-endpointprop+json":{"source":"iana","compressible":true},"application/alto-endpointpropparams+json":{"source":"iana","compressible":true},"application/alto-error+json":{"source":"iana","compressible":true},"application/alto-networkmap+json":{"source":"iana","compressible":true},"application/alto-networkmapfilter+json":{"source":"iana","compressible":true},"application/aml":{"source":"iana"},"application/andrew-inset":{"source":"iana","extensions":["ez"]},"application/applefile":{"source":"iana"},"application/applixware":{"source":"apache","extensions":["aw"]},"application/atf":{"source":"iana"},"application/atfx":{"source":"iana"},"application/atom+xml":{"source":"iana","compressible":true,"extensions":["atom"]},"application/atomcat+xml":{"source":"iana","compressible":true,"extensions":["atomcat"]},"application/atomdeleted+xml":{"source":"iana","compressible":true,"extensions":["atomdeleted"]},"application/atomicmail":{"source":"iana"},"application/atomsvc+xml":{"source":"iana","compressible":true,"extensions":["atomsvc"]},"application/atsc-dwd+xml":{"source":"iana","compressible":true,"extensions":["dwd"]},"application/atsc-held+xml":{"source":"iana","compressible":true,"extensions":["held"]},"application/atsc-rdt+json":{"source":"iana","compressible":true},"application/atsc-rsat+xml":{"source":"iana","compressible":true,"extensions":["rsat"]},"application/atxml":{"source":"iana"},"application/auth-policy+xml":{"source":"iana","compressible":true},"application/bacnet-xdd+zip":{"source":"iana","compressible":false},"application/batch-smtp":{"source":"iana"},"application/bdoc":{"compressible":false,"extensions":["bdoc"]},"application/beep+xml":{"source":"iana","compressible":true},"application/calendar+json":{"source":"iana","compressible":true},"application/calendar+xml":{"source":"iana","compressible":true,"extensions":["xcs"]},"application/call-completion":{"source":"iana"},"application/cals-1840":{"source":"iana"},"application/cbor":{"source":"iana"},"application/cbor-seq":{"source":"iana"},"application/cccex":{"source":"iana"},"application/ccmp+xml":{"source":"iana","compressible":true},"application/ccxml+xml":{"source":"iana","compressible":true,"extensions":["ccxml"]},"application/cdfx+xml":{"source":"iana","compressible":true,"extensions":["cdfx"]},"application/cdmi-capability":{"source":"iana","extensions":["cdmia"]},"application/cdmi-container":{"source":"iana","extensions":["cdmic"]},"application/cdmi-domain":{"source":"iana","extensions":["cdmid"]},"application/cdmi-object":{"source":"iana","extensions":["cdmio"]},"application/cdmi-queue":{"source":"iana","extensions":["cdmiq"]},"application/cdni":{"source":"iana"},"application/cea":{"source":"iana"},"application/cea-2018+xml":{"source":"iana","compressible":true},"application/cellml+xml":{"source":"iana","compressible":true},"application/cfw":{"source":"iana"},"application/clue+xml":{"source":"iana","compressible":true},"application/clue_info+xml":{"source":"iana","compressible":true},"application/cms":{"source":"iana"},"application/cnrp+xml":{"source":"iana","compressible":true},"application/coap-group+json":{"source":"iana","compressible":true},"application/coap-payload":{"source":"iana"},"application/commonground":{"source":"iana"},"application/conference-info+xml":{"source":"iana","compressible":true},"application/cose":{"source":"iana"},"application/cose-key":{"source":"iana"},"application/cose-key-set":{"source":"iana"},"application/cpl+xml":{"source":"iana","compressible":true},"application/csrattrs":{"source":"iana"},"application/csta+xml":{"source":"iana","compressible":true},"application/cstadata+xml":{"source":"iana","compressible":true},"application/csvm+json":{"source":"iana","compressible":true},"application/cu-seeme":{"source":"apache","extensions":["cu"]},"application/cwt":{"source":"iana"},"application/cybercash":{"source":"iana"},"application/dart":{"compressible":true},"application/dash+xml":{"source":"iana","compressible":true,"extensions":["mpd"]},"application/dashdelta":{"source":"iana"},"application/davmount+xml":{"source":"iana","compressible":true,"extensions":["davmount"]},"application/dca-rft":{"source":"iana"},"application/dcd":{"source":"iana"},"application/dec-dx":{"source":"iana"},"application/dialog-info+xml":{"source":"iana","compressible":true},"application/dicom":{"source":"iana"},"application/dicom+json":{"source":"iana","compressible":true},"application/dicom+xml":{"source":"iana","compressible":true},"application/dii":{"source":"iana"},"application/dit":{"source":"iana"},"application/dns":{"source":"iana"},"application/dns+json":{"source":"iana","compressible":true},"application/dns-message":{"source":"iana"},"application/docbook+xml":{"source":"apache","compressible":true,"extensions":["dbk"]},"application/dskpp+xml":{"source":"iana","compressible":true},"application/dssc+der":{"source":"iana","extensions":["dssc"]},"application/dssc+xml":{"source":"iana","compressible":true,"extensions":["xdssc"]},"application/dvcs":{"source":"iana"},"application/ecmascript":{"source":"iana","compressible":true,"extensions":["ecma","es"]},"application/edi-consent":{"source":"iana"},"application/edi-x12":{"source":"iana","compressible":false},"application/edifact":{"source":"iana","compressible":false},"application/efi":{"source":"iana"},"application/emergencycalldata.comment+xml":{"source":"iana","compressible":true},"application/emergencycalldata.control+xml":{"source":"iana","compressible":true},"application/emergencycalldata.deviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.ecall.msd":{"source":"iana"},"application/emergencycalldata.providerinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.serviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.subscriberinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.veds+xml":{"source":"iana","compressible":true},"application/emma+xml":{"source":"iana","compressible":true,"extensions":["emma"]},"application/emotionml+xml":{"source":"iana","compressible":true,"extensions":["emotionml"]},"application/encaprtp":{"source":"iana"},"application/epp+xml":{"source":"iana","compressible":true},"application/epub+zip":{"source":"iana","compressible":false,"extensions":["epub"]},"application/eshop":{"source":"iana"},"application/exi":{"source":"iana","extensions":["exi"]},"application/expect-ct-report+json":{"source":"iana","compressible":true},"application/fastinfoset":{"source":"iana"},"application/fastsoap":{"source":"iana"},"application/fdt+xml":{"source":"iana","compressible":true,"extensions":["fdt"]},"application/fhir+json":{"source":"iana","compressible":true},"application/fhir+xml":{"source":"iana","compressible":true},"application/fido.trusted-apps+json":{"compressible":true},"application/fits":{"source":"iana"},"application/flexfec":{"source":"iana"},"application/font-sfnt":{"source":"iana"},"application/font-tdpfr":{"source":"iana","extensions":["pfr"]},"application/font-woff":{"source":"iana","compressible":false},"application/framework-attributes+xml":{"source":"iana","compressible":true},"application/geo+json":{"source":"iana","compressible":true,"extensions":["geojson"]},"application/geo+json-seq":{"source":"iana"},"application/geopackage+sqlite3":{"source":"iana"},"application/geoxacml+xml":{"source":"iana","compressible":true},"application/gltf-buffer":{"source":"iana"},"application/gml+xml":{"source":"iana","compressible":true,"extensions":["gml"]},"application/gpx+xml":{"source":"apache","compressible":true,"extensions":["gpx"]},"application/gxf":{"source":"apache","extensions":["gxf"]},"application/gzip":{"source":"iana","compressible":false,"extensions":["gz"]},"application/h224":{"source":"iana"},"application/held+xml":{"source":"iana","compressible":true},"application/hjson":{"extensions":["hjson"]},"application/http":{"source":"iana"},"application/hyperstudio":{"source":"iana","extensions":["stk"]},"application/ibe-key-request+xml":{"source":"iana","compressible":true},"application/ibe-pkg-reply+xml":{"source":"iana","compressible":true},"application/ibe-pp-data":{"source":"iana"},"application/iges":{"source":"iana"},"application/im-iscomposing+xml":{"source":"iana","compressible":true},"application/index":{"source":"iana"},"application/index.cmd":{"source":"iana"},"application/index.obj":{"source":"iana"},"application/index.response":{"source":"iana"},"application/index.vnd":{"source":"iana"},"application/inkml+xml":{"source":"iana","compressible":true,"extensions":["ink","inkml"]},"application/iotp":{"source":"iana"},"application/ipfix":{"source":"iana","extensions":["ipfix"]},"application/ipp":{"source":"iana"},"application/isup":{"source":"iana"},"application/its+xml":{"source":"iana","compressible":true,"extensions":["its"]},"application/java-archive":{"source":"apache","compressible":false,"extensions":["jar","war","ear"]},"application/java-serialized-object":{"source":"apache","compressible":false,"extensions":["ser"]},"application/java-vm":{"source":"apache","compressible":false,"extensions":["class"]},"application/javascript":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["js","mjs"]},"application/jf2feed+json":{"source":"iana","compressible":true},"application/jose":{"source":"iana"},"application/jose+json":{"source":"iana","compressible":true},"application/jrd+json":{"source":"iana","compressible":true},"application/json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["json","map"]},"application/json-patch+json":{"source":"iana","compressible":true},"application/json-seq":{"source":"iana"},"application/json5":{"extensions":["json5"]},"application/jsonml+json":{"source":"apache","compressible":true,"extensions":["jsonml"]},"application/jwk+json":{"source":"iana","compressible":true},"application/jwk-set+json":{"source":"iana","compressible":true},"application/jwt":{"source":"iana"},"application/kpml-request+xml":{"source":"iana","compressible":true},"application/kpml-response+xml":{"source":"iana","compressible":true},"application/ld+json":{"source":"iana","compressible":true,"extensions":["jsonld"]},"application/lgr+xml":{"source":"iana","compressible":true,"extensions":["lgr"]},"application/link-format":{"source":"iana"},"application/load-control+xml":{"source":"iana","compressible":true},"application/lost+xml":{"source":"iana","compressible":true,"extensions":["lostxml"]},"application/lostsync+xml":{"source":"iana","compressible":true},"application/lxf":{"source":"iana"},"application/mac-binhex40":{"source":"iana","extensions":["hqx"]},"application/mac-compactpro":{"source":"apache","extensions":["cpt"]},"application/macwriteii":{"source":"iana"},"application/mads+xml":{"source":"iana","compressible":true,"extensions":["mads"]},"application/manifest+json":{"charset":"UTF-8","compressible":true,"extensions":["webmanifest"]},"application/marc":{"source":"iana","extensions":["mrc"]},"application/marcxml+xml":{"source":"iana","compressible":true,"extensions":["mrcx"]},"application/mathematica":{"source":"iana","extensions":["ma","nb","mb"]},"application/mathml+xml":{"source":"iana","compressible":true,"extensions":["mathml"]},"application/mathml-content+xml":{"source":"iana","compressible":true},"application/mathml-presentation+xml":{"source":"iana","compressible":true},"application/mbms-associated-procedure-description+xml":{"source":"iana","compressible":true},"application/mbms-deregister+xml":{"source":"iana","compressible":true},"application/mbms-envelope+xml":{"source":"iana","compressible":true},"application/mbms-msk+xml":{"source":"iana","compressible":true},"application/mbms-msk-response+xml":{"source":"iana","compressible":true},"application/mbms-protection-description+xml":{"source":"iana","compressible":true},"application/mbms-reception-report+xml":{"source":"iana","compressible":true},"application/mbms-register+xml":{"source":"iana","compressible":true},"application/mbms-register-response+xml":{"source":"iana","compressible":true},"application/mbms-schedule+xml":{"source":"iana","compressible":true},"application/mbms-user-service-description+xml":{"source":"iana","compressible":true},"application/mbox":{"source":"iana","extensions":["mbox"]},"application/media-policy-dataset+xml":{"source":"iana","compressible":true},"application/media_control+xml":{"source":"iana","compressible":true},"application/mediaservercontrol+xml":{"source":"iana","compressible":true,"extensions":["mscml"]},"application/merge-patch+json":{"source":"iana","compressible":true},"application/metalink+xml":{"source":"apache","compressible":true,"extensions":["metalink"]},"application/metalink4+xml":{"source":"iana","compressible":true,"extensions":["meta4"]},"application/mets+xml":{"source":"iana","compressible":true,"extensions":["mets"]},"application/mf4":{"source":"iana"},"application/mikey":{"source":"iana"},"application/mipc":{"source":"iana"},"application/mmt-aei+xml":{"source":"iana","compressible":true,"extensions":["maei"]},"application/mmt-usd+xml":{"source":"iana","compressible":true,"extensions":["musd"]},"application/mods+xml":{"source":"iana","compressible":true,"extensions":["mods"]},"application/moss-keys":{"source":"iana"},"application/moss-signature":{"source":"iana"},"application/mosskey-data":{"source":"iana"},"application/mosskey-request":{"source":"iana"},"application/mp21":{"source":"iana","extensions":["m21","mp21"]},"application/mp4":{"source":"iana","extensions":["mp4s","m4p"]},"application/mpeg4-generic":{"source":"iana"},"application/mpeg4-iod":{"source":"iana"},"application/mpeg4-iod-xmt":{"source":"iana"},"application/mrb-consumer+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/mrb-publish+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/msc-ivr+xml":{"source":"iana","compressible":true},"application/msc-mixer+xml":{"source":"iana","compressible":true},"application/msword":{"source":"iana","compressible":false,"extensions":["doc","dot"]},"application/mud+json":{"source":"iana","compressible":true},"application/multipart-core":{"source":"iana"},"application/mxf":{"source":"iana","extensions":["mxf"]},"application/n-quads":{"source":"iana","extensions":["nq"]},"application/n-triples":{"source":"iana","extensions":["nt"]},"application/nasdata":{"source":"iana"},"application/news-checkgroups":{"source":"iana"},"application/news-groupinfo":{"source":"iana"},"application/news-transmission":{"source":"iana"},"application/nlsml+xml":{"source":"iana","compressible":true},"application/node":{"source":"iana"},"application/nss":{"source":"iana"},"application/ocsp-request":{"source":"iana"},"application/ocsp-response":{"source":"iana"},"application/octet-stream":{"source":"iana","compressible":false,"extensions":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{"source":"iana","extensions":["oda"]},"application/odm+xml":{"source":"iana","compressible":true},"application/odx":{"source":"iana"},"application/oebps-package+xml":{"source":"iana","compressible":true,"extensions":["opf"]},"application/ogg":{"source":"iana","compressible":false,"extensions":["ogx"]},"application/omdoc+xml":{"source":"apache","compressible":true,"extensions":["omdoc"]},"application/onenote":{"source":"apache","extensions":["onetoc","onetoc2","onetmp","onepkg"]},"application/oscore":{"source":"iana"},"application/oxps":{"source":"iana","extensions":["oxps"]},"application/p2p-overlay+xml":{"source":"iana","compressible":true,"extensions":["relo"]},"application/parityfec":{"source":"iana"},"application/passport":{"source":"iana"},"application/patch-ops-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/pdf":{"source":"iana","compressible":false,"extensions":["pdf"]},"application/pdx":{"source":"iana"},"application/pem-certificate-chain":{"source":"iana"},"application/pgp-encrypted":{"source":"iana","compressible":false,"extensions":["pgp"]},"application/pgp-keys":{"source":"iana"},"application/pgp-signature":{"source":"iana","extensions":["asc","sig"]},"application/pics-rules":{"source":"apache","extensions":["prf"]},"application/pidf+xml":{"source":"iana","compressible":true},"application/pidf-diff+xml":{"source":"iana","compressible":true},"application/pkcs10":{"source":"iana","extensions":["p10"]},"application/pkcs12":{"source":"iana"},"application/pkcs7-mime":{"source":"iana","extensions":["p7m","p7c"]},"application/pkcs7-signature":{"source":"iana","extensions":["p7s"]},"application/pkcs8":{"source":"iana","extensions":["p8"]},"application/pkcs8-encrypted":{"source":"iana"},"application/pkix-attr-cert":{"source":"iana","extensions":["ac"]},"application/pkix-cert":{"source":"iana","extensions":["cer"]},"application/pkix-crl":{"source":"iana","extensions":["crl"]},"application/pkix-pkipath":{"source":"iana","extensions":["pkipath"]},"application/pkixcmp":{"source":"iana","extensions":["pki"]},"application/pls+xml":{"source":"iana","compressible":true,"extensions":["pls"]},"application/poc-settings+xml":{"source":"iana","compressible":true},"application/postscript":{"source":"iana","compressible":true,"extensions":["ai","eps","ps"]},"application/ppsp-tracker+json":{"source":"iana","compressible":true},"application/problem+json":{"source":"iana","compressible":true},"application/problem+xml":{"source":"iana","compressible":true},"application/provenance+xml":{"source":"iana","compressible":true,"extensions":["provx"]},"application/prs.alvestrand.titrax-sheet":{"source":"iana"},"application/prs.cww":{"source":"iana","extensions":["cww"]},"application/prs.hpub+zip":{"source":"iana","compressible":false},"application/prs.nprend":{"source":"iana"},"application/prs.plucker":{"source":"iana"},"application/prs.rdf-xml-crypt":{"source":"iana"},"application/prs.xsf+xml":{"source":"iana","compressible":true},"application/pskc+xml":{"source":"iana","compressible":true,"extensions":["pskcxml"]},"application/qsig":{"source":"iana"},"application/raml+yaml":{"compressible":true,"extensions":["raml"]},"application/raptorfec":{"source":"iana"},"application/rdap+json":{"source":"iana","compressible":true},"application/rdf+xml":{"source":"iana","compressible":true,"extensions":["rdf","owl"]},"application/reginfo+xml":{"source":"iana","compressible":true,"extensions":["rif"]},"application/relax-ng-compact-syntax":{"source":"iana","extensions":["rnc"]},"application/remote-printing":{"source":"iana"},"application/reputon+json":{"source":"iana","compressible":true},"application/resource-lists+xml":{"source":"iana","compressible":true,"extensions":["rl"]},"application/resource-lists-diff+xml":{"source":"iana","compressible":true,"extensions":["rld"]},"application/rfc+xml":{"source":"iana","compressible":true},"application/riscos":{"source":"iana"},"application/rlmi+xml":{"source":"iana","compressible":true},"application/rls-services+xml":{"source":"iana","compressible":true,"extensions":["rs"]},"application/route-apd+xml":{"source":"iana","compressible":true,"extensions":["rapd"]},"application/route-s-tsid+xml":{"source":"iana","compressible":true,"extensions":["sls"]},"application/route-usd+xml":{"source":"iana","compressible":true,"extensions":["rusd"]},"application/rpki-ghostbusters":{"source":"iana","extensions":["gbr"]},"application/rpki-manifest":{"source":"iana","extensions":["mft"]},"application/rpki-publication":{"source":"iana"},"application/rpki-roa":{"source":"iana","extensions":["roa"]},"application/rpki-updown":{"source":"iana"},"application/rsd+xml":{"source":"apache","compressible":true,"extensions":["rsd"]},"application/rss+xml":{"source":"apache","compressible":true,"extensions":["rss"]},"application/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"application/rtploopback":{"source":"iana"},"application/rtx":{"source":"iana"},"application/samlassertion+xml":{"source":"iana","compressible":true},"application/samlmetadata+xml":{"source":"iana","compressible":true},"application/sbml+xml":{"source":"iana","compressible":true,"extensions":["sbml"]},"application/scaip+xml":{"source":"iana","compressible":true},"application/scim+json":{"source":"iana","compressible":true},"application/scvp-cv-request":{"source":"iana","extensions":["scq"]},"application/scvp-cv-response":{"source":"iana","extensions":["scs"]},"application/scvp-vp-request":{"source":"iana","extensions":["spq"]},"application/scvp-vp-response":{"source":"iana","extensions":["spp"]},"application/sdp":{"source":"iana","extensions":["sdp"]},"application/secevent+jwt":{"source":"iana"},"application/senml+cbor":{"source":"iana"},"application/senml+json":{"source":"iana","compressible":true},"application/senml+xml":{"source":"iana","compressible":true,"extensions":["senmlx"]},"application/senml-exi":{"source":"iana"},"application/sensml+cbor":{"source":"iana"},"application/sensml+json":{"source":"iana","compressible":true},"application/sensml+xml":{"source":"iana","compressible":true,"extensions":["sensmlx"]},"application/sensml-exi":{"source":"iana"},"application/sep+xml":{"source":"iana","compressible":true},"application/sep-exi":{"source":"iana"},"application/session-info":{"source":"iana"},"application/set-payment":{"source":"iana"},"application/set-payment-initiation":{"source":"iana","extensions":["setpay"]},"application/set-registration":{"source":"iana"},"application/set-registration-initiation":{"source":"iana","extensions":["setreg"]},"application/sgml":{"source":"iana"},"application/sgml-open-catalog":{"source":"iana"},"application/shf+xml":{"source":"iana","compressible":true,"extensions":["shf"]},"application/sieve":{"source":"iana","extensions":["siv","sieve"]},"application/simple-filter+xml":{"source":"iana","compressible":true},"application/simple-message-summary":{"source":"iana"},"application/simplesymbolcontainer":{"source":"iana"},"application/sipc":{"source":"iana"},"application/slate":{"source":"iana"},"application/smil":{"source":"iana"},"application/smil+xml":{"source":"iana","compressible":true,"extensions":["smi","smil"]},"application/smpte336m":{"source":"iana"},"application/soap+fastinfoset":{"source":"iana"},"application/soap+xml":{"source":"iana","compressible":true},"application/sparql-query":{"source":"iana","extensions":["rq"]},"application/sparql-results+xml":{"source":"iana","compressible":true,"extensions":["srx"]},"application/spirits-event+xml":{"source":"iana","compressible":true},"application/sql":{"source":"iana"},"application/srgs":{"source":"iana","extensions":["gram"]},"application/srgs+xml":{"source":"iana","compressible":true,"extensions":["grxml"]},"application/sru+xml":{"source":"iana","compressible":true,"extensions":["sru"]},"application/ssdl+xml":{"source":"apache","compressible":true,"extensions":["ssdl"]},"application/ssml+xml":{"source":"iana","compressible":true,"extensions":["ssml"]},"application/stix+json":{"source":"iana","compressible":true},"application/swid+xml":{"source":"iana","compressible":true,"extensions":["swidtag"]},"application/tamp-apex-update":{"source":"iana"},"application/tamp-apex-update-confirm":{"source":"iana"},"application/tamp-community-update":{"source":"iana"},"application/tamp-community-update-confirm":{"source":"iana"},"application/tamp-error":{"source":"iana"},"application/tamp-sequence-adjust":{"source":"iana"},"application/tamp-sequence-adjust-confirm":{"source":"iana"},"application/tamp-status-query":{"source":"iana"},"application/tamp-status-response":{"source":"iana"},"application/tamp-update":{"source":"iana"},"application/tamp-update-confirm":{"source":"iana"},"application/tar":{"compressible":true},"application/taxii+json":{"source":"iana","compressible":true},"application/tei+xml":{"source":"iana","compressible":true,"extensions":["tei","teicorpus"]},"application/tetra_isi":{"source":"iana"},"application/thraud+xml":{"source":"iana","compressible":true,"extensions":["tfi"]},"application/timestamp-query":{"source":"iana"},"application/timestamp-reply":{"source":"iana"},"application/timestamped-data":{"source":"iana","extensions":["tsd"]},"application/tlsrpt+gzip":{"source":"iana"},"application/tlsrpt+json":{"source":"iana","compressible":true},"application/tnauthlist":{"source":"iana"},"application/toml":{"compressible":true,"extensions":["toml"]},"application/trickle-ice-sdpfrag":{"source":"iana"},"application/trig":{"source":"iana"},"application/ttml+xml":{"source":"iana","compressible":true,"extensions":["ttml"]},"application/tve-trigger":{"source":"iana"},"application/tzif":{"source":"iana"},"application/tzif-leap":{"source":"iana"},"application/ulpfec":{"source":"iana"},"application/urc-grpsheet+xml":{"source":"iana","compressible":true},"application/urc-ressheet+xml":{"source":"iana","compressible":true,"extensions":["rsheet"]},"application/urc-targetdesc+xml":{"source":"iana","compressible":true},"application/urc-uisocketdesc+xml":{"source":"iana","compressible":true},"application/vcard+json":{"source":"iana","compressible":true},"application/vcard+xml":{"source":"iana","compressible":true},"application/vemmi":{"source":"iana"},"application/vividence.scriptfile":{"source":"apache"},"application/vnd.1000minds.decision-model+xml":{"source":"iana","compressible":true,"extensions":["1km"]},"application/vnd.3gpp-prose+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-prose-pc3ch+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-v2x-local-service-information":{"source":"iana"},"application/vnd.3gpp.access-transfer-events+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.bsf+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gmop+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mc-signalling-ear":{"source":"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-payload":{"source":"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-signalling":{"source":"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-floor-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-signed+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mid-call+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.pic-bw-large":{"source":"iana","extensions":["plb"]},"application/vnd.3gpp.pic-bw-small":{"source":"iana","extensions":["psb"]},"application/vnd.3gpp.pic-bw-var":{"source":"iana","extensions":["pvb"]},"application/vnd.3gpp.sms":{"source":"iana"},"application/vnd.3gpp.sms+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-ext+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.state-and-event-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ussd+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.bcmcsinfo+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.sms":{"source":"iana"},"application/vnd.3gpp2.tcap":{"source":"iana","extensions":["tcap"]},"application/vnd.3lightssoftware.imagescal":{"source":"iana"},"application/vnd.3m.post-it-notes":{"source":"iana","extensions":["pwn"]},"application/vnd.accpac.simply.aso":{"source":"iana","extensions":["aso"]},"application/vnd.accpac.simply.imp":{"source":"iana","extensions":["imp"]},"application/vnd.acucobol":{"source":"iana","extensions":["acu"]},"application/vnd.acucorp":{"source":"iana","extensions":["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{"source":"apache","compressible":false,"extensions":["air"]},"application/vnd.adobe.flash.movie":{"source":"iana"},"application/vnd.adobe.formscentral.fcdt":{"source":"iana","extensions":["fcdt"]},"application/vnd.adobe.fxp":{"source":"iana","extensions":["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{"source":"iana"},"application/vnd.adobe.xdp+xml":{"source":"iana","compressible":true,"extensions":["xdp"]},"application/vnd.adobe.xfdf":{"source":"iana","extensions":["xfdf"]},"application/vnd.aether.imp":{"source":"iana"},"application/vnd.afpc.afplinedata":{"source":"iana"},"application/vnd.afpc.afplinedata-pagedef":{"source":"iana"},"application/vnd.afpc.foca-charset":{"source":"iana"},"application/vnd.afpc.foca-codedfont":{"source":"iana"},"application/vnd.afpc.foca-codepage":{"source":"iana"},"application/vnd.afpc.modca":{"source":"iana"},"application/vnd.afpc.modca-formdef":{"source":"iana"},"application/vnd.afpc.modca-mediummap":{"source":"iana"},"application/vnd.afpc.modca-objectcontainer":{"source":"iana"},"application/vnd.afpc.modca-overlay":{"source":"iana"},"application/vnd.afpc.modca-pagesegment":{"source":"iana"},"application/vnd.ah-barcode":{"source":"iana"},"application/vnd.ahead.space":{"source":"iana","extensions":["ahead"]},"application/vnd.airzip.filesecure.azf":{"source":"iana","extensions":["azf"]},"application/vnd.airzip.filesecure.azs":{"source":"iana","extensions":["azs"]},"application/vnd.amadeus+json":{"source":"iana","compressible":true},"application/vnd.amazon.ebook":{"source":"apache","extensions":["azw"]},"application/vnd.amazon.mobi8-ebook":{"source":"iana"},"application/vnd.americandynamics.acc":{"source":"iana","extensions":["acc"]},"application/vnd.amiga.ami":{"source":"iana","extensions":["ami"]},"application/vnd.amundsen.maze+xml":{"source":"iana","compressible":true},"application/vnd.android.ota":{"source":"iana"},"application/vnd.android.package-archive":{"source":"apache","compressible":false,"extensions":["apk"]},"application/vnd.anki":{"source":"iana"},"application/vnd.anser-web-certificate-issue-initiation":{"source":"iana","extensions":["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{"source":"apache","extensions":["fti"]},"application/vnd.antix.game-component":{"source":"iana","extensions":["atx"]},"application/vnd.apache.thrift.binary":{"source":"iana"},"application/vnd.apache.thrift.compact":{"source":"iana"},"application/vnd.apache.thrift.json":{"source":"iana"},"application/vnd.api+json":{"source":"iana","compressible":true},"application/vnd.aplextor.warrp+json":{"source":"iana","compressible":true},"application/vnd.apothekende.reservation+json":{"source":"iana","compressible":true},"application/vnd.apple.installer+xml":{"source":"iana","compressible":true,"extensions":["mpkg"]},"application/vnd.apple.keynote":{"source":"iana","extensions":["keynote"]},"application/vnd.apple.mpegurl":{"source":"iana","extensions":["m3u8"]},"application/vnd.apple.numbers":{"source":"iana","extensions":["numbers"]},"application/vnd.apple.pages":{"source":"iana","extensions":["pages"]},"application/vnd.apple.pkpass":{"compressible":false,"extensions":["pkpass"]},"application/vnd.arastra.swi":{"source":"iana"},"application/vnd.aristanetworks.swi":{"source":"iana","extensions":["swi"]},"application/vnd.artisan+json":{"source":"iana","compressible":true},"application/vnd.artsquare":{"source":"iana"},"application/vnd.astraea-software.iota":{"source":"iana","extensions":["iota"]},"application/vnd.audiograph":{"source":"iana","extensions":["aep"]},"application/vnd.autopackage":{"source":"iana"},"application/vnd.avalon+json":{"source":"iana","compressible":true},"application/vnd.avistar+xml":{"source":"iana","compressible":true},"application/vnd.balsamiq.bmml+xml":{"source":"iana","compressible":true,"extensions":["bmml"]},"application/vnd.balsamiq.bmpr":{"source":"iana"},"application/vnd.banana-accounting":{"source":"iana"},"application/vnd.bbf.usp.error":{"source":"iana"},"application/vnd.bbf.usp.msg":{"source":"iana"},"application/vnd.bbf.usp.msg+json":{"source":"iana","compressible":true},"application/vnd.bekitzur-stech+json":{"source":"iana","compressible":true},"application/vnd.bint.med-content":{"source":"iana"},"application/vnd.biopax.rdf+xml":{"source":"iana","compressible":true},"application/vnd.blink-idb-value-wrapper":{"source":"iana"},"application/vnd.blueice.multipass":{"source":"iana","extensions":["mpm"]},"application/vnd.bluetooth.ep.oob":{"source":"iana"},"application/vnd.bluetooth.le.oob":{"source":"iana"},"application/vnd.bmi":{"source":"iana","extensions":["bmi"]},"application/vnd.bpf":{"source":"iana"},"application/vnd.bpf3":{"source":"iana"},"application/vnd.businessobjects":{"source":"iana","extensions":["rep"]},"application/vnd.byu.uapi+json":{"source":"iana","compressible":true},"application/vnd.cab-jscript":{"source":"iana"},"application/vnd.canon-cpdl":{"source":"iana"},"application/vnd.canon-lips":{"source":"iana"},"application/vnd.capasystems-pg+json":{"source":"iana","compressible":true},"application/vnd.cendio.thinlinc.clientconf":{"source":"iana"},"application/vnd.century-systems.tcp_stream":{"source":"iana"},"application/vnd.chemdraw+xml":{"source":"iana","compressible":true,"extensions":["cdxml"]},"application/vnd.chess-pgn":{"source":"iana"},"application/vnd.chipnuts.karaoke-mmd":{"source":"iana","extensions":["mmd"]},"application/vnd.ciedi":{"source":"iana"},"application/vnd.cinderella":{"source":"iana","extensions":["cdy"]},"application/vnd.cirpack.isdn-ext":{"source":"iana"},"application/vnd.citationstyles.style+xml":{"source":"iana","compressible":true,"extensions":["csl"]},"application/vnd.claymore":{"source":"iana","extensions":["cla"]},"application/vnd.cloanto.rp9":{"source":"iana","extensions":["rp9"]},"application/vnd.clonk.c4group":{"source":"iana","extensions":["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{"source":"iana","extensions":["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{"source":"iana","extensions":["c11amz"]},"application/vnd.coffeescript":{"source":"iana"},"application/vnd.collabio.xodocuments.document":{"source":"iana"},"application/vnd.collabio.xodocuments.document-template":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation-template":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{"source":"iana"},"application/vnd.collection+json":{"source":"iana","compressible":true},"application/vnd.collection.doc+json":{"source":"iana","compressible":true},"application/vnd.collection.next+json":{"source":"iana","compressible":true},"application/vnd.comicbook+zip":{"source":"iana","compressible":false},"application/vnd.comicbook-rar":{"source":"iana"},"application/vnd.commerce-battelle":{"source":"iana"},"application/vnd.commonspace":{"source":"iana","extensions":["csp"]},"application/vnd.contact.cmsg":{"source":"iana","extensions":["cdbcmsg"]},"application/vnd.coreos.ignition+json":{"source":"iana","compressible":true},"application/vnd.cosmocaller":{"source":"iana","extensions":["cmc"]},"application/vnd.crick.clicker":{"source":"iana","extensions":["clkx"]},"application/vnd.crick.clicker.keyboard":{"source":"iana","extensions":["clkk"]},"application/vnd.crick.clicker.palette":{"source":"iana","extensions":["clkp"]},"application/vnd.crick.clicker.template":{"source":"iana","extensions":["clkt"]},"application/vnd.crick.clicker.wordbank":{"source":"iana","extensions":["clkw"]},"application/vnd.criticaltools.wbs+xml":{"source":"iana","compressible":true,"extensions":["wbs"]},"application/vnd.cryptii.pipe+json":{"source":"iana","compressible":true},"application/vnd.crypto-shade-file":{"source":"iana"},"application/vnd.ctc-posml":{"source":"iana","extensions":["pml"]},"application/vnd.ctct.ws+xml":{"source":"iana","compressible":true},"application/vnd.cups-pdf":{"source":"iana"},"application/vnd.cups-postscript":{"source":"iana"},"application/vnd.cups-ppd":{"source":"iana","extensions":["ppd"]},"application/vnd.cups-raster":{"source":"iana"},"application/vnd.cups-raw":{"source":"iana"},"application/vnd.curl":{"source":"iana"},"application/vnd.curl.car":{"source":"apache","extensions":["car"]},"application/vnd.curl.pcurl":{"source":"apache","extensions":["pcurl"]},"application/vnd.cyan.dean.root+xml":{"source":"iana","compressible":true},"application/vnd.cybank":{"source":"iana"},"application/vnd.d2l.coursepackage1p0+zip":{"source":"iana","compressible":false},"application/vnd.dart":{"source":"iana","compressible":true,"extensions":["dart"]},"application/vnd.data-vision.rdz":{"source":"iana","extensions":["rdz"]},"application/vnd.datapackage+json":{"source":"iana","compressible":true},"application/vnd.dataresource+json":{"source":"iana","compressible":true},"application/vnd.debian.binary-package":{"source":"iana"},"application/vnd.dece.data":{"source":"iana","extensions":["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{"source":"iana","compressible":true,"extensions":["uvt","uvvt"]},"application/vnd.dece.unspecified":{"source":"iana","extensions":["uvx","uvvx"]},"application/vnd.dece.zip":{"source":"iana","extensions":["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{"source":"iana","extensions":["fe_launch"]},"application/vnd.desmume.movie":{"source":"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{"source":"iana"},"application/vnd.dm.delegation+xml":{"source":"iana","compressible":true},"application/vnd.dna":{"source":"iana","extensions":["dna"]},"application/vnd.document+json":{"source":"iana","compressible":true},"application/vnd.dolby.mlp":{"source":"apache","extensions":["mlp"]},"application/vnd.dolby.mobile.1":{"source":"iana"},"application/vnd.dolby.mobile.2":{"source":"iana"},"application/vnd.doremir.scorecloud-binary-document":{"source":"iana"},"application/vnd.dpgraph":{"source":"iana","extensions":["dpg"]},"application/vnd.dreamfactory":{"source":"iana","extensions":["dfac"]},"application/vnd.drive+json":{"source":"iana","compressible":true},"application/vnd.ds-keypoint":{"source":"apache","extensions":["kpxx"]},"application/vnd.dtg.local":{"source":"iana"},"application/vnd.dtg.local.flash":{"source":"iana"},"application/vnd.dtg.local.html":{"source":"iana"},"application/vnd.dvb.ait":{"source":"iana","extensions":["ait"]},"application/vnd.dvb.dvbj":{"source":"iana"},"application/vnd.dvb.esgcontainer":{"source":"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess2":{"source":"iana"},"application/vnd.dvb.ipdcesgpdd":{"source":"iana"},"application/vnd.dvb.ipdcroaming":{"source":"iana"},"application/vnd.dvb.iptv.alfec-base":{"source":"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{"source":"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-container+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-generic+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-msglist+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-request+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-response+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-init+xml":{"source":"iana","compressible":true},"application/vnd.dvb.pfr":{"source":"iana"},"application/vnd.dvb.service":{"source":"iana","extensions":["svc"]},"application/vnd.dxr":{"source":"iana"},"application/vnd.dynageo":{"source":"iana","extensions":["geo"]},"application/vnd.dzr":{"source":"iana"},"application/vnd.easykaraoke.cdgdownload":{"source":"iana"},"application/vnd.ecdis-update":{"source":"iana"},"application/vnd.ecip.rlp":{"source":"iana"},"application/vnd.ecowin.chart":{"source":"iana","extensions":["mag"]},"application/vnd.ecowin.filerequest":{"source":"iana"},"application/vnd.ecowin.fileupdate":{"source":"iana"},"application/vnd.ecowin.series":{"source":"iana"},"application/vnd.ecowin.seriesrequest":{"source":"iana"},"application/vnd.ecowin.seriesupdate":{"source":"iana"},"application/vnd.efi.img":{"source":"iana"},"application/vnd.efi.iso":{"source":"iana"},"application/vnd.emclient.accessrequest+xml":{"source":"iana","compressible":true},"application/vnd.enliven":{"source":"iana","extensions":["nml"]},"application/vnd.enphase.envoy":{"source":"iana"},"application/vnd.eprints.data+xml":{"source":"iana","compressible":true},"application/vnd.epson.esf":{"source":"iana","extensions":["esf"]},"application/vnd.epson.msf":{"source":"iana","extensions":["msf"]},"application/vnd.epson.quickanime":{"source":"iana","extensions":["qam"]},"application/vnd.epson.salt":{"source":"iana","extensions":["slt"]},"application/vnd.epson.ssf":{"source":"iana","extensions":["ssf"]},"application/vnd.ericsson.quickcall":{"source":"iana"},"application/vnd.espass-espass+zip":{"source":"iana","compressible":false},"application/vnd.eszigno3+xml":{"source":"iana","compressible":true,"extensions":["es3","et3"]},"application/vnd.etsi.aoc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.asic-e+zip":{"source":"iana","compressible":false},"application/vnd.etsi.asic-s+zip":{"source":"iana","compressible":false},"application/vnd.etsi.cug+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvcommand+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-bc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-cod+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-npvr+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvservice+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsync+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvueprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mcid+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mheg5":{"source":"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{"source":"iana","compressible":true},"application/vnd.etsi.pstn+xml":{"source":"iana","compressible":true},"application/vnd.etsi.sci+xml":{"source":"iana","compressible":true},"application/vnd.etsi.simservs+xml":{"source":"iana","compressible":true},"application/vnd.etsi.timestamp-token":{"source":"iana"},"application/vnd.etsi.tsl+xml":{"source":"iana","compressible":true},"application/vnd.etsi.tsl.der":{"source":"iana"},"application/vnd.eudora.data":{"source":"iana"},"application/vnd.evolv.ecig.profile":{"source":"iana"},"application/vnd.evolv.ecig.settings":{"source":"iana"},"application/vnd.evolv.ecig.theme":{"source":"iana"},"application/vnd.exstream-empower+zip":{"source":"iana","compressible":false},"application/vnd.exstream-package":{"source":"iana"},"application/vnd.ezpix-album":{"source":"iana","extensions":["ez2"]},"application/vnd.ezpix-package":{"source":"iana","extensions":["ez3"]},"application/vnd.f-secure.mobile":{"source":"iana"},"application/vnd.fastcopy-disk-image":{"source":"iana"},"application/vnd.fdf":{"source":"iana","extensions":["fdf"]},"application/vnd.fdsn.mseed":{"source":"iana","extensions":["mseed"]},"application/vnd.fdsn.seed":{"source":"iana","extensions":["seed","dataless"]},"application/vnd.ffsns":{"source":"iana"},"application/vnd.ficlab.flb+zip":{"source":"iana","compressible":false},"application/vnd.filmit.zfc":{"source":"iana"},"application/vnd.fints":{"source":"iana"},"application/vnd.firemonkeys.cloudcell":{"source":"iana"},"application/vnd.flographit":{"source":"iana","extensions":["gph"]},"application/vnd.fluxtime.clip":{"source":"iana","extensions":["ftc"]},"application/vnd.font-fontforge-sfd":{"source":"iana"},"application/vnd.framemaker":{"source":"iana","extensions":["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{"source":"iana","extensions":["fnc"]},"application/vnd.frogans.ltf":{"source":"iana","extensions":["ltf"]},"application/vnd.fsc.weblaunch":{"source":"iana","extensions":["fsc"]},"application/vnd.fujitsu.oasys":{"source":"iana","extensions":["oas"]},"application/vnd.fujitsu.oasys2":{"source":"iana","extensions":["oa2"]},"application/vnd.fujitsu.oasys3":{"source":"iana","extensions":["oa3"]},"application/vnd.fujitsu.oasysgp":{"source":"iana","extensions":["fg5"]},"application/vnd.fujitsu.oasysprs":{"source":"iana","extensions":["bh2"]},"application/vnd.fujixerox.art-ex":{"source":"iana"},"application/vnd.fujixerox.art4":{"source":"iana"},"application/vnd.fujixerox.ddd":{"source":"iana","extensions":["ddd"]},"application/vnd.fujixerox.docuworks":{"source":"iana","extensions":["xdw"]},"application/vnd.fujixerox.docuworks.binder":{"source":"iana","extensions":["xbd"]},"application/vnd.fujixerox.docuworks.container":{"source":"iana"},"application/vnd.fujixerox.hbpl":{"source":"iana"},"application/vnd.fut-misnet":{"source":"iana"},"application/vnd.futoin+cbor":{"source":"iana"},"application/vnd.futoin+json":{"source":"iana","compressible":true},"application/vnd.fuzzysheet":{"source":"iana","extensions":["fzs"]},"application/vnd.genomatix.tuxedo":{"source":"iana","extensions":["txd"]},"application/vnd.gentics.grd+json":{"source":"iana","compressible":true},"application/vnd.geo+json":{"source":"iana","compressible":true},"application/vnd.geocube+xml":{"source":"iana","compressible":true},"application/vnd.geogebra.file":{"source":"iana","extensions":["ggb"]},"application/vnd.geogebra.tool":{"source":"iana","extensions":["ggt"]},"application/vnd.geometry-explorer":{"source":"iana","extensions":["gex","gre"]},"application/vnd.geonext":{"source":"iana","extensions":["gxt"]},"application/vnd.geoplan":{"source":"iana","extensions":["g2w"]},"application/vnd.geospace":{"source":"iana","extensions":["g3w"]},"application/vnd.gerber":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt-response":{"source":"iana"},"application/vnd.gmx":{"source":"iana","extensions":["gmx"]},"application/vnd.google-apps.document":{"compressible":false,"extensions":["gdoc"]},"application/vnd.google-apps.presentation":{"compressible":false,"extensions":["gslides"]},"application/vnd.google-apps.spreadsheet":{"compressible":false,"extensions":["gsheet"]},"application/vnd.google-earth.kml+xml":{"source":"iana","compressible":true,"extensions":["kml"]},"application/vnd.google-earth.kmz":{"source":"iana","compressible":false,"extensions":["kmz"]},"application/vnd.gov.sk.e-form+xml":{"source":"iana","compressible":true},"application/vnd.gov.sk.e-form+zip":{"source":"iana","compressible":false},"application/vnd.gov.sk.xmldatacontainer+xml":{"source":"iana","compressible":true},"application/vnd.grafeq":{"source":"iana","extensions":["gqf","gqs"]},"application/vnd.gridmp":{"source":"iana"},"application/vnd.groove-account":{"source":"iana","extensions":["gac"]},"application/vnd.groove-help":{"source":"iana","extensions":["ghf"]},"application/vnd.groove-identity-message":{"source":"iana","extensions":["gim"]},"application/vnd.groove-injector":{"source":"iana","extensions":["grv"]},"application/vnd.groove-tool-message":{"source":"iana","extensions":["gtm"]},"application/vnd.groove-tool-template":{"source":"iana","extensions":["tpl"]},"application/vnd.groove-vcard":{"source":"iana","extensions":["vcg"]},"application/vnd.hal+json":{"source":"iana","compressible":true},"application/vnd.hal+xml":{"source":"iana","compressible":true,"extensions":["hal"]},"application/vnd.handheld-entertainment+xml":{"source":"iana","compressible":true,"extensions":["zmm"]},"application/vnd.hbci":{"source":"iana","extensions":["hbci"]},"application/vnd.hc+json":{"source":"iana","compressible":true},"application/vnd.hcl-bireports":{"source":"iana"},"application/vnd.hdt":{"source":"iana"},"application/vnd.heroku+json":{"source":"iana","compressible":true},"application/vnd.hhe.lesson-player":{"source":"iana","extensions":["les"]},"application/vnd.hp-hpgl":{"source":"iana","extensions":["hpgl"]},"application/vnd.hp-hpid":{"source":"iana","extensions":["hpid"]},"application/vnd.hp-hps":{"source":"iana","extensions":["hps"]},"application/vnd.hp-jlyt":{"source":"iana","extensions":["jlt"]},"application/vnd.hp-pcl":{"source":"iana","extensions":["pcl"]},"application/vnd.hp-pclxl":{"source":"iana","extensions":["pclxl"]},"application/vnd.httphone":{"source":"iana"},"application/vnd.hydrostatix.sof-data":{"source":"iana","extensions":["sfd-hdstx"]},"application/vnd.hyper+json":{"source":"iana","compressible":true},"application/vnd.hyper-item+json":{"source":"iana","compressible":true},"application/vnd.hyperdrive+json":{"source":"iana","compressible":true},"application/vnd.hzn-3d-crossword":{"source":"iana"},"application/vnd.ibm.afplinedata":{"source":"iana"},"application/vnd.ibm.electronic-media":{"source":"iana"},"application/vnd.ibm.minipay":{"source":"iana","extensions":["mpy"]},"application/vnd.ibm.modcap":{"source":"iana","extensions":["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{"source":"iana","extensions":["irm"]},"application/vnd.ibm.secure-container":{"source":"iana","extensions":["sc"]},"application/vnd.iccprofile":{"source":"iana","extensions":["icc","icm"]},"application/vnd.ieee.1905":{"source":"iana"},"application/vnd.igloader":{"source":"iana","extensions":["igl"]},"application/vnd.imagemeter.folder+zip":{"source":"iana","compressible":false},"application/vnd.imagemeter.image+zip":{"source":"iana","compressible":false},"application/vnd.immervision-ivp":{"source":"iana","extensions":["ivp"]},"application/vnd.immervision-ivu":{"source":"iana","extensions":["ivu"]},"application/vnd.ims.imsccv1p1":{"source":"iana"},"application/vnd.ims.imsccv1p2":{"source":"iana"},"application/vnd.ims.imsccv1p3":{"source":"iana"},"application/vnd.ims.lis.v2.result+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy.id+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{"source":"iana","compressible":true},"application/vnd.informedcontrol.rms+xml":{"source":"iana","compressible":true},"application/vnd.informix-visionary":{"source":"iana"},"application/vnd.infotech.project":{"source":"iana"},"application/vnd.infotech.project+xml":{"source":"iana","compressible":true},"application/vnd.innopath.wamp.notification":{"source":"iana"},"application/vnd.insors.igm":{"source":"iana","extensions":["igm"]},"application/vnd.intercon.formnet":{"source":"iana","extensions":["xpw","xpx"]},"application/vnd.intergeo":{"source":"iana","extensions":["i2g"]},"application/vnd.intertrust.digibox":{"source":"iana"},"application/vnd.intertrust.nncp":{"source":"iana"},"application/vnd.intu.qbo":{"source":"iana","extensions":["qbo"]},"application/vnd.intu.qfx":{"source":"iana","extensions":["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.conceptitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.knowledgeitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsmessage+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.packageitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.planningitem+xml":{"source":"iana","compressible":true},"application/vnd.ipunplugged.rcprofile":{"source":"iana","extensions":["rcprofile"]},"application/vnd.irepository.package+xml":{"source":"iana","compressible":true,"extensions":["irp"]},"application/vnd.is-xpr":{"source":"iana","extensions":["xpr"]},"application/vnd.isac.fcs":{"source":"iana","extensions":["fcs"]},"application/vnd.iso11783-10+zip":{"source":"iana","compressible":false},"application/vnd.jam":{"source":"iana","extensions":["jam"]},"application/vnd.japannet-directory-service":{"source":"iana"},"application/vnd.japannet-jpnstore-wakeup":{"source":"iana"},"application/vnd.japannet-payment-wakeup":{"source":"iana"},"application/vnd.japannet-registration":{"source":"iana"},"application/vnd.japannet-registration-wakeup":{"source":"iana"},"application/vnd.japannet-setstore-wakeup":{"source":"iana"},"application/vnd.japannet-verification":{"source":"iana"},"application/vnd.japannet-verification-wakeup":{"source":"iana"},"application/vnd.jcp.javame.midlet-rms":{"source":"iana","extensions":["rms"]},"application/vnd.jisp":{"source":"iana","extensions":["jisp"]},"application/vnd.joost.joda-archive":{"source":"iana","extensions":["joda"]},"application/vnd.jsk.isdn-ngn":{"source":"iana"},"application/vnd.kahootz":{"source":"iana","extensions":["ktz","ktr"]},"application/vnd.kde.karbon":{"source":"iana","extensions":["karbon"]},"application/vnd.kde.kchart":{"source":"iana","extensions":["chrt"]},"application/vnd.kde.kformula":{"source":"iana","extensions":["kfo"]},"application/vnd.kde.kivio":{"source":"iana","extensions":["flw"]},"application/vnd.kde.kontour":{"source":"iana","extensions":["kon"]},"application/vnd.kde.kpresenter":{"source":"iana","extensions":["kpr","kpt"]},"application/vnd.kde.kspread":{"source":"iana","extensions":["ksp"]},"application/vnd.kde.kword":{"source":"iana","extensions":["kwd","kwt"]},"application/vnd.kenameaapp":{"source":"iana","extensions":["htke"]},"application/vnd.kidspiration":{"source":"iana","extensions":["kia"]},"application/vnd.kinar":{"source":"iana","extensions":["kne","knp"]},"application/vnd.koan":{"source":"iana","extensions":["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{"source":"iana","extensions":["sse"]},"application/vnd.las":{"source":"iana"},"application/vnd.las.las+json":{"source":"iana","compressible":true},"application/vnd.las.las+xml":{"source":"iana","compressible":true,"extensions":["lasxml"]},"application/vnd.laszip":{"source":"iana"},"application/vnd.leap+json":{"source":"iana","compressible":true},"application/vnd.liberty-request+xml":{"source":"iana","compressible":true},"application/vnd.llamagraphics.life-balance.desktop":{"source":"iana","extensions":["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{"source":"iana","compressible":true,"extensions":["lbe"]},"application/vnd.logipipe.circuit+zip":{"source":"iana","compressible":false},"application/vnd.loom":{"source":"iana"},"application/vnd.lotus-1-2-3":{"source":"iana","extensions":["123"]},"application/vnd.lotus-approach":{"source":"iana","extensions":["apr"]},"application/vnd.lotus-freelance":{"source":"iana","extensions":["pre"]},"application/vnd.lotus-notes":{"source":"iana","extensions":["nsf"]},"application/vnd.lotus-organizer":{"source":"iana","extensions":["org"]},"application/vnd.lotus-screencam":{"source":"iana","extensions":["scm"]},"application/vnd.lotus-wordpro":{"source":"iana","extensions":["lwp"]},"application/vnd.macports.portpkg":{"source":"iana","extensions":["portpkg"]},"application/vnd.mapbox-vector-tile":{"source":"iana"},"application/vnd.marlin.drm.actiontoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.conftoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.license+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.mdcf":{"source":"iana"},"application/vnd.mason+json":{"source":"iana","compressible":true},"application/vnd.maxmind.maxmind-db":{"source":"iana"},"application/vnd.mcd":{"source":"iana","extensions":["mcd"]},"application/vnd.medcalcdata":{"source":"iana","extensions":["mc1"]},"application/vnd.mediastation.cdkey":{"source":"iana","extensions":["cdkey"]},"application/vnd.meridian-slingshot":{"source":"iana"},"application/vnd.mfer":{"source":"iana","extensions":["mwf"]},"application/vnd.mfmp":{"source":"iana","extensions":["mfm"]},"application/vnd.micro+json":{"source":"iana","compressible":true},"application/vnd.micrografx.flo":{"source":"iana","extensions":["flo"]},"application/vnd.micrografx.igx":{"source":"iana","extensions":["igx"]},"application/vnd.microsoft.portable-executable":{"source":"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{"source":"iana"},"application/vnd.miele+json":{"source":"iana","compressible":true},"application/vnd.mif":{"source":"iana","extensions":["mif"]},"application/vnd.minisoft-hp3000-save":{"source":"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{"source":"iana"},"application/vnd.mobius.daf":{"source":"iana","extensions":["daf"]},"application/vnd.mobius.dis":{"source":"iana","extensions":["dis"]},"application/vnd.mobius.mbk":{"source":"iana","extensions":["mbk"]},"application/vnd.mobius.mqy":{"source":"iana","extensions":["mqy"]},"application/vnd.mobius.msl":{"source":"iana","extensions":["msl"]},"application/vnd.mobius.plc":{"source":"iana","extensions":["plc"]},"application/vnd.mobius.txf":{"source":"iana","extensions":["txf"]},"application/vnd.mophun.application":{"source":"iana","extensions":["mpn"]},"application/vnd.mophun.certificate":{"source":"iana","extensions":["mpc"]},"application/vnd.motorola.flexsuite":{"source":"iana"},"application/vnd.motorola.flexsuite.adsi":{"source":"iana"},"application/vnd.motorola.flexsuite.fis":{"source":"iana"},"application/vnd.motorola.flexsuite.gotap":{"source":"iana"},"application/vnd.motorola.flexsuite.kmr":{"source":"iana"},"application/vnd.motorola.flexsuite.ttc":{"source":"iana"},"application/vnd.motorola.flexsuite.wem":{"source":"iana"},"application/vnd.motorola.iprm":{"source":"iana"},"application/vnd.mozilla.xul+xml":{"source":"iana","compressible":true,"extensions":["xul"]},"application/vnd.ms-3mfdocument":{"source":"iana"},"application/vnd.ms-artgalry":{"source":"iana","extensions":["cil"]},"application/vnd.ms-asf":{"source":"iana"},"application/vnd.ms-cab-compressed":{"source":"iana","extensions":["cab"]},"application/vnd.ms-color.iccprofile":{"source":"apache"},"application/vnd.ms-excel":{"source":"iana","compressible":false,"extensions":["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{"source":"iana","extensions":["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{"source":"iana","extensions":["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{"source":"iana","extensions":["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{"source":"iana","extensions":["xltm"]},"application/vnd.ms-fontobject":{"source":"iana","compressible":true,"extensions":["eot"]},"application/vnd.ms-htmlhelp":{"source":"iana","extensions":["chm"]},"application/vnd.ms-ims":{"source":"iana","extensions":["ims"]},"application/vnd.ms-lrm":{"source":"iana","extensions":["lrm"]},"application/vnd.ms-office.activex+xml":{"source":"iana","compressible":true},"application/vnd.ms-officetheme":{"source":"iana","extensions":["thmx"]},"application/vnd.ms-opentype":{"source":"apache","compressible":true},"application/vnd.ms-outlook":{"compressible":false,"extensions":["msg"]},"application/vnd.ms-package.obfuscated-opentype":{"source":"apache"},"application/vnd.ms-pki.seccat":{"source":"apache","extensions":["cat"]},"application/vnd.ms-pki.stl":{"source":"apache","extensions":["stl"]},"application/vnd.ms-playready.initiator+xml":{"source":"iana","compressible":true},"application/vnd.ms-powerpoint":{"source":"iana","compressible":false,"extensions":["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{"source":"iana","extensions":["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{"source":"iana","extensions":["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{"source":"iana","extensions":["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{"source":"iana","extensions":["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{"source":"iana","extensions":["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{"source":"iana","compressible":true},"application/vnd.ms-printing.printticket+xml":{"source":"apache","compressible":true},"application/vnd.ms-printschematicket+xml":{"source":"iana","compressible":true},"application/vnd.ms-project":{"source":"iana","extensions":["mpp","mpt"]},"application/vnd.ms-tnef":{"source":"iana"},"application/vnd.ms-windows.devicepairing":{"source":"iana"},"application/vnd.ms-windows.nwprinting.oob":{"source":"iana"},"application/vnd.ms-windows.printerpairing":{"source":"iana"},"application/vnd.ms-windows.wsd.oob":{"source":"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.lic-resp":{"source":"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.meter-resp":{"source":"iana"},"application/vnd.ms-word.document.macroenabled.12":{"source":"iana","extensions":["docm"]},"application/vnd.ms-word.template.macroenabled.12":{"source":"iana","extensions":["dotm"]},"application/vnd.ms-works":{"source":"iana","extensions":["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{"source":"iana","extensions":["wpl"]},"application/vnd.ms-xpsdocument":{"source":"iana","compressible":false,"extensions":["xps"]},"application/vnd.msa-disk-image":{"source":"iana"},"application/vnd.mseq":{"source":"iana","extensions":["mseq"]},"application/vnd.msign":{"source":"iana"},"application/vnd.multiad.creator":{"source":"iana"},"application/vnd.multiad.creator.cif":{"source":"iana"},"application/vnd.music-niff":{"source":"iana"},"application/vnd.musician":{"source":"iana","extensions":["mus"]},"application/vnd.muvee.style":{"source":"iana","extensions":["msty"]},"application/vnd.mynfc":{"source":"iana","extensions":["taglet"]},"application/vnd.ncd.control":{"source":"iana"},"application/vnd.ncd.reference":{"source":"iana"},"application/vnd.nearst.inv+json":{"source":"iana","compressible":true},"application/vnd.nervana":{"source":"iana"},"application/vnd.netfpx":{"source":"iana"},"application/vnd.neurolanguage.nlu":{"source":"iana","extensions":["nlu"]},"application/vnd.nimn":{"source":"iana"},"application/vnd.nintendo.nitro.rom":{"source":"iana"},"application/vnd.nintendo.snes.rom":{"source":"iana"},"application/vnd.nitf":{"source":"iana","extensions":["ntf","nitf"]},"application/vnd.noblenet-directory":{"source":"iana","extensions":["nnd"]},"application/vnd.noblenet-sealer":{"source":"iana","extensions":["nns"]},"application/vnd.noblenet-web":{"source":"iana","extensions":["nnw"]},"application/vnd.nokia.catalogs":{"source":"iana"},"application/vnd.nokia.conml+wbxml":{"source":"iana"},"application/vnd.nokia.conml+xml":{"source":"iana","compressible":true},"application/vnd.nokia.iptv.config+xml":{"source":"iana","compressible":true},"application/vnd.nokia.isds-radio-presets":{"source":"iana"},"application/vnd.nokia.landmark+wbxml":{"source":"iana"},"application/vnd.nokia.landmark+xml":{"source":"iana","compressible":true},"application/vnd.nokia.landmarkcollection+xml":{"source":"iana","compressible":true},"application/vnd.nokia.n-gage.ac+xml":{"source":"iana","compressible":true,"extensions":["ac"]},"application/vnd.nokia.n-gage.data":{"source":"iana","extensions":["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{"source":"iana","extensions":["n-gage"]},"application/vnd.nokia.ncd":{"source":"iana"},"application/vnd.nokia.pcd+wbxml":{"source":"iana"},"application/vnd.nokia.pcd+xml":{"source":"iana","compressible":true},"application/vnd.nokia.radio-preset":{"source":"iana","extensions":["rpst"]},"application/vnd.nokia.radio-presets":{"source":"iana","extensions":["rpss"]},"application/vnd.novadigm.edm":{"source":"iana","extensions":["edm"]},"application/vnd.novadigm.edx":{"source":"iana","extensions":["edx"]},"application/vnd.novadigm.ext":{"source":"iana","extensions":["ext"]},"application/vnd.ntt-local.content-share":{"source":"iana"},"application/vnd.ntt-local.file-transfer":{"source":"iana"},"application/vnd.ntt-local.ogw_remote-access":{"source":"iana"},"application/vnd.ntt-local.sip-ta_remote":{"source":"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{"source":"iana"},"application/vnd.oasis.opendocument.chart":{"source":"iana","extensions":["odc"]},"application/vnd.oasis.opendocument.chart-template":{"source":"iana","extensions":["otc"]},"application/vnd.oasis.opendocument.database":{"source":"iana","extensions":["odb"]},"application/vnd.oasis.opendocument.formula":{"source":"iana","extensions":["odf"]},"application/vnd.oasis.opendocument.formula-template":{"source":"iana","extensions":["odft"]},"application/vnd.oasis.opendocument.graphics":{"source":"iana","compressible":false,"extensions":["odg"]},"application/vnd.oasis.opendocument.graphics-template":{"source":"iana","extensions":["otg"]},"application/vnd.oasis.opendocument.image":{"source":"iana","extensions":["odi"]},"application/vnd.oasis.opendocument.image-template":{"source":"iana","extensions":["oti"]},"application/vnd.oasis.opendocument.presentation":{"source":"iana","compressible":false,"extensions":["odp"]},"application/vnd.oasis.opendocument.presentation-template":{"source":"iana","extensions":["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{"source":"iana","compressible":false,"extensions":["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{"source":"iana","extensions":["ots"]},"application/vnd.oasis.opendocument.text":{"source":"iana","compressible":false,"extensions":["odt"]},"application/vnd.oasis.opendocument.text-master":{"source":"iana","extensions":["odm"]},"application/vnd.oasis.opendocument.text-template":{"source":"iana","extensions":["ott"]},"application/vnd.oasis.opendocument.text-web":{"source":"iana","extensions":["oth"]},"application/vnd.obn":{"source":"iana"},"application/vnd.ocf+cbor":{"source":"iana"},"application/vnd.oftn.l10n+json":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessdownload+xml":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessstreaming+xml":{"source":"iana","compressible":true},"application/vnd.oipf.cspg-hexbinary":{"source":"iana"},"application/vnd.oipf.dae.svg+xml":{"source":"iana","compressible":true},"application/vnd.oipf.dae.xhtml+xml":{"source":"iana","compressible":true},"application/vnd.oipf.mippvcontrolmessage+xml":{"source":"iana","compressible":true},"application/vnd.oipf.pae.gem":{"source":"iana"},"application/vnd.oipf.spdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.oipf.spdlist+xml":{"source":"iana","compressible":true},"application/vnd.oipf.ueprofile+xml":{"source":"iana","compressible":true},"application/vnd.oipf.userprofile+xml":{"source":"iana","compressible":true},"application/vnd.olpc-sugar":{"source":"iana","extensions":["xo"]},"application/vnd.oma-scws-config":{"source":"iana"},"application/vnd.oma-scws-http-request":{"source":"iana"},"application/vnd.oma-scws-http-response":{"source":"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.drm-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.imd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.ltkm":{"source":"iana"},"application/vnd.oma.bcast.notification+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.provisioningtrigger":{"source":"iana"},"application/vnd.oma.bcast.sgboot":{"source":"iana"},"application/vnd.oma.bcast.sgdd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sgdu":{"source":"iana"},"application/vnd.oma.bcast.simple-symbol-container":{"source":"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sprov+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.stkm":{"source":"iana"},"application/vnd.oma.cab-address-book+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-feature-handler+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-pcc+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-subs-invite+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-user-prefs+xml":{"source":"iana","compressible":true},"application/vnd.oma.dcd":{"source":"iana"},"application/vnd.oma.dcdc":{"source":"iana"},"application/vnd.oma.dd2+xml":{"source":"iana","compressible":true,"extensions":["dd2"]},"application/vnd.oma.drm.risd+xml":{"source":"iana","compressible":true},"application/vnd.oma.group-usage-list+xml":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+json":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+tlv":{"source":"iana"},"application/vnd.oma.pal+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.detailed-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.final-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.groups+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.invocation-descriptor+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.optimized-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.push":{"source":"iana"},"application/vnd.oma.scidm.messages+xml":{"source":"iana","compressible":true},"application/vnd.oma.xcap-directory+xml":{"source":"iana","compressible":true},"application/vnd.omads-email+xml":{"source":"iana","compressible":true},"application/vnd.omads-file+xml":{"source":"iana","compressible":true},"application/vnd.omads-folder+xml":{"source":"iana","compressible":true},"application/vnd.omaloc-supl-init":{"source":"iana"},"application/vnd.onepager":{"source":"iana"},"application/vnd.onepagertamp":{"source":"iana"},"application/vnd.onepagertamx":{"source":"iana"},"application/vnd.onepagertat":{"source":"iana"},"application/vnd.onepagertatp":{"source":"iana"},"application/vnd.onepagertatx":{"source":"iana"},"application/vnd.openblox.game+xml":{"source":"iana","compressible":true,"extensions":["obgx"]},"application/vnd.openblox.game-binary":{"source":"iana"},"application/vnd.openeye.oeb":{"source":"iana"},"application/vnd.openofficeorg.extension":{"source":"apache","extensions":["oxt"]},"application/vnd.openstreetmap.data+xml":{"source":"iana","compressible":true,"extensions":["osm"]},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawing+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{"source":"iana","compressible":false,"extensions":["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{"source":"iana","extensions":["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{"source":"iana","extensions":["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.template":{"source":"iana","extensions":["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"source":"iana","compressible":false,"extensions":["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{"source":"iana","extensions":["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.theme+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.vmldrawing":{"source":"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{"source":"iana","compressible":false,"extensions":["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{"source":"iana","extensions":["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.core-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.relationships+xml":{"source":"iana","compressible":true},"application/vnd.oracle.resource+json":{"source":"iana","compressible":true},"application/vnd.orange.indata":{"source":"iana"},"application/vnd.osa.netdeploy":{"source":"iana"},"application/vnd.osgeo.mapguide.package":{"source":"iana","extensions":["mgp"]},"application/vnd.osgi.bundle":{"source":"iana"},"application/vnd.osgi.dp":{"source":"iana","extensions":["dp"]},"application/vnd.osgi.subsystem":{"source":"iana","extensions":["esa"]},"application/vnd.otps.ct-kip+xml":{"source":"iana","compressible":true},"application/vnd.oxli.countgraph":{"source":"iana"},"application/vnd.pagerduty+json":{"source":"iana","compressible":true},"application/vnd.palm":{"source":"iana","extensions":["pdb","pqa","oprc"]},"application/vnd.panoply":{"source":"iana"},"application/vnd.paos.xml":{"source":"iana"},"application/vnd.patentdive":{"source":"iana"},"application/vnd.patientecommsdoc":{"source":"iana"},"application/vnd.pawaafile":{"source":"iana","extensions":["paw"]},"application/vnd.pcos":{"source":"iana"},"application/vnd.pg.format":{"source":"iana","extensions":["str"]},"application/vnd.pg.osasli":{"source":"iana","extensions":["ei6"]},"application/vnd.piaccess.application-licence":{"source":"iana"},"application/vnd.picsel":{"source":"iana","extensions":["efif"]},"application/vnd.pmi.widget":{"source":"iana","extensions":["wg"]},"application/vnd.poc.group-advertisement+xml":{"source":"iana","compressible":true},"application/vnd.pocketlearn":{"source":"iana","extensions":["plf"]},"application/vnd.powerbuilder6":{"source":"iana","extensions":["pbd"]},"application/vnd.powerbuilder6-s":{"source":"iana"},"application/vnd.powerbuilder7":{"source":"iana"},"application/vnd.powerbuilder7-s":{"source":"iana"},"application/vnd.powerbuilder75":{"source":"iana"},"application/vnd.powerbuilder75-s":{"source":"iana"},"application/vnd.preminet":{"source":"iana"},"application/vnd.previewsystems.box":{"source":"iana","extensions":["box"]},"application/vnd.proteus.magazine":{"source":"iana","extensions":["mgz"]},"application/vnd.psfs":{"source":"iana"},"application/vnd.publishare-delta-tree":{"source":"iana","extensions":["qps"]},"application/vnd.pvi.ptid1":{"source":"iana","extensions":["ptid"]},"application/vnd.pwg-multiplexed":{"source":"iana"},"application/vnd.pwg-xhtml-print+xml":{"source":"iana","compressible":true},"application/vnd.qualcomm.brew-app-res":{"source":"iana"},"application/vnd.quarantainenet":{"source":"iana"},"application/vnd.quark.quarkxpress":{"source":"iana","extensions":["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{"source":"iana"},"application/vnd.radisys.moml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conn+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-stream+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-base+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-group+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-speech+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-transform+xml":{"source":"iana","compressible":true},"application/vnd.rainstor.data":{"source":"iana"},"application/vnd.rapid":{"source":"iana"},"application/vnd.rar":{"source":"iana"},"application/vnd.realvnc.bed":{"source":"iana","extensions":["bed"]},"application/vnd.recordare.musicxml":{"source":"iana","extensions":["mxl"]},"application/vnd.recordare.musicxml+xml":{"source":"iana","compressible":true,"extensions":["musicxml"]},"application/vnd.renlearn.rlprint":{"source":"iana"},"application/vnd.restful+json":{"source":"iana","compressible":true},"application/vnd.rig.cryptonote":{"source":"iana","extensions":["cryptonote"]},"application/vnd.rim.cod":{"source":"apache","extensions":["cod"]},"application/vnd.rn-realmedia":{"source":"apache","extensions":["rm"]},"application/vnd.rn-realmedia-vbr":{"source":"apache","extensions":["rmvb"]},"application/vnd.route66.link66+xml":{"source":"iana","compressible":true,"extensions":["link66"]},"application/vnd.rs-274x":{"source":"iana"},"application/vnd.ruckus.download":{"source":"iana"},"application/vnd.s3sms":{"source":"iana"},"application/vnd.sailingtracker.track":{"source":"iana","extensions":["st"]},"application/vnd.sbm.cid":{"source":"iana"},"application/vnd.sbm.mid2":{"source":"iana"},"application/vnd.scribus":{"source":"iana"},"application/vnd.sealed.3df":{"source":"iana"},"application/vnd.sealed.csf":{"source":"iana"},"application/vnd.sealed.doc":{"source":"iana"},"application/vnd.sealed.eml":{"source":"iana"},"application/vnd.sealed.mht":{"source":"iana"},"application/vnd.sealed.net":{"source":"iana"},"application/vnd.sealed.ppt":{"source":"iana"},"application/vnd.sealed.tiff":{"source":"iana"},"application/vnd.sealed.xls":{"source":"iana"},"application/vnd.sealedmedia.softseal.html":{"source":"iana"},"application/vnd.sealedmedia.softseal.pdf":{"source":"iana"},"application/vnd.seemail":{"source":"iana","extensions":["see"]},"application/vnd.sema":{"source":"iana","extensions":["sema"]},"application/vnd.semd":{"source":"iana","extensions":["semd"]},"application/vnd.semf":{"source":"iana","extensions":["semf"]},"application/vnd.shade-save-file":{"source":"iana"},"application/vnd.shana.informed.formdata":{"source":"iana","extensions":["ifm"]},"application/vnd.shana.informed.formtemplate":{"source":"iana","extensions":["itp"]},"application/vnd.shana.informed.interchange":{"source":"iana","extensions":["iif"]},"application/vnd.shana.informed.package":{"source":"iana","extensions":["ipk"]},"application/vnd.shootproof+json":{"source":"iana","compressible":true},"application/vnd.shopkick+json":{"source":"iana","compressible":true},"application/vnd.sigrok.session":{"source":"iana"},"application/vnd.simtech-mindmapper":{"source":"iana","extensions":["twd","twds"]},"application/vnd.siren+json":{"source":"iana","compressible":true},"application/vnd.smaf":{"source":"iana","extensions":["mmf"]},"application/vnd.smart.notebook":{"source":"iana"},"application/vnd.smart.teacher":{"source":"iana","extensions":["teacher"]},"application/vnd.software602.filler.form+xml":{"source":"iana","compressible":true,"extensions":["fo"]},"application/vnd.software602.filler.form-xml-zip":{"source":"iana"},"application/vnd.solent.sdkm+xml":{"source":"iana","compressible":true,"extensions":["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{"source":"iana","extensions":["dxp"]},"application/vnd.spotfire.sfs":{"source":"iana","extensions":["sfs"]},"application/vnd.sqlite3":{"source":"iana"},"application/vnd.sss-cod":{"source":"iana"},"application/vnd.sss-dtf":{"source":"iana"},"application/vnd.sss-ntf":{"source":"iana"},"application/vnd.stardivision.calc":{"source":"apache","extensions":["sdc"]},"application/vnd.stardivision.draw":{"source":"apache","extensions":["sda"]},"application/vnd.stardivision.impress":{"source":"apache","extensions":["sdd"]},"application/vnd.stardivision.math":{"source":"apache","extensions":["smf"]},"application/vnd.stardivision.writer":{"source":"apache","extensions":["sdw","vor"]},"application/vnd.stardivision.writer-global":{"source":"apache","extensions":["sgl"]},"application/vnd.stepmania.package":{"source":"iana","extensions":["smzip"]},"application/vnd.stepmania.stepchart":{"source":"iana","extensions":["sm"]},"application/vnd.street-stream":{"source":"iana"},"application/vnd.sun.wadl+xml":{"source":"iana","compressible":true,"extensions":["wadl"]},"application/vnd.sun.xml.calc":{"source":"apache","extensions":["sxc"]},"application/vnd.sun.xml.calc.template":{"source":"apache","extensions":["stc"]},"application/vnd.sun.xml.draw":{"source":"apache","extensions":["sxd"]},"application/vnd.sun.xml.draw.template":{"source":"apache","extensions":["std"]},"application/vnd.sun.xml.impress":{"source":"apache","extensions":["sxi"]},"application/vnd.sun.xml.impress.template":{"source":"apache","extensions":["sti"]},"application/vnd.sun.xml.math":{"source":"apache","extensions":["sxm"]},"application/vnd.sun.xml.writer":{"source":"apache","extensions":["sxw"]},"application/vnd.sun.xml.writer.global":{"source":"apache","extensions":["sxg"]},"application/vnd.sun.xml.writer.template":{"source":"apache","extensions":["stw"]},"application/vnd.sus-calendar":{"source":"iana","extensions":["sus","susp"]},"application/vnd.svd":{"source":"iana","extensions":["svd"]},"application/vnd.swiftview-ics":{"source":"iana"},"application/vnd.symbian.install":{"source":"apache","extensions":["sis","sisx"]},"application/vnd.syncml+xml":{"source":"iana","compressible":true,"extensions":["xsm"]},"application/vnd.syncml.dm+wbxml":{"source":"iana","extensions":["bdm"]},"application/vnd.syncml.dm+xml":{"source":"iana","compressible":true,"extensions":["xdm"]},"application/vnd.syncml.dm.notification":{"source":"iana"},"application/vnd.syncml.dmddf+wbxml":{"source":"iana"},"application/vnd.syncml.dmddf+xml":{"source":"iana","compressible":true,"extensions":["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{"source":"iana"},"application/vnd.syncml.dmtnds+xml":{"source":"iana","compressible":true},"application/vnd.syncml.ds.notification":{"source":"iana"},"application/vnd.tableschema+json":{"source":"iana","compressible":true},"application/vnd.tao.intent-module-archive":{"source":"iana","extensions":["tao"]},"application/vnd.tcpdump.pcap":{"source":"iana","extensions":["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{"source":"iana","compressible":true},"application/vnd.tmd.mediaflex.api+xml":{"source":"iana","compressible":true},"application/vnd.tml":{"source":"iana"},"application/vnd.tmobile-livetv":{"source":"iana","extensions":["tmo"]},"application/vnd.tri.onesource":{"source":"iana"},"application/vnd.trid.tpt":{"source":"iana","extensions":["tpt"]},"application/vnd.triscape.mxs":{"source":"iana","extensions":["mxs"]},"application/vnd.trueapp":{"source":"iana","extensions":["tra"]},"application/vnd.truedoc":{"source":"iana"},"application/vnd.ubisoft.webplayer":{"source":"iana"},"application/vnd.ufdl":{"source":"iana","extensions":["ufd","ufdl"]},"application/vnd.uiq.theme":{"source":"iana","extensions":["utz"]},"application/vnd.umajin":{"source":"iana","extensions":["umj"]},"application/vnd.unity":{"source":"iana","extensions":["unityweb"]},"application/vnd.uoml+xml":{"source":"iana","compressible":true,"extensions":["uoml"]},"application/vnd.uplanet.alert":{"source":"iana"},"application/vnd.uplanet.alert-wbxml":{"source":"iana"},"application/vnd.uplanet.bearer-choice":{"source":"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{"source":"iana"},"application/vnd.uplanet.cacheop":{"source":"iana"},"application/vnd.uplanet.cacheop-wbxml":{"source":"iana"},"application/vnd.uplanet.channel":{"source":"iana"},"application/vnd.uplanet.channel-wbxml":{"source":"iana"},"application/vnd.uplanet.list":{"source":"iana"},"application/vnd.uplanet.list-wbxml":{"source":"iana"},"application/vnd.uplanet.listcmd":{"source":"iana"},"application/vnd.uplanet.listcmd-wbxml":{"source":"iana"},"application/vnd.uplanet.signal":{"source":"iana"},"application/vnd.uri-map":{"source":"iana"},"application/vnd.valve.source.material":{"source":"iana"},"application/vnd.vcx":{"source":"iana","extensions":["vcx"]},"application/vnd.vd-study":{"source":"iana"},"application/vnd.vectorworks":{"source":"iana"},"application/vnd.vel+json":{"source":"iana","compressible":true},"application/vnd.verimatrix.vcas":{"source":"iana"},"application/vnd.veryant.thin":{"source":"iana"},"application/vnd.ves.encrypted":{"source":"iana"},"application/vnd.vidsoft.vidconference":{"source":"iana"},"application/vnd.visio":{"source":"iana","extensions":["vsd","vst","vss","vsw"]},"application/vnd.visionary":{"source":"iana","extensions":["vis"]},"application/vnd.vividence.scriptfile":{"source":"iana"},"application/vnd.vsf":{"source":"iana","extensions":["vsf"]},"application/vnd.wap.sic":{"source":"iana"},"application/vnd.wap.slc":{"source":"iana"},"application/vnd.wap.wbxml":{"source":"iana","extensions":["wbxml"]},"application/vnd.wap.wmlc":{"source":"iana","extensions":["wmlc"]},"application/vnd.wap.wmlscriptc":{"source":"iana","extensions":["wmlsc"]},"application/vnd.webturbo":{"source":"iana","extensions":["wtb"]},"application/vnd.wfa.p2p":{"source":"iana"},"application/vnd.wfa.wsc":{"source":"iana"},"application/vnd.windows.devicepairing":{"source":"iana"},"application/vnd.wmc":{"source":"iana"},"application/vnd.wmf.bootstrap":{"source":"iana"},"application/vnd.wolfram.mathematica":{"source":"iana"},"application/vnd.wolfram.mathematica.package":{"source":"iana"},"application/vnd.wolfram.player":{"source":"iana","extensions":["nbp"]},"application/vnd.wordperfect":{"source":"iana","extensions":["wpd"]},"application/vnd.wqd":{"source":"iana","extensions":["wqd"]},"application/vnd.wrq-hp3000-labelled":{"source":"iana"},"application/vnd.wt.stf":{"source":"iana","extensions":["stf"]},"application/vnd.wv.csp+wbxml":{"source":"iana"},"application/vnd.wv.csp+xml":{"source":"iana","compressible":true},"application/vnd.wv.ssp+xml":{"source":"iana","compressible":true},"application/vnd.xacml+json":{"source":"iana","compressible":true},"application/vnd.xara":{"source":"iana","extensions":["xar"]},"application/vnd.xfdl":{"source":"iana","extensions":["xfdl"]},"application/vnd.xfdl.webform":{"source":"iana"},"application/vnd.xmi+xml":{"source":"iana","compressible":true},"application/vnd.xmpie.cpkg":{"source":"iana"},"application/vnd.xmpie.dpkg":{"source":"iana"},"application/vnd.xmpie.plan":{"source":"iana"},"application/vnd.xmpie.ppkg":{"source":"iana"},"application/vnd.xmpie.xlim":{"source":"iana"},"application/vnd.yamaha.hv-dic":{"source":"iana","extensions":["hvd"]},"application/vnd.yamaha.hv-script":{"source":"iana","extensions":["hvs"]},"application/vnd.yamaha.hv-voice":{"source":"iana","extensions":["hvp"]},"application/vnd.yamaha.openscoreformat":{"source":"iana","extensions":["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{"source":"iana","compressible":true,"extensions":["osfpvg"]},"application/vnd.yamaha.remote-setup":{"source":"iana"},"application/vnd.yamaha.smaf-audio":{"source":"iana","extensions":["saf"]},"application/vnd.yamaha.smaf-phrase":{"source":"iana","extensions":["spf"]},"application/vnd.yamaha.through-ngn":{"source":"iana"},"application/vnd.yamaha.tunnel-udpencap":{"source":"iana"},"application/vnd.yaoweme":{"source":"iana"},"application/vnd.yellowriver-custom-menu":{"source":"iana","extensions":["cmp"]},"application/vnd.youtube.yt":{"source":"iana"},"application/vnd.zul":{"source":"iana","extensions":["zir","zirz"]},"application/vnd.zzazz.deck+xml":{"source":"iana","compressible":true,"extensions":["zaz"]},"application/voicexml+xml":{"source":"iana","compressible":true,"extensions":["vxml"]},"application/voucher-cms+json":{"source":"iana","compressible":true},"application/vq-rtcpxr":{"source":"iana"},"application/wasm":{"compressible":true,"extensions":["wasm"]},"application/watcherinfo+xml":{"source":"iana","compressible":true},"application/webpush-options+json":{"source":"iana","compressible":true},"application/whoispp-query":{"source":"iana"},"application/whoispp-response":{"source":"iana"},"application/widget":{"source":"iana","extensions":["wgt"]},"application/winhlp":{"source":"apache","extensions":["hlp"]},"application/wita":{"source":"iana"},"application/wordperfect5.1":{"source":"iana"},"application/wsdl+xml":{"source":"iana","compressible":true,"extensions":["wsdl"]},"application/wspolicy+xml":{"source":"iana","compressible":true,"extensions":["wspolicy"]},"application/x-7z-compressed":{"source":"apache","compressible":false,"extensions":["7z"]},"application/x-abiword":{"source":"apache","extensions":["abw"]},"application/x-ace-compressed":{"source":"apache","extensions":["ace"]},"application/x-amf":{"source":"apache"},"application/x-apple-diskimage":{"source":"apache","extensions":["dmg"]},"application/x-arj":{"compressible":false,"extensions":["arj"]},"application/x-authorware-bin":{"source":"apache","extensions":["aab","x32","u32","vox"]},"application/x-authorware-map":{"source":"apache","extensions":["aam"]},"application/x-authorware-seg":{"source":"apache","extensions":["aas"]},"application/x-bcpio":{"source":"apache","extensions":["bcpio"]},"application/x-bdoc":{"compressible":false,"extensions":["bdoc"]},"application/x-bittorrent":{"source":"apache","extensions":["torrent"]},"application/x-blorb":{"source":"apache","extensions":["blb","blorb"]},"application/x-bzip":{"source":"apache","compressible":false,"extensions":["bz"]},"application/x-bzip2":{"source":"apache","compressible":false,"extensions":["bz2","boz"]},"application/x-cbr":{"source":"apache","extensions":["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{"source":"apache","extensions":["vcd"]},"application/x-cfs-compressed":{"source":"apache","extensions":["cfs"]},"application/x-chat":{"source":"apache","extensions":["chat"]},"application/x-chess-pgn":{"source":"apache","extensions":["pgn"]},"application/x-chrome-extension":{"extensions":["crx"]},"application/x-cocoa":{"source":"nginx","extensions":["cco"]},"application/x-compress":{"source":"apache"},"application/x-conference":{"source":"apache","extensions":["nsc"]},"application/x-cpio":{"source":"apache","extensions":["cpio"]},"application/x-csh":{"source":"apache","extensions":["csh"]},"application/x-deb":{"compressible":false},"application/x-debian-package":{"source":"apache","extensions":["deb","udeb"]},"application/x-dgc-compressed":{"source":"apache","extensions":["dgc"]},"application/x-director":{"source":"apache","extensions":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{"source":"apache","extensions":["wad"]},"application/x-dtbncx+xml":{"source":"apache","compressible":true,"extensions":["ncx"]},"application/x-dtbook+xml":{"source":"apache","compressible":true,"extensions":["dtb"]},"application/x-dtbresource+xml":{"source":"apache","compressible":true,"extensions":["res"]},"application/x-dvi":{"source":"apache","compressible":false,"extensions":["dvi"]},"application/x-envoy":{"source":"apache","extensions":["evy"]},"application/x-eva":{"source":"apache","extensions":["eva"]},"application/x-font-bdf":{"source":"apache","extensions":["bdf"]},"application/x-font-dos":{"source":"apache"},"application/x-font-framemaker":{"source":"apache"},"application/x-font-ghostscript":{"source":"apache","extensions":["gsf"]},"application/x-font-libgrx":{"source":"apache"},"application/x-font-linux-psf":{"source":"apache","extensions":["psf"]},"application/x-font-pcf":{"source":"apache","extensions":["pcf"]},"application/x-font-snf":{"source":"apache","extensions":["snf"]},"application/x-font-speedo":{"source":"apache"},"application/x-font-sunos-news":{"source":"apache"},"application/x-font-type1":{"source":"apache","extensions":["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{"source":"apache"},"application/x-freearc":{"source":"apache","extensions":["arc"]},"application/x-futuresplash":{"source":"apache","extensions":["spl"]},"application/x-gca-compressed":{"source":"apache","extensions":["gca"]},"application/x-glulx":{"source":"apache","extensions":["ulx"]},"application/x-gnumeric":{"source":"apache","extensions":["gnumeric"]},"application/x-gramps-xml":{"source":"apache","extensions":["gramps"]},"application/x-gtar":{"source":"apache","extensions":["gtar"]},"application/x-gzip":{"source":"apache"},"application/x-hdf":{"source":"apache","extensions":["hdf"]},"application/x-httpd-php":{"compressible":true,"extensions":["php"]},"application/x-install-instructions":{"source":"apache","extensions":["install"]},"application/x-iso9660-image":{"source":"apache","extensions":["iso"]},"application/x-java-archive-diff":{"source":"nginx","extensions":["jardiff"]},"application/x-java-jnlp-file":{"source":"apache","compressible":false,"extensions":["jnlp"]},"application/x-javascript":{"compressible":true},"application/x-keepass2":{"extensions":["kdbx"]},"application/x-latex":{"source":"apache","compressible":false,"extensions":["latex"]},"application/x-lua-bytecode":{"extensions":["luac"]},"application/x-lzh-compressed":{"source":"apache","extensions":["lzh","lha"]},"application/x-makeself":{"source":"nginx","extensions":["run"]},"application/x-mie":{"source":"apache","extensions":["mie"]},"application/x-mobipocket-ebook":{"source":"apache","extensions":["prc","mobi"]},"application/x-mpegurl":{"compressible":false},"application/x-ms-application":{"source":"apache","extensions":["application"]},"application/x-ms-shortcut":{"source":"apache","extensions":["lnk"]},"application/x-ms-wmd":{"source":"apache","extensions":["wmd"]},"application/x-ms-wmz":{"source":"apache","extensions":["wmz"]},"application/x-ms-xbap":{"source":"apache","extensions":["xbap"]},"application/x-msaccess":{"source":"apache","extensions":["mdb"]},"application/x-msbinder":{"source":"apache","extensions":["obd"]},"application/x-mscardfile":{"source":"apache","extensions":["crd"]},"application/x-msclip":{"source":"apache","extensions":["clp"]},"application/x-msdos-program":{"extensions":["exe"]},"application/x-msdownload":{"source":"apache","extensions":["exe","dll","com","bat","msi"]},"application/x-msmediaview":{"source":"apache","extensions":["mvb","m13","m14"]},"application/x-msmetafile":{"source":"apache","extensions":["wmf","wmz","emf","emz"]},"application/x-msmoney":{"source":"apache","extensions":["mny"]},"application/x-mspublisher":{"source":"apache","extensions":["pub"]},"application/x-msschedule":{"source":"apache","extensions":["scd"]},"application/x-msterminal":{"source":"apache","extensions":["trm"]},"application/x-mswrite":{"source":"apache","extensions":["wri"]},"application/x-netcdf":{"source":"apache","extensions":["nc","cdf"]},"application/x-ns-proxy-autoconfig":{"compressible":true,"extensions":["pac"]},"application/x-nzb":{"source":"apache","extensions":["nzb"]},"application/x-perl":{"source":"nginx","extensions":["pl","pm"]},"application/x-pilot":{"source":"nginx","extensions":["prc","pdb"]},"application/x-pkcs12":{"source":"apache","compressible":false,"extensions":["p12","pfx"]},"application/x-pkcs7-certificates":{"source":"apache","extensions":["p7b","spc"]},"application/x-pkcs7-certreqresp":{"source":"apache","extensions":["p7r"]},"application/x-rar-compressed":{"source":"apache","compressible":false,"extensions":["rar"]},"application/x-redhat-package-manager":{"source":"nginx","extensions":["rpm"]},"application/x-research-info-systems":{"source":"apache","extensions":["ris"]},"application/x-sea":{"source":"nginx","extensions":["sea"]},"application/x-sh":{"source":"apache","compressible":true,"extensions":["sh"]},"application/x-shar":{"source":"apache","extensions":["shar"]},"application/x-shockwave-flash":{"source":"apache","compressible":false,"extensions":["swf"]},"application/x-silverlight-app":{"source":"apache","extensions":["xap"]},"application/x-sql":{"source":"apache","extensions":["sql"]},"application/x-stuffit":{"source":"apache","compressible":false,"extensions":["sit"]},"application/x-stuffitx":{"source":"apache","extensions":["sitx"]},"application/x-subrip":{"source":"apache","extensions":["srt"]},"application/x-sv4cpio":{"source":"apache","extensions":["sv4cpio"]},"application/x-sv4crc":{"source":"apache","extensions":["sv4crc"]},"application/x-t3vm-image":{"source":"apache","extensions":["t3"]},"application/x-tads":{"source":"apache","extensions":["gam"]},"application/x-tar":{"source":"apache","compressible":true,"extensions":["tar"]},"application/x-tcl":{"source":"apache","extensions":["tcl","tk"]},"application/x-tex":{"source":"apache","extensions":["tex"]},"application/x-tex-tfm":{"source":"apache","extensions":["tfm"]},"application/x-texinfo":{"source":"apache","extensions":["texinfo","texi"]},"application/x-tgif":{"source":"apache","extensions":["obj"]},"application/x-ustar":{"source":"apache","extensions":["ustar"]},"application/x-virtualbox-hdd":{"compressible":true,"extensions":["hdd"]},"application/x-virtualbox-ova":{"compressible":true,"extensions":["ova"]},"application/x-virtualbox-ovf":{"compressible":true,"extensions":["ovf"]},"application/x-virtualbox-vbox":{"compressible":true,"extensions":["vbox"]},"application/x-virtualbox-vbox-extpack":{"compressible":false,"extensions":["vbox-extpack"]},"application/x-virtualbox-vdi":{"compressible":true,"extensions":["vdi"]},"application/x-virtualbox-vhd":{"compressible":true,"extensions":["vhd"]},"application/x-virtualbox-vmdk":{"compressible":true,"extensions":["vmdk"]},"application/x-wais-source":{"source":"apache","extensions":["src"]},"application/x-web-app-manifest+json":{"compressible":true,"extensions":["webapp"]},"application/x-www-form-urlencoded":{"source":"iana","compressible":true},"application/x-x509-ca-cert":{"source":"apache","extensions":["der","crt","pem"]},"application/x-xfig":{"source":"apache","extensions":["fig"]},"application/x-xliff+xml":{"source":"apache","compressible":true,"extensions":["xlf"]},"application/x-xpinstall":{"source":"apache","compressible":false,"extensions":["xpi"]},"application/x-xz":{"source":"apache","extensions":["xz"]},"application/x-zmachine":{"source":"apache","extensions":["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{"source":"iana"},"application/xacml+xml":{"source":"iana","compressible":true},"application/xaml+xml":{"source":"apache","compressible":true,"extensions":["xaml"]},"application/xcap-att+xml":{"source":"iana","compressible":true,"extensions":["xav"]},"application/xcap-caps+xml":{"source":"iana","compressible":true,"extensions":["xca"]},"application/xcap-diff+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/xcap-el+xml":{"source":"iana","compressible":true,"extensions":["xel"]},"application/xcap-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/xcap-ns+xml":{"source":"iana","compressible":true,"extensions":["xns"]},"application/xcon-conference-info+xml":{"source":"iana","compressible":true},"application/xcon-conference-info-diff+xml":{"source":"iana","compressible":true},"application/xenc+xml":{"source":"iana","compressible":true,"extensions":["xenc"]},"application/xhtml+xml":{"source":"iana","compressible":true,"extensions":["xhtml","xht"]},"application/xhtml-voice+xml":{"source":"apache","compressible":true},"application/xliff+xml":{"source":"iana","compressible":true,"extensions":["xlf"]},"application/xml":{"source":"iana","compressible":true,"extensions":["xml","xsl","xsd","rng"]},"application/xml-dtd":{"source":"iana","compressible":true,"extensions":["dtd"]},"application/xml-external-parsed-entity":{"source":"iana"},"application/xml-patch+xml":{"source":"iana","compressible":true},"application/xmpp+xml":{"source":"iana","compressible":true},"application/xop+xml":{"source":"iana","compressible":true,"extensions":["xop"]},"application/xproc+xml":{"source":"apache","compressible":true,"extensions":["xpl"]},"application/xslt+xml":{"source":"iana","compressible":true,"extensions":["xslt"]},"application/xspf+xml":{"source":"apache","compressible":true,"extensions":["xspf"]},"application/xv+xml":{"source":"iana","compressible":true,"extensions":["mxml","xhvml","xvml","xvm"]},"application/yang":{"source":"iana","extensions":["yang"]},"application/yang-data+json":{"source":"iana","compressible":true},"application/yang-data+xml":{"source":"iana","compressible":true},"application/yang-patch+json":{"source":"iana","compressible":true},"application/yang-patch+xml":{"source":"iana","compressible":true},"application/yin+xml":{"source":"iana","compressible":true,"extensions":["yin"]},"application/zip":{"source":"iana","compressible":false,"extensions":["zip"]},"application/zlib":{"source":"iana"},"application/zstd":{"source":"iana"},"audio/1d-interleaved-parityfec":{"source":"iana"},"audio/32kadpcm":{"source":"iana"},"audio/3gpp":{"source":"iana","compressible":false,"extensions":["3gpp"]},"audio/3gpp2":{"source":"iana"},"audio/aac":{"source":"iana"},"audio/ac3":{"source":"iana"},"audio/adpcm":{"source":"apache","extensions":["adp"]},"audio/amr":{"source":"iana"},"audio/amr-wb":{"source":"iana"},"audio/amr-wb+":{"source":"iana"},"audio/aptx":{"source":"iana"},"audio/asc":{"source":"iana"},"audio/atrac-advanced-lossless":{"source":"iana"},"audio/atrac-x":{"source":"iana"},"audio/atrac3":{"source":"iana"},"audio/basic":{"source":"iana","compressible":false,"extensions":["au","snd"]},"audio/bv16":{"source":"iana"},"audio/bv32":{"source":"iana"},"audio/clearmode":{"source":"iana"},"audio/cn":{"source":"iana"},"audio/dat12":{"source":"iana"},"audio/dls":{"source":"iana"},"audio/dsr-es201108":{"source":"iana"},"audio/dsr-es202050":{"source":"iana"},"audio/dsr-es202211":{"source":"iana"},"audio/dsr-es202212":{"source":"iana"},"audio/dv":{"source":"iana"},"audio/dvi4":{"source":"iana"},"audio/eac3":{"source":"iana"},"audio/encaprtp":{"source":"iana"},"audio/evrc":{"source":"iana"},"audio/evrc-qcp":{"source":"iana"},"audio/evrc0":{"source":"iana"},"audio/evrc1":{"source":"iana"},"audio/evrcb":{"source":"iana"},"audio/evrcb0":{"source":"iana"},"audio/evrcb1":{"source":"iana"},"audio/evrcnw":{"source":"iana"},"audio/evrcnw0":{"source":"iana"},"audio/evrcnw1":{"source":"iana"},"audio/evrcwb":{"source":"iana"},"audio/evrcwb0":{"source":"iana"},"audio/evrcwb1":{"source":"iana"},"audio/evs":{"source":"iana"},"audio/flexfec":{"source":"iana"},"audio/fwdred":{"source":"iana"},"audio/g711-0":{"source":"iana"},"audio/g719":{"source":"iana"},"audio/g722":{"source":"iana"},"audio/g7221":{"source":"iana"},"audio/g723":{"source":"iana"},"audio/g726-16":{"source":"iana"},"audio/g726-24":{"source":"iana"},"audio/g726-32":{"source":"iana"},"audio/g726-40":{"source":"iana"},"audio/g728":{"source":"iana"},"audio/g729":{"source":"iana"},"audio/g7291":{"source":"iana"},"audio/g729d":{"source":"iana"},"audio/g729e":{"source":"iana"},"audio/gsm":{"source":"iana"},"audio/gsm-efr":{"source":"iana"},"audio/gsm-hr-08":{"source":"iana"},"audio/ilbc":{"source":"iana"},"audio/ip-mr_v2.5":{"source":"iana"},"audio/isac":{"source":"apache"},"audio/l16":{"source":"iana"},"audio/l20":{"source":"iana"},"audio/l24":{"source":"iana","compressible":false},"audio/l8":{"source":"iana"},"audio/lpc":{"source":"iana"},"audio/melp":{"source":"iana"},"audio/melp1200":{"source":"iana"},"audio/melp2400":{"source":"iana"},"audio/melp600":{"source":"iana"},"audio/midi":{"source":"apache","extensions":["mid","midi","kar","rmi"]},"audio/mobile-xmf":{"source":"iana","extensions":["mxmf"]},"audio/mp3":{"compressible":false,"extensions":["mp3"]},"audio/mp4":{"source":"iana","compressible":false,"extensions":["m4a","mp4a"]},"audio/mp4a-latm":{"source":"iana"},"audio/mpa":{"source":"iana"},"audio/mpa-robust":{"source":"iana"},"audio/mpeg":{"source":"iana","compressible":false,"extensions":["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{"source":"iana"},"audio/musepack":{"source":"apache"},"audio/ogg":{"source":"iana","compressible":false,"extensions":["oga","ogg","spx"]},"audio/opus":{"source":"iana"},"audio/parityfec":{"source":"iana"},"audio/pcma":{"source":"iana"},"audio/pcma-wb":{"source":"iana"},"audio/pcmu":{"source":"iana"},"audio/pcmu-wb":{"source":"iana"},"audio/prs.sid":{"source":"iana"},"audio/qcelp":{"source":"iana"},"audio/raptorfec":{"source":"iana"},"audio/red":{"source":"iana"},"audio/rtp-enc-aescm128":{"source":"iana"},"audio/rtp-midi":{"source":"iana"},"audio/rtploopback":{"source":"iana"},"audio/rtx":{"source":"iana"},"audio/s3m":{"source":"apache","extensions":["s3m"]},"audio/silk":{"source":"apache","extensions":["sil"]},"audio/smv":{"source":"iana"},"audio/smv-qcp":{"source":"iana"},"audio/smv0":{"source":"iana"},"audio/sp-midi":{"source":"iana"},"audio/speex":{"source":"iana"},"audio/t140c":{"source":"iana"},"audio/t38":{"source":"iana"},"audio/telephone-event":{"source":"iana"},"audio/tetra_acelp":{"source":"iana"},"audio/tone":{"source":"iana"},"audio/uemclip":{"source":"iana"},"audio/ulpfec":{"source":"iana"},"audio/usac":{"source":"iana"},"audio/vdvi":{"source":"iana"},"audio/vmr-wb":{"source":"iana"},"audio/vnd.3gpp.iufp":{"source":"iana"},"audio/vnd.4sb":{"source":"iana"},"audio/vnd.audiokoz":{"source":"iana"},"audio/vnd.celp":{"source":"iana"},"audio/vnd.cisco.nse":{"source":"iana"},"audio/vnd.cmles.radio-events":{"source":"iana"},"audio/vnd.cns.anp1":{"source":"iana"},"audio/vnd.cns.inf1":{"source":"iana"},"audio/vnd.dece.audio":{"source":"iana","extensions":["uva","uvva"]},"audio/vnd.digital-winds":{"source":"iana","extensions":["eol"]},"audio/vnd.dlna.adts":{"source":"iana"},"audio/vnd.dolby.heaac.1":{"source":"iana"},"audio/vnd.dolby.heaac.2":{"source":"iana"},"audio/vnd.dolby.mlp":{"source":"iana"},"audio/vnd.dolby.mps":{"source":"iana"},"audio/vnd.dolby.pl2":{"source":"iana"},"audio/vnd.dolby.pl2x":{"source":"iana"},"audio/vnd.dolby.pl2z":{"source":"iana"},"audio/vnd.dolby.pulse.1":{"source":"iana"},"audio/vnd.dra":{"source":"iana","extensions":["dra"]},"audio/vnd.dts":{"source":"iana","extensions":["dts"]},"audio/vnd.dts.hd":{"source":"iana","extensions":["dtshd"]},"audio/vnd.dts.uhd":{"source":"iana"},"audio/vnd.dvb.file":{"source":"iana"},"audio/vnd.everad.plj":{"source":"iana"},"audio/vnd.hns.audio":{"source":"iana"},"audio/vnd.lucent.voice":{"source":"iana","extensions":["lvp"]},"audio/vnd.ms-playready.media.pya":{"source":"iana","extensions":["pya"]},"audio/vnd.nokia.mobile-xmf":{"source":"iana"},"audio/vnd.nortel.vbk":{"source":"iana"},"audio/vnd.nuera.ecelp4800":{"source":"iana","extensions":["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{"source":"iana","extensions":["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{"source":"iana","extensions":["ecelp9600"]},"audio/vnd.octel.sbc":{"source":"iana"},"audio/vnd.presonus.multitrack":{"source":"iana"},"audio/vnd.qcelp":{"source":"iana"},"audio/vnd.rhetorex.32kadpcm":{"source":"iana"},"audio/vnd.rip":{"source":"iana","extensions":["rip"]},"audio/vnd.rn-realaudio":{"compressible":false},"audio/vnd.sealedmedia.softseal.mpeg":{"source":"iana"},"audio/vnd.vmx.cvsd":{"source":"iana"},"audio/vnd.wave":{"compressible":false},"audio/vorbis":{"source":"iana","compressible":false},"audio/vorbis-config":{"source":"iana"},"audio/wav":{"compressible":false,"extensions":["wav"]},"audio/wave":{"compressible":false,"extensions":["wav"]},"audio/webm":{"source":"apache","compressible":false,"extensions":["weba"]},"audio/x-aac":{"source":"apache","compressible":false,"extensions":["aac"]},"audio/x-aiff":{"source":"apache","extensions":["aif","aiff","aifc"]},"audio/x-caf":{"source":"apache","compressible":false,"extensions":["caf"]},"audio/x-flac":{"source":"apache","extensions":["flac"]},"audio/x-m4a":{"source":"nginx","extensions":["m4a"]},"audio/x-matroska":{"source":"apache","extensions":["mka"]},"audio/x-mpegurl":{"source":"apache","extensions":["m3u"]},"audio/x-ms-wax":{"source":"apache","extensions":["wax"]},"audio/x-ms-wma":{"source":"apache","extensions":["wma"]},"audio/x-pn-realaudio":{"source":"apache","extensions":["ram","ra"]},"audio/x-pn-realaudio-plugin":{"source":"apache","extensions":["rmp"]},"audio/x-realaudio":{"source":"nginx","extensions":["ra"]},"audio/x-tta":{"source":"apache"},"audio/x-wav":{"source":"apache","extensions":["wav"]},"audio/xm":{"source":"apache","extensions":["xm"]},"chemical/x-cdx":{"source":"apache","extensions":["cdx"]},"chemical/x-cif":{"source":"apache","extensions":["cif"]},"chemical/x-cmdf":{"source":"apache","extensions":["cmdf"]},"chemical/x-cml":{"source":"apache","extensions":["cml"]},"chemical/x-csml":{"source":"apache","extensions":["csml"]},"chemical/x-pdb":{"source":"apache"},"chemical/x-xyz":{"source":"apache","extensions":["xyz"]},"font/collection":{"source":"iana","extensions":["ttc"]},"font/otf":{"source":"iana","compressible":true,"extensions":["otf"]},"font/sfnt":{"source":"iana"},"font/ttf":{"source":"iana","compressible":true,"extensions":["ttf"]},"font/woff":{"source":"iana","extensions":["woff"]},"font/woff2":{"source":"iana","extensions":["woff2"]},"image/aces":{"source":"iana","extensions":["exr"]},"image/apng":{"compressible":false,"extensions":["apng"]},"image/avci":{"source":"iana"},"image/avcs":{"source":"iana"},"image/bmp":{"source":"iana","compressible":true,"extensions":["bmp"]},"image/cgm":{"source":"iana","extensions":["cgm"]},"image/dicom-rle":{"source":"iana","extensions":["drle"]},"image/emf":{"source":"iana","extensions":["emf"]},"image/fits":{"source":"iana","extensions":["fits"]},"image/g3fax":{"source":"iana","extensions":["g3"]},"image/gif":{"source":"iana","compressible":false,"extensions":["gif"]},"image/heic":{"source":"iana","extensions":["heic"]},"image/heic-sequence":{"source":"iana","extensions":["heics"]},"image/heif":{"source":"iana","extensions":["heif"]},"image/heif-sequence":{"source":"iana","extensions":["heifs"]},"image/hej2k":{"source":"iana","extensions":["hej2"]},"image/hsj2":{"source":"iana","extensions":["hsj2"]},"image/ief":{"source":"iana","extensions":["ief"]},"image/jls":{"source":"iana","extensions":["jls"]},"image/jp2":{"source":"iana","compressible":false,"extensions":["jp2","jpg2"]},"image/jpeg":{"source":"iana","compressible":false,"extensions":["jpeg","jpg","jpe"]},"image/jph":{"source":"iana","extensions":["jph"]},"image/jphc":{"source":"iana","extensions":["jhc"]},"image/jpm":{"source":"iana","compressible":false,"extensions":["jpm"]},"image/jpx":{"source":"iana","compressible":false,"extensions":["jpx","jpf"]},"image/jxr":{"source":"iana","extensions":["jxr"]},"image/jxra":{"source":"iana","extensions":["jxra"]},"image/jxrs":{"source":"iana","extensions":["jxrs"]},"image/jxs":{"source":"iana","extensions":["jxs"]},"image/jxsc":{"source":"iana","extensions":["jxsc"]},"image/jxsi":{"source":"iana","extensions":["jxsi"]},"image/jxss":{"source":"iana","extensions":["jxss"]},"image/ktx":{"source":"iana","extensions":["ktx"]},"image/naplps":{"source":"iana"},"image/pjpeg":{"compressible":false},"image/png":{"source":"iana","compressible":false,"extensions":["png"]},"image/prs.btif":{"source":"iana","extensions":["btif"]},"image/prs.pti":{"source":"iana","extensions":["pti"]},"image/pwg-raster":{"source":"iana"},"image/sgi":{"source":"apache","extensions":["sgi"]},"image/svg+xml":{"source":"iana","compressible":true,"extensions":["svg","svgz"]},"image/t38":{"source":"iana","extensions":["t38"]},"image/tiff":{"source":"iana","compressible":false,"extensions":["tif","tiff"]},"image/tiff-fx":{"source":"iana","extensions":["tfx"]},"image/vnd.adobe.photoshop":{"source":"iana","compressible":true,"extensions":["psd"]},"image/vnd.airzip.accelerator.azv":{"source":"iana","extensions":["azv"]},"image/vnd.cns.inf2":{"source":"iana"},"image/vnd.dece.graphic":{"source":"iana","extensions":["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{"source":"iana","extensions":["djvu","djv"]},"image/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"image/vnd.dwg":{"source":"iana","extensions":["dwg"]},"image/vnd.dxf":{"source":"iana","extensions":["dxf"]},"image/vnd.fastbidsheet":{"source":"iana","extensions":["fbs"]},"image/vnd.fpx":{"source":"iana","extensions":["fpx"]},"image/vnd.fst":{"source":"iana","extensions":["fst"]},"image/vnd.fujixerox.edmics-mmr":{"source":"iana","extensions":["mmr"]},"image/vnd.fujixerox.edmics-rlc":{"source":"iana","extensions":["rlc"]},"image/vnd.globalgraphics.pgb":{"source":"iana"},"image/vnd.microsoft.icon":{"source":"iana","extensions":["ico"]},"image/vnd.mix":{"source":"iana"},"image/vnd.mozilla.apng":{"source":"iana"},"image/vnd.ms-dds":{"extensions":["dds"]},"image/vnd.ms-modi":{"source":"iana","extensions":["mdi"]},"image/vnd.ms-photo":{"source":"apache","extensions":["wdp"]},"image/vnd.net-fpx":{"source":"iana","extensions":["npx"]},"image/vnd.radiance":{"source":"iana"},"image/vnd.sealed.png":{"source":"iana"},"image/vnd.sealedmedia.softseal.gif":{"source":"iana"},"image/vnd.sealedmedia.softseal.jpg":{"source":"iana"},"image/vnd.svf":{"source":"iana"},"image/vnd.tencent.tap":{"source":"iana","extensions":["tap"]},"image/vnd.valve.source.texture":{"source":"iana","extensions":["vtf"]},"image/vnd.wap.wbmp":{"source":"iana","extensions":["wbmp"]},"image/vnd.xiff":{"source":"iana","extensions":["xif"]},"image/vnd.zbrush.pcx":{"source":"iana","extensions":["pcx"]},"image/webp":{"source":"apache","extensions":["webp"]},"image/wmf":{"source":"iana","extensions":["wmf"]},"image/x-3ds":{"source":"apache","extensions":["3ds"]},"image/x-cmu-raster":{"source":"apache","extensions":["ras"]},"image/x-cmx":{"source":"apache","extensions":["cmx"]},"image/x-freehand":{"source":"apache","extensions":["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{"source":"apache","compressible":true,"extensions":["ico"]},"image/x-jng":{"source":"nginx","extensions":["jng"]},"image/x-mrsid-image":{"source":"apache","extensions":["sid"]},"image/x-ms-bmp":{"source":"nginx","compressible":true,"extensions":["bmp"]},"image/x-pcx":{"source":"apache","extensions":["pcx"]},"image/x-pict":{"source":"apache","extensions":["pic","pct"]},"image/x-portable-anymap":{"source":"apache","extensions":["pnm"]},"image/x-portable-bitmap":{"source":"apache","extensions":["pbm"]},"image/x-portable-graymap":{"source":"apache","extensions":["pgm"]},"image/x-portable-pixmap":{"source":"apache","extensions":["ppm"]},"image/x-rgb":{"source":"apache","extensions":["rgb"]},"image/x-tga":{"source":"apache","extensions":["tga"]},"image/x-xbitmap":{"source":"apache","extensions":["xbm"]},"image/x-xcf":{"compressible":false},"image/x-xpixmap":{"source":"apache","extensions":["xpm"]},"image/x-xwindowdump":{"source":"apache","extensions":["xwd"]},"message/cpim":{"source":"iana"},"message/delivery-status":{"source":"iana"},"message/disposition-notification":{"source":"iana","extensions":["disposition-notification"]},"message/external-body":{"source":"iana"},"message/feedback-report":{"source":"iana"},"message/global":{"source":"iana","extensions":["u8msg"]},"message/global-delivery-status":{"source":"iana","extensions":["u8dsn"]},"message/global-disposition-notification":{"source":"iana","extensions":["u8mdn"]},"message/global-headers":{"source":"iana","extensions":["u8hdr"]},"message/http":{"source":"iana","compressible":false},"message/imdn+xml":{"source":"iana","compressible":true},"message/news":{"source":"iana"},"message/partial":{"source":"iana","compressible":false},"message/rfc822":{"source":"iana","compressible":true,"extensions":["eml","mime"]},"message/s-http":{"source":"iana"},"message/sip":{"source":"iana"},"message/sipfrag":{"source":"iana"},"message/tracking-status":{"source":"iana"},"message/vnd.si.simp":{"source":"iana"},"message/vnd.wfa.wsc":{"source":"iana","extensions":["wsc"]},"model/3mf":{"source":"iana","extensions":["3mf"]},"model/gltf+json":{"source":"iana","compressible":true,"extensions":["gltf"]},"model/gltf-binary":{"source":"iana","compressible":true,"extensions":["glb"]},"model/iges":{"source":"iana","compressible":false,"extensions":["igs","iges"]},"model/mesh":{"source":"iana","compressible":false,"extensions":["msh","mesh","silo"]},"model/stl":{"source":"iana","extensions":["stl"]},"model/vnd.collada+xml":{"source":"iana","compressible":true,"extensions":["dae"]},"model/vnd.dwf":{"source":"iana","extensions":["dwf"]},"model/vnd.flatland.3dml":{"source":"iana"},"model/vnd.gdl":{"source":"iana","extensions":["gdl"]},"model/vnd.gs-gdl":{"source":"apache"},"model/vnd.gs.gdl":{"source":"iana"},"model/vnd.gtw":{"source":"iana","extensions":["gtw"]},"model/vnd.moml+xml":{"source":"iana","compressible":true},"model/vnd.mts":{"source":"iana","extensions":["mts"]},"model/vnd.opengex":{"source":"iana","extensions":["ogex"]},"model/vnd.parasolid.transmit.binary":{"source":"iana","extensions":["x_b"]},"model/vnd.parasolid.transmit.text":{"source":"iana","extensions":["x_t"]},"model/vnd.rosette.annotated-data-model":{"source":"iana"},"model/vnd.usdz+zip":{"source":"iana","compressible":false,"extensions":["usdz"]},"model/vnd.valve.source.compiled-map":{"source":"iana","extensions":["bsp"]},"model/vnd.vtu":{"source":"iana","extensions":["vtu"]},"model/vrml":{"source":"iana","compressible":false,"extensions":["wrl","vrml"]},"model/x3d+binary":{"source":"apache","compressible":false,"extensions":["x3db","x3dbz"]},"model/x3d+fastinfoset":{"source":"iana","extensions":["x3db"]},"model/x3d+vrml":{"source":"apache","compressible":false,"extensions":["x3dv","x3dvz"]},"model/x3d+xml":{"source":"iana","compressible":true,"extensions":["x3d","x3dz"]},"model/x3d-vrml":{"source":"iana","extensions":["x3dv"]},"multipart/alternative":{"source":"iana","compressible":false},"multipart/appledouble":{"source":"iana"},"multipart/byteranges":{"source":"iana"},"multipart/digest":{"source":"iana"},"multipart/encrypted":{"source":"iana","compressible":false},"multipart/form-data":{"source":"iana","compressible":false},"multipart/header-set":{"source":"iana"},"multipart/mixed":{"source":"iana"},"multipart/multilingual":{"source":"iana"},"multipart/parallel":{"source":"iana"},"multipart/related":{"source":"iana","compressible":false},"multipart/report":{"source":"iana"},"multipart/signed":{"source":"iana","compressible":false},"multipart/vnd.bint.med-plus":{"source":"iana"},"multipart/voice-message":{"source":"iana"},"multipart/x-mixed-replace":{"source":"iana"},"text/1d-interleaved-parityfec":{"source":"iana"},"text/cache-manifest":{"source":"iana","compressible":true,"extensions":["appcache","manifest"]},"text/calendar":{"source":"iana","extensions":["ics","ifb"]},"text/calender":{"compressible":true},"text/cmd":{"compressible":true},"text/coffeescript":{"extensions":["coffee","litcoffee"]},"text/css":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["css"]},"text/csv":{"source":"iana","compressible":true,"extensions":["csv"]},"text/csv-schema":{"source":"iana"},"text/directory":{"source":"iana"},"text/dns":{"source":"iana"},"text/ecmascript":{"source":"iana"},"text/encaprtp":{"source":"iana"},"text/enriched":{"source":"iana"},"text/flexfec":{"source":"iana"},"text/fwdred":{"source":"iana"},"text/grammar-ref-list":{"source":"iana"},"text/html":{"source":"iana","compressible":true,"extensions":["html","htm","shtml"]},"text/jade":{"extensions":["jade"]},"text/javascript":{"source":"iana","compressible":true},"text/jcr-cnd":{"source":"iana"},"text/jsx":{"compressible":true,"extensions":["jsx"]},"text/less":{"compressible":true,"extensions":["less"]},"text/markdown":{"source":"iana","compressible":true,"extensions":["markdown","md"]},"text/mathml":{"source":"nginx","extensions":["mml"]},"text/mdx":{"compressible":true,"extensions":["mdx"]},"text/mizar":{"source":"iana"},"text/n3":{"source":"iana","compressible":true,"extensions":["n3"]},"text/parameters":{"source":"iana"},"text/parityfec":{"source":"iana"},"text/plain":{"source":"iana","compressible":true,"extensions":["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{"source":"iana"},"text/prs.fallenstein.rst":{"source":"iana"},"text/prs.lines.tag":{"source":"iana","extensions":["dsc"]},"text/prs.prop.logic":{"source":"iana"},"text/raptorfec":{"source":"iana"},"text/red":{"source":"iana"},"text/rfc822-headers":{"source":"iana"},"text/richtext":{"source":"iana","compressible":true,"extensions":["rtx"]},"text/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"text/rtp-enc-aescm128":{"source":"iana"},"text/rtploopback":{"source":"iana"},"text/rtx":{"source":"iana"},"text/sgml":{"source":"iana","extensions":["sgml","sgm"]},"text/shex":{"extensions":["shex"]},"text/slim":{"extensions":["slim","slm"]},"text/strings":{"source":"iana"},"text/stylus":{"extensions":["stylus","styl"]},"text/t140":{"source":"iana"},"text/tab-separated-values":{"source":"iana","compressible":true,"extensions":["tsv"]},"text/troff":{"source":"iana","extensions":["t","tr","roff","man","me","ms"]},"text/turtle":{"source":"iana","charset":"UTF-8","extensions":["ttl"]},"text/ulpfec":{"source":"iana"},"text/uri-list":{"source":"iana","compressible":true,"extensions":["uri","uris","urls"]},"text/vcard":{"source":"iana","compressible":true,"extensions":["vcard"]},"text/vnd.a":{"source":"iana"},"text/vnd.abc":{"source":"iana"},"text/vnd.ascii-art":{"source":"iana"},"text/vnd.curl":{"source":"iana","extensions":["curl"]},"text/vnd.curl.dcurl":{"source":"apache","extensions":["dcurl"]},"text/vnd.curl.mcurl":{"source":"apache","extensions":["mcurl"]},"text/vnd.curl.scurl":{"source":"apache","extensions":["scurl"]},"text/vnd.debian.copyright":{"source":"iana"},"text/vnd.dmclientscript":{"source":"iana"},"text/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"text/vnd.esmertec.theme-descriptor":{"source":"iana"},"text/vnd.ficlab.flt":{"source":"iana"},"text/vnd.fly":{"source":"iana","extensions":["fly"]},"text/vnd.fmi.flexstor":{"source":"iana","extensions":["flx"]},"text/vnd.gml":{"source":"iana"},"text/vnd.graphviz":{"source":"iana","extensions":["gv"]},"text/vnd.hgl":{"source":"iana"},"text/vnd.in3d.3dml":{"source":"iana","extensions":["3dml"]},"text/vnd.in3d.spot":{"source":"iana","extensions":["spot"]},"text/vnd.iptc.newsml":{"source":"iana"},"text/vnd.iptc.nitf":{"source":"iana"},"text/vnd.latex-z":{"source":"iana"},"text/vnd.motorola.reflex":{"source":"iana"},"text/vnd.ms-mediapackage":{"source":"iana"},"text/vnd.net2phone.commcenter.command":{"source":"iana"},"text/vnd.radisys.msml-basic-layout":{"source":"iana"},"text/vnd.senx.warpscript":{"source":"iana"},"text/vnd.si.uricatalogue":{"source":"iana"},"text/vnd.sosi":{"source":"iana"},"text/vnd.sun.j2me.app-descriptor":{"source":"iana","extensions":["jad"]},"text/vnd.trolltech.linguist":{"source":"iana"},"text/vnd.wap.si":{"source":"iana"},"text/vnd.wap.sl":{"source":"iana"},"text/vnd.wap.wml":{"source":"iana","extensions":["wml"]},"text/vnd.wap.wmlscript":{"source":"iana","extensions":["wmls"]},"text/vtt":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["vtt"]},"text/x-asm":{"source":"apache","extensions":["s","asm"]},"text/x-c":{"source":"apache","extensions":["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{"source":"nginx","extensions":["htc"]},"text/x-fortran":{"source":"apache","extensions":["f","for","f77","f90"]},"text/x-gwt-rpc":{"compressible":true},"text/x-handlebars-template":{"extensions":["hbs"]},"text/x-java-source":{"source":"apache","extensions":["java"]},"text/x-jquery-tmpl":{"compressible":true},"text/x-lua":{"extensions":["lua"]},"text/x-markdown":{"compressible":true,"extensions":["mkd"]},"text/x-nfo":{"source":"apache","extensions":["nfo"]},"text/x-opml":{"source":"apache","extensions":["opml"]},"text/x-org":{"compressible":true,"extensions":["org"]},"text/x-pascal":{"source":"apache","extensions":["p","pas"]},"text/x-processing":{"compressible":true,"extensions":["pde"]},"text/x-sass":{"extensions":["sass"]},"text/x-scss":{"extensions":["scss"]},"text/x-setext":{"source":"apache","extensions":["etx"]},"text/x-sfv":{"source":"apache","extensions":["sfv"]},"text/x-suse-ymp":{"compressible":true,"extensions":["ymp"]},"text/x-uuencode":{"source":"apache","extensions":["uu"]},"text/x-vcalendar":{"source":"apache","extensions":["vcs"]},"text/x-vcard":{"source":"apache","extensions":["vcf"]},"text/xml":{"source":"iana","compressible":true,"extensions":["xml"]},"text/xml-external-parsed-entity":{"source":"iana"},"text/yaml":{"extensions":["yaml","yml"]},"video/1d-interleaved-parityfec":{"source":"iana"},"video/3gpp":{"source":"iana","extensions":["3gp","3gpp"]},"video/3gpp-tt":{"source":"iana"},"video/3gpp2":{"source":"iana","extensions":["3g2"]},"video/bmpeg":{"source":"iana"},"video/bt656":{"source":"iana"},"video/celb":{"source":"iana"},"video/dv":{"source":"iana"},"video/encaprtp":{"source":"iana"},"video/flexfec":{"source":"iana"},"video/h261":{"source":"iana","extensions":["h261"]},"video/h263":{"source":"iana","extensions":["h263"]},"video/h263-1998":{"source":"iana"},"video/h263-2000":{"source":"iana"},"video/h264":{"source":"iana","extensions":["h264"]},"video/h264-rcdo":{"source":"iana"},"video/h264-svc":{"source":"iana"},"video/h265":{"source":"iana"},"video/iso.segment":{"source":"iana"},"video/jpeg":{"source":"iana","extensions":["jpgv"]},"video/jpeg2000":{"source":"iana"},"video/jpm":{"source":"apache","extensions":["jpm","jpgm"]},"video/mj2":{"source":"iana","extensions":["mj2","mjp2"]},"video/mp1s":{"source":"iana"},"video/mp2p":{"source":"iana"},"video/mp2t":{"source":"iana","extensions":["ts"]},"video/mp4":{"source":"iana","compressible":false,"extensions":["mp4","mp4v","mpg4"]},"video/mp4v-es":{"source":"iana"},"video/mpeg":{"source":"iana","compressible":false,"extensions":["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{"source":"iana"},"video/mpv":{"source":"iana"},"video/nv":{"source":"iana"},"video/ogg":{"source":"iana","compressible":false,"extensions":["ogv"]},"video/parityfec":{"source":"iana"},"video/pointer":{"source":"iana"},"video/quicktime":{"source":"iana","compressible":false,"extensions":["qt","mov"]},"video/raptorfec":{"source":"iana"},"video/raw":{"source":"iana"},"video/rtp-enc-aescm128":{"source":"iana"},"video/rtploopback":{"source":"iana"},"video/rtx":{"source":"iana"},"video/smpte291":{"source":"iana"},"video/smpte292m":{"source":"iana"},"video/ulpfec":{"source":"iana"},"video/vc1":{"source":"iana"},"video/vc2":{"source":"iana"},"video/vnd.cctv":{"source":"iana"},"video/vnd.dece.hd":{"source":"iana","extensions":["uvh","uvvh"]},"video/vnd.dece.mobile":{"source":"iana","extensions":["uvm","uvvm"]},"video/vnd.dece.mp4":{"source":"iana"},"video/vnd.dece.pd":{"source":"iana","extensions":["uvp","uvvp"]},"video/vnd.dece.sd":{"source":"iana","extensions":["uvs","uvvs"]},"video/vnd.dece.video":{"source":"iana","extensions":["uvv","uvvv"]},"video/vnd.directv.mpeg":{"source":"iana"},"video/vnd.directv.mpeg-tts":{"source":"iana"},"video/vnd.dlna.mpeg-tts":{"source":"iana"},"video/vnd.dvb.file":{"source":"iana","extensions":["dvb"]},"video/vnd.fvt":{"source":"iana","extensions":["fvt"]},"video/vnd.hns.video":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.ttsavc":{"source":"iana"},"video/vnd.iptvforum.ttsmpeg2":{"source":"iana"},"video/vnd.motorola.video":{"source":"iana"},"video/vnd.motorola.videop":{"source":"iana"},"video/vnd.mpegurl":{"source":"iana","extensions":["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{"source":"iana","extensions":["pyv"]},"video/vnd.nokia.interleaved-multimedia":{"source":"iana"},"video/vnd.nokia.mp4vr":{"source":"iana"},"video/vnd.nokia.videovoip":{"source":"iana"},"video/vnd.objectvideo":{"source":"iana"},"video/vnd.radgamettools.bink":{"source":"iana"},"video/vnd.radgamettools.smacker":{"source":"iana"},"video/vnd.sealed.mpeg1":{"source":"iana"},"video/vnd.sealed.mpeg4":{"source":"iana"},"video/vnd.sealed.swf":{"source":"iana"},"video/vnd.sealedmedia.softseal.mov":{"source":"iana"},"video/vnd.uvvu.mp4":{"source":"iana","extensions":["uvu","uvvu"]},"video/vnd.vivo":{"source":"iana","extensions":["viv"]},"video/vnd.youtube.yt":{"source":"iana"},"video/vp8":{"source":"iana"},"video/webm":{"source":"apache","compressible":false,"extensions":["webm"]},"video/x-f4v":{"source":"apache","extensions":["f4v"]},"video/x-fli":{"source":"apache","extensions":["fli"]},"video/x-flv":{"source":"apache","compressible":false,"extensions":["flv"]},"video/x-m4v":{"source":"apache","extensions":["m4v"]},"video/x-matroska":{"source":"apache","compressible":false,"extensions":["mkv","mk3d","mks"]},"video/x-mng":{"source":"apache","extensions":["mng"]},"video/x-ms-asf":{"source":"apache","extensions":["asf","asx"]},"video/x-ms-vob":{"source":"apache","extensions":["vob"]},"video/x-ms-wm":{"source":"apache","extensions":["wm"]},"video/x-ms-wmv":{"source":"apache","compressible":false,"extensions":["wmv"]},"video/x-ms-wmx":{"source":"apache","extensions":["wmx"]},"video/x-ms-wvx":{"source":"apache","extensions":["wvx"]},"video/x-msvideo":{"source":"apache","extensions":["avi"]},"video/x-sgi-movie":{"source":"apache","extensions":["movie"]},"video/x-smv":{"source":"apache","extensions":["smv"]},"x-conference/x-cooltalk":{"source":"apache","extensions":["ice"]},"x-shader/x-fragment":{"compressible":true},"x-shader/x-vertex":{"compressible":true}}')},function(e,n,i){e.exports={parallel:i(432),serial:i(434),serialOrdered:i(171)}},function(e,n,i){var t=i(166),a=i(169),o=i(170);e.exports=function(e,n,i){var r=a(e);for(;r.index<(r.keyedList||e).length;)t(e,n,r,(function(e,n){e?i(e,n):0!==Object.keys(r.jobs).length||i(null,r.results)})),r.index++;return o.bind(r,i)}},function(e,n){e.exports=function(e){var n="function"==typeof setImmediate?setImmediate:"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:null;n?n(e):setTimeout(e,0)}},function(e,n,i){var t=i(171);e.exports=function(e,n,i){return t(e,n,null,i)}},function(e,n){e.exports=function(e,n){return Object.keys(n).forEach((function(i){e[i]=e[i]||n[i]})),e}},function(e,n,i){e.exports={readdirr:i(112).readdirr,rmdirr:i(113).rmdirr,rmdirs:i(113).rmdirs,rmfiles:i(113).rmfiles,cpdirr:i(114).cpdirr,cpdirs:i(114).cpdirs,cpfiles:i(114).cpfiles}},function(e,n,i){"use strict";i.r(n);var t=i(8),a=i.n(t),o="https://api.pinata.cloud",r=i(29),s=i.n(r);function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(!e||""===e)throw new Error("No pinataApiKey provided! Please provide your pinata api key as an argument when you start this script");if(!n||""===n)throw new Error("No pinataSecretApiKey provided! Please provide your pinata secret api key as an argument when you start this script")}function u(e){if(!Array.isArray(e))throw new Error("host_nodes value must be an array");e.forEach((function(e){if(!s.a.peerMultiaddr(e))throw new Error("host_node array entry: ".concat(e," is not a valid peer multiaddr"))}))}function l(e){if(e.name&&!("string"==typeof e.name||e.name instanceof String))throw new Error("metadata name must be of type string");if(e.keyvalues){if("object"!==c(e.keyvalues))throw new Error("metatadata keyvalues must be an object");var n=0;Object.entries(e.keyvalues).forEach((function(e){if(n>9)throw new Error("No more than 10 keyvalues can be provided for metadata entries");if("string"!=typeof e[1]&&"boolean"!=typeof e[1]&&isNaN(e[1]))throw new Error("Metadata keyvalue values must be strings, booleans, or numbers");n++}))}}function f(e){if("object"!==c(e))throw new Error("options must be an object");if(e.cidVersion&&0!=e.cidVersion&&1!=e.cidVersion)throw new Error("unsupported or invalid cidVersion");if(e.wrapWithDirectory&&!0!==e.wrapWithDirectory&&!1!==e.wrapWithDirectory)throw new Error("wrapWithDirectory must be a boolean value of true or false")}var d=i(76),m=i.n(d),v=i(58),h=i.n(v);var x=i(172),b=i.n(x),g=i(57),k=i(436);function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,n,i){p(e,n);var t="".concat(o,"/pinning/pinJobs");return i&&(t=function(e,n){if(!e)throw new Error("no baseUrl provided");if(!n)return e;var i=e,t=!1;function a(e){t?i="".concat(i,"&").concat(e):(t=!0,i="".concat(i,"?").concat(e))}if(n){if(n.sort){if("ASC"!==n.sort&&"DESC"!==n.sort)throw new Error("Unknown sort value: ".concat(n.sort," provided"));a("sort=".concat(n.sort))}if(n.status){if("searching"!==n.status&&"expired"!==n.status&&"over_free_limit"!==n.status&&"over_max_size"!==n.status&&"invalid_object"!==n.status&&"bad_host_node"!==n.status)throw new Error("Unknown status value: ".concat(n.status," provided"));a("status=".concat(n.status))}if(n.ipfs_pin_hash){if(!s.a.cid(n.ipfs_pin_hash))throw new Error("Invalid IPFS hash: ".concat(n.ipfs_pin_hash));a("ipfs_pin_hash=".concat(n.ipfs_pin_hash))}if(n.limit){if(!(Number.isInteger(n.limit)&&n.limit>0&&n.limit<100))throw new Error("Invalid limit: ".concat(n.limit,". Valid limits are 1-100"));a("limit=".concat(n.limit))}if(n.offset){if(!(Number.isInteger(n.offset)&&n.offset>0))throw new Error("Invalid offset: ".concat(n.offset,". Please provide a positive integer for the offset"));a("offset=".concat(n.offset))}}return i}(t,i)),new Promise((function(i,o){a.a.get(t,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while attempting to retrieve pin jobs: ".concat(e))),i(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?o(new Error(e.response.data.error)):o(e)}))}))}function S(e){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _(e){var n=new Date(Date.parse(e));try{if(n.toISOString()===e)return e;throw new Error("dates must be in valid ISO_8601 format")}catch(e){throw new Error("dates must be in valid ISO_8601 format")}}function j(e,n,i){p(e,n);var t=function(e,n){if(!e)throw new Error("no baseUrl provided");var i="?",t="";if(n){if(n.hashContains){if("string"!=typeof n.hashContains)throw new Error("hashContains value is not a string");i+="hashContains=".concat(n.hashContains,"&")}if(n.pinStart&&(i+="pinStart=".concat(_(n.pinStart),"&")),n.pinEnd&&(i+="pinEnd=".concat(_(n.pinEnd),"&")),n.unpinStart&&(i+="unpinStart=".concat(_(n.unpinStart),"&")),n.unpinEnd&&(i+="unpinEnd=".concat(_(n.unpinEnd),"&")),n.pinSizeMin){if(isNaN(n.pinSizeMin)||n.pinSizeMin<0)throw new Error("Please make sure the pinSizeMin is a valid positive integer");i+="pinSizeMin=".concat(n.pinSizeMin,"&")}if(n.pinSizeMax){if(isNaN(n.pinSizeMax)||n.pinSizeMax<0)throw new Error("Please make sure the pinSizeMax is a valid positive integer");i+="pinSizeMax=".concat(n.pinSizeMax,"&")}if(n.status){if("all"!==n.status&&"pinned"!==n.status&&"unpinned"!==n.status)throw new Error("status value must be either: all, pinned, or unpinned");i+="status=".concat(n.status,"&")}if(n.pageLimit){if(isNaN(n.pageLimit)||n.pageLimit<=0||n.pageLimit>1e3)throw new Error("Please make sure the pageLimit is a valid integer between 1-1000");i+="pageLimit=".concat(parseInt(n.pageLimit),"&")}if(n.pageOffset){if(isNaN(n.pageOffset)||n.pageOffset<=0)throw new Error("Please make sure the pageOffset is a positive integer");i+="pageOffset=".concat(parseInt(n.pageOffset),"&")}if(n.metadata){if("object"!==S(n.metadata))throw new Error("metadata value must be an object");if(n.metadata.name&&(t="metadata[name]=".concat(n.metadata.name,"&")),n.metadata.keyvalues){if("object"!==S(n.metadata.keyvalues))throw new Error("metadata keyvalues must be an object");var a={};Object.entries(n.metadata.keyvalues).forEach((function(e){var n=e[0],i=e[1];if("object"!==S(i))throw new Error("keyValue: ".concat(n," is not an object"));if(!i||!i.value||!i.op)throw new Error("keyValue: ".concat(n," must have both value and op attributes"));if("string"!=typeof i.value&&"boolean"!=typeof i.value&&"number"!=typeof i.value)throw new Error("Metadata keyvalue values must be strings, booleans, or numbers");switch(i.op){case"gt":case"gte":case"lt":case"lte":case"ne":case"eq":a[n]={value:i.value,op:i.op};break;case"between":if(!i.secondValue)throw new Error("Because between op code was passed in, keyValue: ".concat(e[0]," must have both also include a secondValue"));if("string"!=typeof i.secondValue&&"boolean"!=typeof i.secondValue&&"number"!=typeof i.secondValue)throw new Error("Metadata keyvalue secondValue must be a string, boolean, or number");a[n]={value:i.value,op:i.op,secondValue:i.secondValue};break;case"notBetween":if(!i.secondValue)throw new Error("Because notBetween op code was passed in, keyValue: ".concat(e[0]," must have both also include a secondValue"));if("string"!=typeof i.secondValue&&"boolean"!=typeof i.secondValue&&"number"!=typeof i.secondValue)throw new Error("Metadata keyvalue secondValue must be a string, boolean, or number");a[n]={value:i.value,op:i.op,secondValue:i.secondValue};break;case"like":case"notLike":case"iLike":case"notILike":case"regexp":case"iRegexp":a[n]={value:i.value,op:i.op};break;default:throw new Error("keyValue op: ".concat(i.op," is not a valid op code"))}t+="metadata[keyvalues]=".concat(JSON.stringify(a))}))}}}return"".concat(e).concat(i).concat(t)}("".concat(o,"/data/pinList"),i);return new Promise((function(i,o){a.a.get(t,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while attempting to retrieve user pin list: ".concat(e))),i(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?o(new Error(e.response.data.error)):o(e)}))}))}function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e){var n=new Date(Date.parse(e));try{if(n.toISOString()===e)return e;throw new Error("dates must be in valid ISO_8601 format")}catch(e){throw new Error("dates must be in valid ISO_8601 format")}}function O(e,n,i){p(e,n);var t=function(e,n){if(!e)throw new Error("no baseUrl provided");var i="*",t="*",a="*",o="*",r="*",s="*",c="*",p="*",u=10,l=0,f="";if(n){if(n.hashContains){if("string"!=typeof n.hashContains)throw new Error("hashContains value is not a string");i=n.hashContains}if(n.pinStart&&(t=C(n.pinStart)),n.pinEnd&&(a=C(n.pinEnd)),n.unpinStart&&(o=C(n.unpinStart)),n.unpinEnd&&(r=C(n.unpinEnd)),n.pinSizeMin){if(isNaN(n.pinSizeMin)||n.pinSizeMin<0)throw new Error("Please make sure the pinSizeMin is a valid positive integer");s=n.pinSizeMin}if(n.pinSizeMax){if(isNaN(n.pinSizeMax)||n.pinSizeMax<0)throw new Error("Please make sure the pinSizeMax is a valid positive integer");c=n.pinSizeMax}if(n.pinFilter){if("all"!==n.pinFilter&&"pinned"!==n.pinFilter&&"unpinned"!==n.pinFilter)throw new Error("pinFilter value must be either: all, pinned, or unpinned");p=n.pinFilter}if(n.pageLimit){if(isNaN(n.pageLimit)||n.pageLimit<=0||n.pageLimit>1e3)throw new Error("Please make sure the pageLimit is a valid integer between 1-1000");u=parseInt(n.pageLimit)}if(n.pageOffset){if(isNaN(n.pageOffset)||n.pageOffset<=0)throw new Error("Please make sure the pageOffset is a positive integer");l=parseInt(n.pageOffset)}if(n.metadata){if("object"!==E(n.metadata))throw new Error("metadata value must be an object");if(n.metadata.name&&(f="?metadata[name]=".concat(n.metadata.name)),n.metadata.keyvalues){if("object"!==E(n.metadata.keyvalues))throw new Error("metadata keyvalues must be an object");var d={};Object.entries(n.metadata.keyvalues).forEach((function(e){var i=e[0],t=e[1];if("object"!==E(t))throw new Error("keyValue: ".concat(i," is not an object"));if(!t||!t.value||!t.op)throw new Error("keyValue: ".concat(i," must have both value and op attributes"));if("string"!=typeof t.value&&"boolean"!=typeof t.value&&"number"!=typeof t.value)throw new Error("Metadata keyvalue values must be strings, booleans, or numbers");switch(t.op){case"gt":case"gte":case"lt":case"lte":case"ne":case"eq":d[i]={value:t.value,op:t.op};break;case"between":if(!t.secondValue)throw new Error("Because between op code was passed in, keyValue: ".concat(e[0]," must have both also include a secondValue"));if("string"!=typeof t.secondValue&&"boolean"!=typeof t.secondValue&&"number"!=typeof t.secondValue)throw new Error("Metadata keyvalue secondValue must be a string, boolean, or number");d[i]={value:t.value,op:t.op,secondValue:t.secondValue};break;case"notBetween":if(!t.secondValue)throw new Error("Because notBetween op code was passed in, keyValue: ".concat(e[0]," must have both also include a secondValue"));if("string"!=typeof t.secondValue&&"boolean"!=typeof t.secondValue&&"number"!=typeof t.secondValue)throw new Error("Metadata keyvalue secondValue must be a string, boolean, or number");d[i]={value:t.value,op:t.op,secondValue:t.secondValue};break;case"like":case"notLike":case"iLike":case"notILike":case"regexp":case"iRegexp":d[i]={value:t.value,op:t.op};break;default:throw new Error("keyValue op: ".concat(t.op," is not a valid op code"))}f="".concat(f).concat(n.metadata.name?"&":"?","metadata[keyvalues]=").concat(JSON.stringify(d))}))}}}return"".concat(e,"/hashContains/").concat(i,"/pinStart/").concat(t,"/pinEnd/").concat(a,"/unpinStart/").concat(o,"/unpinEnd/").concat(r,"/pinSizeMin/").concat(s,"/pinSizeMax/").concat(c,"/pinFilter/").concat(p,"/pageLimit/").concat(u,"/pageOffset/").concat(l).concat(f)}("".concat(o,"/data/userPinList"),i);return new Promise((function(i,o){a.a.get(t,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while attempting to retrieve user pin list: ".concat(e))),i(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?o(new Error(e.response.data.error)):o(e)}))}))}function A(e,n){var i={};return i.addHashToPinQueue=function(i,t){return function(e,n,i,t){if(p(e,n),!i)throw new Error("hashToPin value is required for adding a hash to the pin queue");if(!s.a.cid(i))throw new Error("hashToPin value is an invalid IPFS CID");var r="".concat(o,"/pinning/addHashToPinQueue"),c={hashToPin:i};return t&&(t.host_nodes&&(u(t.host_nodes),c.host_nodes=t.host_nodes),t.pinataMetadata&&(l(t.pinataMetadata),c.pinataMetadata=t.pinataMetadata)),new Promise((function(i,t){a.a.post(r,c,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&t(new Error("unknown server response while adding to pin queue: ".concat(e))),i(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?t(new Error(e.response.data.error)):t(e)}))}))}(e,n,i,t)},i.pinFileToIPFS=function(i,t){return function(e,n,i,t){return p(e,n),new Promise((function(r,s){var c=new m.a;c.append("file",i);var p="".concat(o,"/pinning/pinFileToIPFS");i instanceof h.a.Readable||s(new Error("readStream is not a readable stream")),t&&(t.pinataMetadata&&(l(t.pinataMetadata),c.append("pinataMetadata",JSON.stringify(t.pinataMetadata))),t.pinataOptions&&(f(t.pinataOptions),c.append("pinataOptions",JSON.stringify(t.pinataOptions)))),a.a.post(p,c,{withCredentials:!0,maxContentLength:"Infinity",headers:{"Content-type":"multipart/form-data; boundary= ".concat(c._boundary),pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&s(new Error("unknown server response while pinning File to IPFS: ".concat(e))),r(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?s(new Error(e.response.data.error)):s(e)}))}))}(e,n,i,t)},i.pinFromFS=function(i,t){return function(e,n,i,t){return p(e,n),new Promise((function(r,s){var c="".concat(o,"/pinning/pinFileToIPFS");k.readdirr(i,(function(o,p,u){o&&s(new Error(o));var d=new m.a;u.forEach((function(e){d.append("file",g.createReadStream(e),{filepath:b()(i,e)})})),t&&(t.pinataMetadata&&(l(t.pinataMetadata),d.append("pinataMetadata",JSON.stringify(t.pinataMetadata))),t.pinataOptions&&(f(t.pinataOptions),d.append("pinataOptions",JSON.stringify(t.pinataOptions)))),a.a.post(c,d,{withCredentials:!0,maxContentLength:"Infinity",headers:{"Content-type":"multipart/form-data; boundary= ".concat(d._boundary),pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&s(new Error("unknown server response while pinning File to IPFS: ".concat(e))),r(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?s(new Error(e.response.data.error)):s(e)}))}))}))}(e,n,i,t)},i.pinJSONToIPFS=function(i,t){return function(e,n,i,t){p(e,n);var r=i;if("object"!==y(i))throw new Error("body must be a valid JSON object");t&&(r={pinataContent:i},t.pinataMetadata&&(l(t.pinataMetadata),r.pinataMetadata=t.pinataMetadata),t.pinataOptions&&(f(t.pinataOptions),r.pinataOptions=t.pinataOptions));var s="".concat(o,"/pinning/pinJSONToIPFS");return new Promise((function(i,t){a.a.post(s,r,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&t(new Error("unknown server response while pinning JSON to IPFS: ".concat(e))),i(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?t(new Error(e.response.data.error)):t(e)}))}))}(e,n,i,t)},i.pinHashToIPFS=function(i,t){return function(e,n,i,t){if(p(e,n),!i)throw new Error("hashToPin value is required for adding a hash to the pin queue");if(!s.a.cid(i))throw new Error("hashToPin value is an invalid IPFS CID");var r="".concat(o,"/pinning/pinHashToIPFS"),c={hashToPin:i};return t&&(t.host_nodes&&(u(t.host_nodes),c.host_nodes=t.host_nodes),t.pinataMetadata&&(l(t.pinataMetadata),c.pinataMetadata=t.pinataMetadata)),new Promise((function(i,t){a.a.post(r,c,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&t(new Error("unknown server response while pinning hash to IPFS: ".concat(e))),i(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?t(new Error(e.response.data.error)):t(e)}))}))}(e,n,i,t)},i.pinJobs=function(i){return w(e,n,i)},i.removePinFromIPFS=function(i){return function(e,n,i){if(p(e,n),!i)throw new Error("ipfsPinHash value is required for removing a pin from Pinata");if(!s.a.cid(i))throw new Error("".concat(i," is an invalid IPFS CID"));var t="".concat(o,"/pinning/removePinFromIPFS"),r={ipfs_pin_hash:i};return new Promise((function(i,o){a.a.post(t,r,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while removing pin from IPFS: ".concat(e))),i(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?o(new Error(e.response.data.error)):o(e)}))}))}(e,n,i)},i.testAuthentication=function(){return function(e,n){p(e,n);var i="".concat(o,"/data/testAuthentication");return new Promise((function(t,o){a.a.get(i,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while authenticating: ".concat(e))),t({authenticated:!0})})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?o(new Error(e.response.data.error)):o(e)}))}))}(e,n)},i.pinList=function(i){return j(e,n,i)},i.userPinList=function(i){return O(e,n,i)},i.userPinnedDataTotal=function(){return function(e,n){p(e,n);var i="".concat(o,"/data/userPinnedDataTotal");return new Promise((function(t,o){a.a.get(i,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while attempting to retrieve pinned data total: ".concat(e))),t(e.data)})).catch((function(e){e&&e.response&&e.response&&e.response.data&&e.response.data.error?o(new Error(e.response.data.error)):o(e)}))}))}(e,n)},i}i.d(n,"default",(function(){return A}))}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,